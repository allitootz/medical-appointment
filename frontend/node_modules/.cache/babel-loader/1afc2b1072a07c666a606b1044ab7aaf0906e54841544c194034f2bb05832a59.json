{"ast":null,"code":"var _jsxFileName = \"E:\\\\School\\\\School\\\\Integrative Programming\\\\medical-appointment\\\\frontend\\\\src\\\\components\\\\patient\\\\patientinformation\\\\Immunization\\\\Immunization.jsx\";\nimport React from 'react';\nimport { Container, Table } from 'react-bootstrap';\nimport moment from 'moment';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst Immunization = ({\n  immunizations\n}) => {\n  // Sort immunizations by date in descending order (recent first)\n  const sortedImmunizations = [...immunizations].sort((a, b) => new Date(b.createdAt) - new Date(a.createdAt));\n  return /*#__PURE__*/_jsxDEV(Container, {\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      className: \"my-4\",\n      children: \"Immunization Records\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 13,\n      columnNumber: 13\n    }, this), sortedImmunizations.length > 0 ? /*#__PURE__*/_jsxDEV(Table, {\n      responsive: true,\n      striped: true,\n      variant: \"light\",\n      className: \"mt-3\",\n      children: [/*#__PURE__*/_jsxDEV(\"thead\", {\n        children: /*#__PURE__*/_jsxDEV(\"tr\", {\n          children: [/*#__PURE__*/_jsxDEV(\"th\", {\n            children: \"Date Administered\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 18,\n            columnNumber: 29\n          }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n            children: \"Vaccine Name\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 19,\n            columnNumber: 29\n          }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n            children: \"Administered By\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 20,\n            columnNumber: 29\n          }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n            children: \"Dose\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 21,\n            columnNumber: 29\n          }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n            children: \"Route\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 22,\n            columnNumber: 29\n          }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n            children: \"Site\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 23,\n            columnNumber: 29\n          }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n            children: \"Lot Number\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 24,\n            columnNumber: 29\n          }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n            children: \"Expiration Date\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 25,\n            columnNumber: 29\n          }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n            children: \"Remarks\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 26,\n            columnNumber: 29\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 17,\n          columnNumber: 25\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 16,\n        columnNumber: 21\n      }, this), /*#__PURE__*/_jsxDEV(\"tbody\", {\n        children: sortedImmunizations.map(immunization => {\n          // Check if doctor details are available\n          const doctorFullname = immunization.administeredBy ? `${immunization.administeredBy.dr_firstName} ${immunization.administeredBy.dr_lastName}` : 'Doctor not available';\n          return /*#__PURE__*/_jsxDEV(\"tr\", {\n            children: [/*#__PURE__*/_jsxDEV(\"td\", {\n              children: moment(immunization.dateAdministered).format('MMMM DD, YYYY')\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 38,\n              columnNumber: 37\n            }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n              children: immunization.vaccineName\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 39,\n              columnNumber: 37\n            }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n              children: doctorFullname\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 40,\n              columnNumber: 37\n            }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n              children: immunization.dose || immunization.doseNumber\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 41,\n              columnNumber: 37\n            }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n              children: immunization.route || immunization.routeOfAdministration\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 42,\n              columnNumber: 37\n            }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n              children: immunization.site || immunization.siteOfAdministration\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 43,\n              columnNumber: 37\n            }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n              children: immunization.lotNumber || 'N/A'\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 44,\n              columnNumber: 37\n            }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n              children: moment(immunization.expirationDate).format('MMMM DD, YYYY')\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 45,\n              columnNumber: 37\n            }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n              children: immunization.remarks || immunization.notes || 'No remarks available'\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 46,\n              columnNumber: 37\n            }, this)]\n          }, immunization._id, true, {\n            fileName: _jsxFileName,\n            lineNumber: 37,\n            columnNumber: 33\n          }, this);\n        })\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 29,\n        columnNumber: 21\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 15,\n      columnNumber: 17\n    }, this) : /*#__PURE__*/_jsxDEV(\"p\", {\n      children: \"No immunization records found.\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 53,\n      columnNumber: 17\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 12,\n    columnNumber: 9\n  }, this);\n};\n_c = Immunization;\nexport default Immunization;\nvar _c;\n$RefreshReg$(_c, \"Immunization\");","map":{"version":3,"names":["React","Container","Table","moment","jsxDEV","_jsxDEV","Immunization","immunizations","sortedImmunizations","sort","a","b","Date","createdAt","children","className","fileName","_jsxFileName","lineNumber","columnNumber","length","responsive","striped","variant","map","immunization","doctorFullname","administeredBy","dr_firstName","dr_lastName","dateAdministered","format","vaccineName","dose","doseNumber","route","routeOfAdministration","site","siteOfAdministration","lotNumber","expirationDate","remarks","notes","_id","_c","$RefreshReg$"],"sources":["E:/School/School/Integrative Programming/medical-appointment/frontend/src/components/patient/patientinformation/Immunization/Immunization.jsx"],"sourcesContent":["import React from 'react';\r\nimport { Container, Table } from 'react-bootstrap';\r\nimport moment from 'moment';\r\n\r\nconst Immunization = ({ immunizations }) => {\r\n    // Sort immunizations by date in descending order (recent first)\r\n    const sortedImmunizations = [...immunizations].sort(\r\n        (a, b) => new Date(b.createdAt) - new Date(a.createdAt)\r\n    );\r\n    \r\n    return (\r\n        <Container>\r\n            <h1 className=\"my-4\">Immunization Records</h1>\r\n            {sortedImmunizations.length > 0 ? (\r\n                <Table responsive striped variant=\"light\" className=\"mt-3\">\r\n                    <thead>\r\n                        <tr>\r\n                            <th>Date Administered</th>\r\n                            <th>Vaccine Name</th>\r\n                            <th>Administered By</th>\r\n                            <th>Dose</th>\r\n                            <th>Route</th>\r\n                            <th>Site</th>\r\n                            <th>Lot Number</th>\r\n                            <th>Expiration Date</th>\r\n                            <th>Remarks</th>\r\n                        </tr>\r\n                    </thead>\r\n                    <tbody>\r\n                        {sortedImmunizations.map((immunization) => {\r\n                            // Check if doctor details are available\r\n                            const doctorFullname = immunization.administeredBy\r\n                                ? `${immunization.administeredBy.dr_firstName} ${immunization.administeredBy.dr_lastName}`\r\n                                : 'Doctor not available';\r\n\r\n                            return (\r\n                                <tr key={immunization._id}>\r\n                                    <td>{moment(immunization.dateAdministered).format('MMMM DD, YYYY')}</td>\r\n                                    <td>{immunization.vaccineName}</td>\r\n                                    <td>{doctorFullname}</td>\r\n                                    <td>{immunization.dose || immunization.doseNumber}</td>\r\n                                    <td>{immunization.route || immunization.routeOfAdministration}</td>\r\n                                    <td>{immunization.site || immunization.siteOfAdministration}</td>\r\n                                    <td>{immunization.lotNumber || 'N/A'}</td>\r\n                                    <td>{moment(immunization.expirationDate).format('MMMM DD, YYYY')}</td>\r\n                                    <td>{immunization.remarks || immunization.notes || 'No remarks available'}</td>\r\n                                </tr>\r\n                            );\r\n                        })}\r\n                    </tbody>\r\n                </Table>\r\n            ) : (\r\n                <p>No immunization records found.</p>\r\n            )}\r\n        </Container>\r\n    );\r\n};\r\n\r\nexport default Immunization;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}