{"ast":null,"code":"var _jsxFileName = \"E:\\\\School\\\\School\\\\Integrative Programming\\\\medical-appointment\\\\src\\\\components\\\\practitioner\\\\patientinformation\\\\laboratory\\\\LaboratoryHistory.jsx\",\n  _s = $RefreshSig$();\nimport React from \"react\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst [theLaboratory, setLaboratory] = useState([]);\nconst LaboratoryHistory = ({\n  pid\n}) => {\n  _s();\n  useEffect(() => {\n    axios.get(`http://localhost:8000/patient/api/onepatient/${pid}`).then(res => {\n      console.log(res.data); // Log the entire response to understand its structure\n      if (res.data && res.data.thePatient && Array.isArray(res.data.thePatient.patient_appointments)) {\n        setLaboratory(res.data.thePatient.patient_appointments);\n      } else {\n        setLaboratory([]);\n      }\n    }).catch(err => {\n      console.log(err);\n      setError('Failed to fetch laboratory results');\n      setLaboratory([]); // In case of error, set to empty array\n    });\n  }, [pid]);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: \"Hello po\"\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 24,\n    columnNumber: 9\n  }, this);\n};\n_s(LaboratoryHistory, \"OD7bBpZva5O2jO+Puf00hKivP7c=\");\n_c = LaboratoryHistory;\nexport default LaboratoryHistory;\nvar _c;\n$RefreshReg$(_c, \"LaboratoryHistory\");","map":{"version":3,"names":["React","jsxDEV","_jsxDEV","theLaboratory","setLaboratory","useState","LaboratoryHistory","pid","_s","useEffect","axios","get","then","res","console","log","data","thePatient","Array","isArray","patient_appointments","catch","err","setError","children","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["E:/School/School/Integrative Programming/medical-appointment/src/components/practitioner/patientinformation/laboratory/LaboratoryHistory.jsx"],"sourcesContent":["import React from \"react\";\r\nconst [theLaboratory, setLaboratory] = useState([]);\r\n\r\nconst LaboratoryHistory = ({pid}) => {\r\n    useEffect(() => {\r\n        axios.get(`http://localhost:8000/patient/api/onepatient/${pid}`)\r\n            .then((res) => {\r\n                console.log(res.data);  // Log the entire response to understand its structure\r\n                if (res.data && res.data.thePatient && Array.isArray(res.data.thePatient.patient_appointments)) {\r\n                    setLaboratory(res.data.thePatient.patient_appointments);\r\n                  \r\n                } else {\r\n                    setLaboratory([]);\r\n                  \r\n                }\r\n            })\r\n            .catch((err) => {\r\n                console.log(err);\r\n                setError('Failed to fetch laboratory results');\r\n                setLaboratory([]);  // In case of error, set to empty array\r\n            });\r\n    }, [pid]);\r\n    return (\r\n        <div>\r\n            Hello po\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default LaboratoryHistory;"],"mappings":";;AAAA,OAAOA,KAAK,MAAM,OAAO;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAC1B,MAAM,CAACC,aAAa,EAAEC,aAAa,CAAC,GAAGC,QAAQ,CAAC,EAAE,CAAC;AAEnD,MAAMC,iBAAiB,GAAGA,CAAC;EAACC;AAAG,CAAC,KAAK;EAAAC,EAAA;EACjCC,SAAS,CAAC,MAAM;IACZC,KAAK,CAACC,GAAG,CAAC,gDAAgDJ,GAAG,EAAE,CAAC,CAC3DK,IAAI,CAAEC,GAAG,IAAK;MACXC,OAAO,CAACC,GAAG,CAACF,GAAG,CAACG,IAAI,CAAC,CAAC,CAAE;MACxB,IAAIH,GAAG,CAACG,IAAI,IAAIH,GAAG,CAACG,IAAI,CAACC,UAAU,IAAIC,KAAK,CAACC,OAAO,CAACN,GAAG,CAACG,IAAI,CAACC,UAAU,CAACG,oBAAoB,CAAC,EAAE;QAC5FhB,aAAa,CAACS,GAAG,CAACG,IAAI,CAACC,UAAU,CAACG,oBAAoB,CAAC;MAE3D,CAAC,MAAM;QACHhB,aAAa,CAAC,EAAE,CAAC;MAErB;IACJ,CAAC,CAAC,CACDiB,KAAK,CAAEC,GAAG,IAAK;MACZR,OAAO,CAACC,GAAG,CAACO,GAAG,CAAC;MAChBC,QAAQ,CAAC,oCAAoC,CAAC;MAC9CnB,aAAa,CAAC,EAAE,CAAC,CAAC,CAAE;IACxB,CAAC,CAAC;EACV,CAAC,EAAE,CAACG,GAAG,CAAC,CAAC;EACT,oBACIL,OAAA;IAAAsB,QAAA,EAAK;EAEL;IAAAC,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OAAK,CAAC;AAEd,CAAC;AAACpB,EAAA,CAxBIF,iBAAiB;AAAAuB,EAAA,GAAjBvB,iBAAiB;AA0BvB,eAAeA,iBAAiB;AAAC,IAAAuB,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}