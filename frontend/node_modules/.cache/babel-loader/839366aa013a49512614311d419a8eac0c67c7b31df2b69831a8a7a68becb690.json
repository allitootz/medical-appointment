{"ast":null,"code":"var _jsxFileName = \"E:\\\\School\\\\School\\\\Integrative Programming\\\\medical-appointment\\\\src\\\\components\\\\staffs\\\\admin\\\\specialtyandservices\\\\ManageServices.jsx\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport axios from 'axios';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction ManageServices() {\n  _s();\n  const [services, setServices] = useState([]);\n  const [newService, setNewService] = useState({\n    name: '',\n    description: '',\n    category: '',\n    availability: 'Available',\n    requirements: '',\n    doctors: []\n  });\n  const [editingService, setEditingService] = useState(null);\n\n  // Fetch services when the component loads\n  useEffect(() => {\n    fetchServices();\n  }, []);\n  const fetchServices = async () => {\n    try {\n      const response = await axios.get('http://localhost:8000/admin/getall/services');\n      setServices(response.data);\n    } catch (error) {\n      console.error('Error fetching services:', error);\n    }\n  };\n\n  // Handle form input changes\n  const handleInputChange = e => {\n    const {\n      name,\n      value\n    } = e.target;\n    setNewService({\n      ...newService,\n      [name]: value\n    });\n  };\n\n  // Handle form submission for adding a new service\n  const handleAddService = async e => {\n    e.preventDefault();\n    try {\n      await axios.post('http://localhost:8000/admin/add/services', newService);\n      setNewService({\n        name: '',\n        description: '',\n        category: '',\n        availability: 'Available',\n        requirements: '',\n        doctors: []\n      });\n      fetchServices(); // Refresh the list\n    } catch (error) {\n      console.error('Error adding service:', error);\n    }\n  };\n\n  // Handle delete service\n  const handleDeleteService = async id => {\n    try {\n      await axios.delete(`http://localhost:8000/admin/delete/services/${id}`);\n      fetchServices(); // Refresh the list\n    } catch (error) {\n      console.error('Error deleting service:', error);\n    }\n  };\n\n  // Handle updating service\n  const handleUpdateService = async e => {\n    e.preventDefault();\n    try {\n      await axios.put(`http://localhost:8000/admin/update/services/${editingService._id}`, editingService);\n      setEditingService(null);\n      fetchServices(); // Refresh the list\n    } catch (error) {\n      console.error('Error updating service:', error);\n    }\n  };\n\n  // Edit button clicked\n  const handleEditClick = service => {\n    setEditingService(service);\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      children: \"Manage Services\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 81,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"ul\", {\n      children: services.map(service => /*#__PURE__*/_jsxDEV(\"li\", {\n        children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n          children: service.name\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 87,\n          columnNumber: 13\n        }, this), \" - \", service.description, \" - \", service.category, \" - \", service.availability, /*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: () => handleEditClick(service),\n          children: \"Edit\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 88,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: () => handleDeleteService(service._id),\n          children: \"Delete\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 89,\n          columnNumber: 13\n        }, this)]\n      }, service._id, true, {\n        fileName: _jsxFileName,\n        lineNumber: 86,\n        columnNumber: 11\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 84,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"h3\", {\n      children: editingService ? 'Edit Service' : 'Add New Service'\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 95,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n      onSubmit: editingService ? handleUpdateService : handleAddService,\n      children: [/*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        name: \"name\",\n        value: editingService ? editingService.name : newService.name,\n        onChange: editingService ? e => setEditingService({\n          ...editingService,\n          name: e.target.value\n        }) : handleInputChange,\n        placeholder: \"Service Name\",\n        required: true\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 97,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        name: \"description\",\n        value: editingService ? editingService.description : newService.description,\n        onChange: editingService ? e => setEditingService({\n          ...editingService,\n          description: e.target.value\n        }) : handleInputChange,\n        placeholder: \"Description\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 105,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        name: \"category\",\n        value: editingService ? editingService.category : newService.category,\n        onChange: editingService ? e => setEditingService({\n          ...editingService,\n          category: e.target.value\n        }) : handleInputChange,\n        placeholder: \"Category\",\n        required: true\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 112,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"select\", {\n        name: \"availability\",\n        value: editingService ? editingService.availability : newService.availability,\n        onChange: editingService ? e => setEditingService({\n          ...editingService,\n          availability: e.target.value\n        }) : handleInputChange,\n        children: [/*#__PURE__*/_jsxDEV(\"option\", {\n          value: \"Available\",\n          children: \"Available\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 125,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n          value: \"Not Available\",\n          children: \"Not Available\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 126,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n          value: \"Coming Soon\",\n          children: \"Coming Soon\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 127,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 120,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"textarea\", {\n        name: \"requirements\",\n        value: editingService ? editingService.requirements : newService.requirements,\n        onChange: editingService ? e => setEditingService({\n          ...editingService,\n          requirements: e.target.value\n        }) : handleInputChange,\n        placeholder: \"Requirements\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 129,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        type: \"submit\",\n        children: editingService ? 'Update' : 'Add'\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 135,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 96,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 80,\n    columnNumber: 5\n  }, this);\n}\n_s(ManageServices, \"Ra4J2CJJH7RjOeVa+pH3QnO6qUI=\");\n_c = ManageServices;\nexport default ManageServices;\nvar _c;\n$RefreshReg$(_c, \"ManageServices\");","map":{"version":3,"names":["React","useState","useEffect","axios","jsxDEV","_jsxDEV","ManageServices","_s","services","setServices","newService","setNewService","name","description","category","availability","requirements","doctors","editingService","setEditingService","fetchServices","response","get","data","error","console","handleInputChange","e","value","target","handleAddService","preventDefault","post","handleDeleteService","id","delete","handleUpdateService","put","_id","handleEditClick","service","children","fileName","_jsxFileName","lineNumber","columnNumber","map","onClick","onSubmit","type","onChange","placeholder","required","_c","$RefreshReg$"],"sources":["E:/School/School/Integrative Programming/medical-appointment/src/components/staffs/admin/specialtyandservices/ManageServices.jsx"],"sourcesContent":["import React, { useState, useEffect } from 'react';\r\nimport axios from 'axios';\r\n\r\nfunction ManageServices() {\r\n  const [services, setServices] = useState([]);\r\n  const [newService, setNewService] = useState({\r\n    name: '',\r\n    description: '',\r\n    category: '',\r\n    availability: 'Available',\r\n    requirements: '',\r\n    doctors: [],\r\n  });\r\n  \r\n  const [editingService, setEditingService] = useState(null);\r\n\r\n  // Fetch services when the component loads\r\n  useEffect(() => {\r\n    fetchServices();\r\n  }, []);\r\n\r\n  const fetchServices = async () => {\r\n    try {\r\n      const response = await axios.get('http://localhost:8000/admin/getall/services');\r\n      setServices(response.data);\r\n    } catch (error) {\r\n      console.error('Error fetching services:', error);\r\n    }\r\n  };\r\n\r\n  // Handle form input changes\r\n  const handleInputChange = (e) => {\r\n    const { name, value } = e.target;\r\n    setNewService({\r\n      ...newService,\r\n      [name]: value,\r\n    });\r\n  };\r\n\r\n  // Handle form submission for adding a new service\r\n  const handleAddService = async (e) => {\r\n    e.preventDefault();\r\n    try {\r\n      await axios.post('http://localhost:8000/admin/add/services', newService);\r\n      setNewService({ name: '', description: '', category: '', availability: 'Available', requirements: '', doctors: [] });\r\n      fetchServices(); // Refresh the list\r\n    } catch (error) {\r\n      console.error('Error adding service:', error);\r\n    }\r\n  };\r\n\r\n  // Handle delete service\r\n  const handleDeleteService = async (id) => {\r\n    try {\r\n      await axios.delete(`http://localhost:8000/admin/delete/services/${id}`);\r\n      fetchServices(); // Refresh the list\r\n    } catch (error) {\r\n      console.error('Error deleting service:', error);\r\n    }\r\n  };\r\n\r\n  // Handle updating service\r\n  const handleUpdateService = async (e) => {\r\n    e.preventDefault();\r\n    try {\r\n      await axios.put(`http://localhost:8000/admin/update/services/${editingService._id}`, editingService);\r\n      setEditingService(null);\r\n      fetchServices(); // Refresh the list\r\n    } catch (error) {\r\n      console.error('Error updating service:', error);\r\n    }\r\n  };\r\n\r\n  // Edit button clicked\r\n  const handleEditClick = (service) => {\r\n    setEditingService(service);\r\n  };\r\n\r\n  return (\r\n    <div>\r\n      <h2>Manage Services</h2>\r\n\r\n      {/* Display list of services */}\r\n      <ul>\r\n        {services.map((service) => (\r\n          <li key={service._id}>\r\n            <strong>{service.name}</strong> - {service.description} - {service.category} - {service.availability}\r\n            <button onClick={() => handleEditClick(service)}>Edit</button>\r\n            <button onClick={() => handleDeleteService(service._id)}>Delete</button>\r\n          </li>\r\n        ))}\r\n      </ul>\r\n\r\n      {/* Add new service form */}\r\n      <h3>{editingService ? 'Edit Service' : 'Add New Service'}</h3>\r\n      <form onSubmit={editingService ? handleUpdateService : handleAddService}>\r\n        <input\r\n          type=\"text\"\r\n          name=\"name\"\r\n          value={editingService ? editingService.name : newService.name}\r\n          onChange={editingService ? (e) => setEditingService({ ...editingService, name: e.target.value }) : handleInputChange}\r\n          placeholder=\"Service Name\"\r\n          required\r\n        />\r\n        <input\r\n          type=\"text\"\r\n          name=\"description\"\r\n          value={editingService ? editingService.description : newService.description}\r\n          onChange={editingService ? (e) => setEditingService({ ...editingService, description: e.target.value }) : handleInputChange}\r\n          placeholder=\"Description\"\r\n        />\r\n        <input\r\n          type=\"text\"\r\n          name=\"category\"\r\n          value={editingService ? editingService.category : newService.category}\r\n          onChange={editingService ? (e) => setEditingService({ ...editingService, category: e.target.value }) : handleInputChange}\r\n          placeholder=\"Category\"\r\n          required\r\n        />\r\n        <select\r\n          name=\"availability\"\r\n          value={editingService ? editingService.availability : newService.availability}\r\n          onChange={editingService ? (e) => setEditingService({ ...editingService, availability: e.target.value }) : handleInputChange}\r\n        >\r\n          <option value=\"Available\">Available</option>\r\n          <option value=\"Not Available\">Not Available</option>\r\n          <option value=\"Coming Soon\">Coming Soon</option>\r\n        </select>\r\n        <textarea\r\n          name=\"requirements\"\r\n          value={editingService ? editingService.requirements : newService.requirements}\r\n          onChange={editingService ? (e) => setEditingService({ ...editingService, requirements: e.target.value }) : handleInputChange}\r\n          placeholder=\"Requirements\"\r\n        />\r\n        <button type=\"submit\">{editingService ? 'Update' : 'Add'}</button>\r\n      </form>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default ManageServices;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}