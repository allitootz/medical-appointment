{"ast":null,"code":"var _jsxFileName = \"E:\\\\School\\\\School\\\\Integrative Programming\\\\medical-appointment\\\\src\\\\components\\\\practitioner\\\\accountinfo\\\\modal\\\\CropResizeTiltModal.jsx\",\n  _s = $RefreshSig$();\nimport React, { useState, useCallback } from 'react';\nimport Modal from 'react-modal';\nimport Cropper from 'react-easy-crop';\nimport { Button, Form } from \"react-bootstrap\";\nimport './UploadImageModal.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst CropResizeTiltModal = ({\n  isOpen,\n  onRequestClose,\n  imageSrc,\n  onSave\n}) => {\n  _s();\n  const [crop, setCrop] = useState({\n    x: 0,\n    y: 0\n  });\n  const [zoom, setZoom] = useState(1);\n  const [rotation, setRotation] = useState(0);\n  const [croppedAreaPixels, setCroppedAreaPixels] = useState(null);\n  const onCropComplete = useCallback((croppedArea, croppedAreaPixels) => {\n    setCroppedAreaPixels(croppedAreaPixels);\n  }, []);\n\n  // Helper function to create an image from a URL\n  const createImage = url => new Promise((resolve, reject) => {\n    const image = new Image();\n    image.addEventListener('load', () => resolve(image));\n    image.addEventListener('error', error => reject(error));\n    image.setAttribute('crossOrigin', 'anonymous');\n    image.src = url;\n  });\n\n  // Function to get the cropped image\n  const getCroppedImg = async (imageSrc, croppedAreaPixels, rotation = 0) => {\n    const image = await createImage(imageSrc);\n    const canvas = document.createElement('canvas');\n    const ctx = canvas.getContext('2d');\n\n    // Set canvas size to the cropped area\n    canvas.width = croppedAreaPixels.width;\n    canvas.height = croppedAreaPixels.height;\n\n    // Draw the rotated image\n    ctx.translate(canvas.width / 2, canvas.height / 2);\n    ctx.rotate(rotation * Math.PI / 180);\n    ctx.translate(-canvas.width / 2, -canvas.height / 2);\n    ctx.drawImage(image, croppedAreaPixels.x, croppedAreaPixels.y, croppedAreaPixels.width, croppedAreaPixels.height, 0, 0, canvas.width, canvas.height);\n\n    // Return the cropped image as a base64 string\n    return new Promise(resolve => {\n      canvas.toBlob(blob => {\n        const fileReader = new FileReader();\n        fileReader.readAsDataURL(blob);\n        fileReader.onloadend = () => resolve(fileReader.result); // Convert Blob to base64\n      });\n    });\n  };\n  const handleSave = async () => {\n    const croppedImageSrc = await getCroppedImg(imageSrc, croppedAreaPixels, rotation);\n    onSave(croppedImageSrc); // Pass the cropped image back to the parent component\n    onRequestClose(); // Close the modal after saving\n  };\n  return /*#__PURE__*/_jsxDEV(Modal, {\n    isOpen: isOpen,\n    onRequestClose: onRequestClose,\n    contentLabel: \"Edit Image\",\n    className: \"image-edit-modal\",\n    overlayClassName: \"modal-overlay\",\n    ariaHideApp: false,\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"modal-content\",\n      children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n        children: \"Edit Image\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 79,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"crop-container\",\n        children: /*#__PURE__*/_jsxDEV(Cropper, {\n          image: imageSrc,\n          crop: crop,\n          zoom: zoom,\n          rotation: rotation,\n          aspect: 1,\n          cropShape: \"round\",\n          showGrid: false,\n          onCropChange: setCrop,\n          onZoomChange: setZoom,\n          onRotationChange: setRotation,\n          onCropComplete: onCropComplete\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 81,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 80,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"controls\",\n        children: [/*#__PURE__*/_jsxDEV(Form.Label, {\n          children: \"Zoom\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 97,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Form.Control, {\n          type: \"range\",\n          value: zoom,\n          min: \"1\",\n          max: \"3\",\n          step: \"0.1\",\n          \"aria-labelledby\": \"Zoom\",\n          onChange: e => setZoom(e.target.value)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 98,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Form.Label, {\n          children: \"Rotation\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 107,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Form.Control, {\n          type: \"range\",\n          value: rotation,\n          min: \"0\",\n          max: \"360\",\n          step: \"1\",\n          \"aria-labelledby\": \"Rotation\",\n          onChange: e => setRotation(e.target.value)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 108,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 96,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Button, {\n        style: {\n          marginTop: \"15px\"\n        },\n        onClick: handleSave,\n        children: \"Save\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 119,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 78,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 70,\n    columnNumber: 5\n  }, this);\n};\n_s(CropResizeTiltModal, \"J+fVfpH1UI+xKbppI0+OZXYWN3I=\");\n_c = CropResizeTiltModal;\nexport default CropResizeTiltModal;\nvar _c;\n$RefreshReg$(_c, \"CropResizeTiltModal\");","map":{"version":3,"names":["React","useState","useCallback","Modal","Cropper","Button","Form","jsxDEV","_jsxDEV","CropResizeTiltModal","isOpen","onRequestClose","imageSrc","onSave","_s","crop","setCrop","x","y","zoom","setZoom","rotation","setRotation","croppedAreaPixels","setCroppedAreaPixels","onCropComplete","croppedArea","createImage","url","Promise","resolve","reject","image","Image","addEventListener","error","setAttribute","src","getCroppedImg","canvas","document","createElement","ctx","getContext","width","height","translate","rotate","Math","PI","drawImage","toBlob","blob","fileReader","FileReader","readAsDataURL","onloadend","result","handleSave","croppedImageSrc","contentLabel","className","overlayClassName","ariaHideApp","children","fileName","_jsxFileName","lineNumber","columnNumber","aspect","cropShape","showGrid","onCropChange","onZoomChange","onRotationChange","Label","Control","type","value","min","max","step","onChange","e","target","style","marginTop","onClick","_c","$RefreshReg$"],"sources":["E:/School/School/Integrative Programming/medical-appointment/src/components/practitioner/accountinfo/modal/CropResizeTiltModal.jsx"],"sourcesContent":["import React, { useState, useCallback } from 'react';\r\nimport Modal from 'react-modal';\r\nimport Cropper from 'react-easy-crop';\r\nimport { Button, Form } from \"react-bootstrap\";\r\nimport './UploadImageModal.css';\r\n\r\nconst CropResizeTiltModal = ({ isOpen, onRequestClose, imageSrc, onSave }) => {\r\n  const [crop, setCrop] = useState({ x: 0, y: 0 });\r\n  const [zoom, setZoom] = useState(1);\r\n  const [rotation, setRotation] = useState(0);\r\n  const [croppedAreaPixels, setCroppedAreaPixels] = useState(null);\r\n\r\n  const onCropComplete = useCallback((croppedArea, croppedAreaPixels) => {\r\n    setCroppedAreaPixels(croppedAreaPixels);\r\n  }, []);\r\n\r\n  // Helper function to create an image from a URL\r\n  const createImage = (url) =>\r\n    new Promise((resolve, reject) => {\r\n      const image = new Image();\r\n      image.addEventListener('load', () => resolve(image));\r\n      image.addEventListener('error', (error) => reject(error));\r\n      image.setAttribute('crossOrigin', 'anonymous');\r\n      image.src = url;\r\n    });\r\n\r\n  // Function to get the cropped image\r\n  const getCroppedImg = async (imageSrc, croppedAreaPixels, rotation = 0) => {\r\n    const image = await createImage(imageSrc);\r\n    const canvas = document.createElement('canvas');\r\n    const ctx = canvas.getContext('2d');\r\n\r\n    // Set canvas size to the cropped area\r\n    canvas.width = croppedAreaPixels.width;\r\n    canvas.height = croppedAreaPixels.height;\r\n\r\n    // Draw the rotated image\r\n    ctx.translate(canvas.width / 2, canvas.height / 2);\r\n    ctx.rotate((rotation * Math.PI) / 180);\r\n    ctx.translate(-canvas.width / 2, -canvas.height / 2);\r\n    ctx.drawImage(\r\n      image,\r\n      croppedAreaPixels.x,\r\n      croppedAreaPixels.y,\r\n      croppedAreaPixels.width,\r\n      croppedAreaPixels.height,\r\n      0,\r\n      0,\r\n      canvas.width,\r\n      canvas.height\r\n    );\r\n\r\n    // Return the cropped image as a base64 string\r\n    return new Promise((resolve) => {\r\n      canvas.toBlob((blob) => {\r\n        const fileReader = new FileReader();\r\n        fileReader.readAsDataURL(blob);\r\n        fileReader.onloadend = () => resolve(fileReader.result); // Convert Blob to base64\r\n      });\r\n    });\r\n  };\r\n\r\n  const handleSave = async () => {\r\n    const croppedImageSrc = await getCroppedImg(imageSrc, croppedAreaPixels, rotation);\r\n    onSave(croppedImageSrc); // Pass the cropped image back to the parent component\r\n    onRequestClose(); // Close the modal after saving\r\n  };\r\n\r\n  return (\r\n    <Modal\r\n      isOpen={isOpen}\r\n      onRequestClose={onRequestClose}\r\n      contentLabel=\"Edit Image\"\r\n      className=\"image-edit-modal\"\r\n      overlayClassName=\"modal-overlay\"\r\n      ariaHideApp={false}\r\n    >\r\n      <div className=\"modal-content\">\r\n        <h2>Edit Image</h2>\r\n        <div className=\"crop-container\">\r\n          <Cropper\r\n            image={imageSrc}\r\n            crop={crop}\r\n            zoom={zoom}\r\n            rotation={rotation}\r\n            aspect={1}\r\n            cropShape=\"round\"\r\n            showGrid={false}\r\n            onCropChange={setCrop}\r\n            onZoomChange={setZoom}\r\n            onRotationChange={setRotation}\r\n            onCropComplete={onCropComplete}\r\n          />\r\n        </div>\r\n\r\n        <div className=\"controls\">\r\n          <Form.Label>Zoom</Form.Label>\r\n          <Form.Control\r\n            type=\"range\"\r\n            value={zoom}\r\n            min=\"1\"\r\n            max=\"3\"\r\n            step=\"0.1\"\r\n            aria-labelledby=\"Zoom\"\r\n            onChange={(e) => setZoom(e.target.value)}\r\n          />\r\n          <Form.Label>Rotation</Form.Label>\r\n          <Form.Control\r\n            type=\"range\"\r\n            value={rotation}\r\n            min=\"0\"\r\n            max=\"360\"\r\n            step=\"1\"\r\n            aria-labelledby=\"Rotation\"\r\n            onChange={(e) => setRotation(e.target.value)}\r\n          />\r\n        </div>\r\n\r\n        <Button style={{ marginTop: \"15px\" }} onClick={handleSave}>Save</Button>\r\n      </div>\r\n    </Modal>\r\n  );\r\n};\r\n\r\nexport default CropResizeTiltModal;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}