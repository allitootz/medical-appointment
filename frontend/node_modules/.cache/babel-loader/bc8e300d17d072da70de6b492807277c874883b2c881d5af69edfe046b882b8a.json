{"ast":null,"code":"var _jsxFileName = \"E:\\\\School\\\\School\\\\Integrative Programming\\\\medical-appointment\\\\src\\\\components\\\\practitioner\\\\patientinformation\\\\laboratory\\\\LaboratoryResults.jsx\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport { Form, Button, Table, Container, Row, Col } from 'react-bootstrap';\nimport axios from 'axios';\nimport laboratoryHistory from './LaboratoryHistory';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction LaboratoryResults({\n  patientId,\n  appointmentId\n}) {\n  _s();\n  const [formData, setFormData] = useState({\n    file: null\n  });\n  const [labResults, setLabResults] = useState([]);\n  const [error, setError] = useState(null);\n  const [success, setSuccess] = useState(null); // To show success message\n\n  useEffect(() => {\n    const fetchLabResults = async () => {\n      try {\n        const response = await axios.get(`http://localhost:8000/patient/${patientId}/appointments/${appointmentId}/labResults`);\n        setLabResults(response.data);\n        console.log(response.data);\n      } catch (err) {\n        setError('Failed to fetch laboratory results');\n      }\n    };\n    fetchLabResults();\n  }, [patientId, appointmentId]);\n\n  // Handle file input change\n  const handleFileChange = e => {\n    const file = e.target.files[0];\n    if (file && file.type !== 'application/pdf') {\n      setError('Only PDF files are allowed.');\n      setFormData({\n        ...formData,\n        file: null\n      });\n    } else {\n      setError(null); // Clear any previous errors\n      setFormData({\n        ...formData,\n        file: file\n      });\n    }\n  };\n\n  // Handle form submission (creating lab result with file upload)\n  const handleSubmit = async e => {\n    e.preventDefault();\n    setError(null); // Reset error state before submission\n    setSuccess(null); // Reset success state\n\n    if (!formData.file) {\n      setError('Please upload a PDF file.');\n      return;\n    }\n    const labData = new FormData();\n    labData.append('file', formData.file);\n\n    // Add an empty array for testResults if it's not being used\n    labData.append('testResults', JSON.stringify([]));\n    try {\n      await axios.post(`http://localhost:8000/doctor/api/createLaboratoryResult/${patientId}/${appointmentId}`, labData, {\n        headers: {\n          'Content-Type': 'multipart/form-data' // Ensure this is correctly set\n        }\n      });\n      setSuccess('Laboratory result uploaded successfully');\n      setFormData({\n        file: null\n      });\n    } catch (err) {\n      var _err$response;\n      setError('Failed to upload laboratory result');\n      console.error('Error uploading file:', ((_err$response = err.response) === null || _err$response === void 0 ? void 0 : _err$response.data) || err.message);\n    }\n  };\n\n  // Download file\n  const downloadFile = async resultId => {\n    try {\n      const response = await axios.get(`http://localhost:8000/doctor/api/laboratoryResult/download/${resultId}`, {\n        responseType: 'blob'\n      });\n      const url = window.URL.createObjectURL(new Blob([response.data]));\n      const link = document.createElement('a');\n      link.href = url;\n      link.setAttribute('download', 'laboratory_result.pdf'); // you can change this filename if necessary\n      document.body.appendChild(link);\n      link.click();\n    } catch (err) {\n      var _err$response2;\n      setError('Failed to download file');\n      console.error('Error downloading file:', ((_err$response2 = err.response) === null || _err$response2 === void 0 ? void 0 : _err$response2.data) || err.message);\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(Container, {\n    fluid: true,\n    children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n      children: \"Upload Laboratory Results\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 99,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(Row, {\n      children: [/*#__PURE__*/_jsxDEV(Col, {\n        children: /*#__PURE__*/_jsxDEV(LaboratoryResults, {\n          pid: patientId\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 107,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 106,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(Col, {\n        children: /*#__PURE__*/_jsxDEV(Form, {\n          onSubmit: handleSubmit,\n          children: [/*#__PURE__*/_jsxDEV(Form.Group, {\n            controlId: \"file\",\n            children: [/*#__PURE__*/_jsxDEV(Form.Label, {\n              children: \"Upload Laboratory Result (PDF Only)\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 112,\n              columnNumber: 29\n            }, this), /*#__PURE__*/_jsxDEV(Form.Control, {\n              type: \"file\",\n              accept: \"application/pdf\",\n              onChange: handleFileChange\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 113,\n              columnNumber: 29\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 111,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(Button, {\n            type: \"submit\",\n            variant: \"primary\",\n            className: \"mt-3\",\n            children: \"Upload Laboratory Result\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 120,\n            columnNumber: 25\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 110,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 109,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 105,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 98,\n    columnNumber: 9\n  }, this);\n}\n_s(LaboratoryResults, \"OkSETP1/zwAqWO5OE7mOc0VMs80=\");\n_c = LaboratoryResults;\nexport default LaboratoryResults;\nvar _c;\n$RefreshReg$(_c, \"LaboratoryResults\");","map":{"version":3,"names":["React","useState","useEffect","Form","Button","Table","Container","Row","Col","axios","laboratoryHistory","jsxDEV","_jsxDEV","LaboratoryResults","patientId","appointmentId","_s","formData","setFormData","file","labResults","setLabResults","error","setError","success","setSuccess","fetchLabResults","response","get","data","console","log","err","handleFileChange","e","target","files","type","handleSubmit","preventDefault","labData","FormData","append","JSON","stringify","post","headers","_err$response","message","downloadFile","resultId","responseType","url","window","URL","createObjectURL","Blob","link","document","createElement","href","setAttribute","body","appendChild","click","_err$response2","fluid","children","fileName","_jsxFileName","lineNumber","columnNumber","pid","onSubmit","Group","controlId","Label","Control","accept","onChange","variant","className","_c","$RefreshReg$"],"sources":["E:/School/School/Integrative Programming/medical-appointment/src/components/practitioner/patientinformation/laboratory/LaboratoryResults.jsx"],"sourcesContent":["import React, { useState, useEffect } from 'react';\r\nimport { Form, Button, Table, Container, Row, Col } from 'react-bootstrap';\r\nimport axios from 'axios';\r\nimport laboratoryHistory from './LaboratoryHistory';\r\nfunction LaboratoryResults({ patientId, appointmentId }) {\r\n    const [formData, setFormData] = useState({\r\n        file: null\r\n    });\r\n    const [labResults, setLabResults] = useState([]);\r\n    const [error, setError] = useState(null);\r\n    const [success, setSuccess] = useState(null); // To show success message\r\n\r\n   \r\n    useEffect(() => {\r\n        const fetchLabResults = async () => {\r\n            try {\r\n                const response = await axios.get(`http://localhost:8000/patient/${patientId}/appointments/${appointmentId}/labResults`);\r\n                setLabResults(response.data);\r\n                console.log(response.data);\r\n            } catch (err) {\r\n                setError('Failed to fetch laboratory results');\r\n            }\r\n        };\r\n        fetchLabResults();\r\n    }, [patientId, appointmentId]);\r\n\r\n    // Handle file input change\r\n    const handleFileChange = (e) => {\r\n        const file = e.target.files[0];\r\n        if (file && file.type !== 'application/pdf') {\r\n            setError('Only PDF files are allowed.');\r\n            setFormData({\r\n                ...formData,\r\n                file: null\r\n            });\r\n        } else {\r\n            setError(null); // Clear any previous errors\r\n            setFormData({\r\n                ...formData,\r\n                file: file\r\n            });\r\n        }\r\n    };\r\n\r\n    // Handle form submission (creating lab result with file upload)\r\n    const handleSubmit = async (e) => {\r\n        e.preventDefault();\r\n        setError(null); // Reset error state before submission\r\n        setSuccess(null); // Reset success state\r\n    \r\n        if (!formData.file) {\r\n            setError('Please upload a PDF file.');\r\n            return;\r\n        }\r\n    \r\n        const labData = new FormData();\r\n        labData.append('file', formData.file);\r\n    \r\n        // Add an empty array for testResults if it's not being used\r\n        labData.append('testResults', JSON.stringify([]));\r\n    \r\n        try {\r\n            await axios.post(`http://localhost:8000/doctor/api/createLaboratoryResult/${patientId}/${appointmentId}`, labData, {\r\n                headers: {\r\n                    'Content-Type': 'multipart/form-data' // Ensure this is correctly set\r\n                }\r\n            });\r\n            setSuccess('Laboratory result uploaded successfully');\r\n            setFormData({\r\n                file: null\r\n            });\r\n        } catch (err) {\r\n            setError('Failed to upload laboratory result');\r\n            console.error('Error uploading file:', err.response?.data || err.message);\r\n        }\r\n    };\r\n    \r\n\r\n    // Download file\r\n    const downloadFile = async (resultId) => {\r\n        try {\r\n            const response = await axios.get(`http://localhost:8000/doctor/api/laboratoryResult/download/${resultId}`, {\r\n                responseType: 'blob'\r\n            });\r\n            const url = window.URL.createObjectURL(new Blob([response.data]));\r\n            const link = document.createElement('a');\r\n            link.href = url;\r\n            link.setAttribute('download', 'laboratory_result.pdf'); // you can change this filename if necessary\r\n            document.body.appendChild(link);\r\n            link.click();\r\n        } catch (err) {\r\n            setError('Failed to download file');\r\n            console.error('Error downloading file:', err.response?.data || err.message);\r\n        }\r\n    };\r\n\r\n    return (\r\n        <Container fluid>\r\n            <h3>Upload Laboratory Results</h3>\r\n            {/* {error && <p className=\"text-danger\">{error}</p>}\r\n            {success && <p className=\"text-success\">{success}</p>} */}\r\n\r\n            {/* Form for uploading lab results */}\r\n             \r\n            <Row>\r\n                <Col>\r\n                    <LaboratoryResults pid={patientId}/>\r\n                </Col>\r\n                <Col>\r\n                    <Form onSubmit={handleSubmit}>\r\n                        <Form.Group controlId=\"file\">\r\n                            <Form.Label>Upload Laboratory Result (PDF Only)</Form.Label>\r\n                            <Form.Control\r\n                                type=\"file\"\r\n                                accept=\"application/pdf\"\r\n                                onChange={handleFileChange} \r\n                            />\r\n                        </Form.Group>\r\n\r\n                        <Button type=\"submit\" variant=\"primary\" className=\"mt-3\">\r\n                            Upload Laboratory Result\r\n                        </Button>\r\n                    </Form>\r\n                </Col>\r\n            </Row>\r\n            \r\n            {/* List of laboratory results with download option */}\r\n           \r\n        </Container>\r\n    );\r\n}\r\n\r\nexport default LaboratoryResults;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}