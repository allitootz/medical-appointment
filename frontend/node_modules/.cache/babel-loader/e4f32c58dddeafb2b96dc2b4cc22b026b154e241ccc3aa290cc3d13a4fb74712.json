{"ast":null,"code":"var _jsxFileName = \"E:\\\\School\\\\School\\\\Integrative Programming\\\\medical-appointment\\\\src\\\\components\\\\patient\\\\homepage\\\\DoctorServices.jsx\",\n  _s = $RefreshSig$();\nimport { useNavigate } from \"react-router-dom\";\nimport axios from \"axios\";\nimport { useEffect, useState } from \"react\";\nimport './DoctorSpecialty.css';\nimport OBGYNE from './images/ObstetricsAndGynecology.png';\nimport PEDIATRICS from './images/Pedia.png';\nimport { Container } from \"react-bootstrap\";\nimport { jsxDEV as _jsxDEV, Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nfunction DoctorServices({\n  pid,\n  did\n}) {\n  _s();\n  const [services, setServices] = useState([]); // Initialize as an empty array\n  const [loading, setLoading] = useState(true); // Add loading state\n  const navigate = useNavigate();\n  useEffect(() => {\n    // Fetch the list of services from the backend\n    axios.get('http://localhost:8000/admin/getall/services').then(res => {\n      setServices(res.data.services || []); // Ensure services is always an array\n      setLoading(false); // Set loading to false after data is fetched\n    }).catch(err => {\n      console.log(err);\n      setLoading(false); // Set loading to false even on error\n    });\n  }, []);\n  const handleServiceClick = service => {\n    navigate(`/choosedoctor/${service.name.toLowerCase()}`);\n  };\n\n  // Mapping service names to their respective images (optional)\n  const serviceImages = {\n    \"Obstetrics\": OBGYNE,\n    \"Pediatrics\": PEDIATRICS,\n    \"Gynecology\": OBGYNE\n    // Add other mappings here as needed\n  };\n  const getImage = serviceName => {\n    return serviceImages[serviceName] || null;\n  };\n  if (loading) {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      children: \"Loading...\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 44,\n      columnNumber: 16\n    }, this); // Show a loading message while data is being fetched\n  }\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(Container, {\n      children: /*#__PURE__*/_jsxDEV(\"h4\", {\n        style: {\n          marginLeft: '15px',\n          marginTop: '2rem'\n        },\n        children: \"List of Services\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 50,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 49,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(Container, {\n      className: \"ds-container\",\n      children: services.length > 0 ? services.map((service, index) => /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"specialtyButtonStyle\",\n        onClick: () => handleServiceClick(service),\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"ds-imgcontainer\",\n          children: /*#__PURE__*/_jsxDEV(\"img\", {\n            src: getImage(service.name),\n            alt: service.name,\n            style: {\n              width: '100%',\n              height: '100%',\n              objectFit: 'cover'\n            }\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 61,\n            columnNumber: 33\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 60,\n          columnNumber: 29\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          children: [/*#__PURE__*/_jsxDEV(\"p\", {\n            style: {\n              fontWeight: '600',\n              textAlign: 'center'\n            },\n            children: service.name\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 64,\n            columnNumber: 33\n          }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n            style: {\n              fontSize: '12px',\n              textAlign: 'center'\n            },\n            children: [\"Doctors: \", service.doctors.map(doctor => doctor.name).join(', ')]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 66,\n            columnNumber: 33\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 63,\n          columnNumber: 29\n        }, this)]\n      }, index, true, {\n        fileName: _jsxFileName,\n        lineNumber: 55,\n        columnNumber: 25\n      }, this)) : /*#__PURE__*/_jsxDEV(\"div\", {\n        children: \"No services available\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 73,\n        columnNumber: 21\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 52,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true);\n}\n_s(DoctorServices, \"8OzOxUNtW8IkglbUsCjNCOQL06Q=\", false, function () {\n  return [useNavigate];\n});\n_c = DoctorServices;\nexport default DoctorServices;\nvar _c;\n$RefreshReg$(_c, \"DoctorServices\");","map":{"version":3,"names":["useNavigate","axios","useEffect","useState","OBGYNE","PEDIATRICS","Container","jsxDEV","_jsxDEV","Fragment","_Fragment","DoctorServices","pid","did","_s","services","setServices","loading","setLoading","navigate","get","then","res","data","catch","err","console","log","handleServiceClick","service","name","toLowerCase","serviceImages","getImage","serviceName","children","fileName","_jsxFileName","lineNumber","columnNumber","style","marginLeft","marginTop","className","length","map","index","onClick","src","alt","width","height","objectFit","fontWeight","textAlign","fontSize","doctors","doctor","join","_c","$RefreshReg$"],"sources":["E:/School/School/Integrative Programming/medical-appointment/src/components/patient/homepage/DoctorServices.jsx"],"sourcesContent":["import { useNavigate } from \"react-router-dom\";\r\nimport axios from \"axios\";\r\nimport { useEffect, useState } from \"react\";\r\nimport './DoctorSpecialty.css';\r\nimport OBGYNE from './images/ObstetricsAndGynecology.png';\r\nimport PEDIATRICS from './images/Pedia.png';\r\nimport { Container } from \"react-bootstrap\";\r\n\r\nfunction DoctorServices({ pid, did }) {\r\n    const [services, setServices] = useState([]); // Initialize as an empty array\r\n    const [loading, setLoading] = useState(true); // Add loading state\r\n    const navigate = useNavigate();\r\n\r\n    useEffect(() => {\r\n        // Fetch the list of services from the backend\r\n        axios.get('http://localhost:8000/admin/getall/services')\r\n            .then((res) => {\r\n                setServices(res.data.services || []); // Ensure services is always an array\r\n                setLoading(false); // Set loading to false after data is fetched\r\n            })\r\n            .catch((err) => {\r\n                console.log(err);\r\n                setLoading(false); // Set loading to false even on error\r\n            });\r\n    }, []);\r\n\r\n    const handleServiceClick = (service) => {\r\n        navigate(`/choosedoctor/${service.name.toLowerCase()}`);\r\n    };\r\n\r\n    // Mapping service names to their respective images (optional)\r\n    const serviceImages = {\r\n        \"Obstetrics\": OBGYNE,\r\n        \"Pediatrics\": PEDIATRICS,\r\n        \"Gynecology\": OBGYNE,\r\n        // Add other mappings here as needed\r\n    };\r\n\r\n    const getImage = (serviceName) => {\r\n        return serviceImages[serviceName] || null;\r\n    };\r\n\r\n    if (loading) {\r\n        return <div>Loading...</div>; // Show a loading message while data is being fetched\r\n    }\r\n\r\n    return (\r\n        <>\r\n            <Container>\r\n                <h4 style={{ marginLeft: '15px', marginTop: '2rem' }}>List of Services</h4>\r\n            </Container>\r\n            <Container className=\"ds-container\">\r\n                {services.length > 0 ? (\r\n                    services.map((service, index) => (\r\n                        <div\r\n                            key={index}\r\n                            className=\"specialtyButtonStyle\"\r\n                            onClick={() => handleServiceClick(service)}\r\n                        >\r\n                            <div className=\"ds-imgcontainer\">\r\n                                <img src={getImage(service.name)} alt={service.name} style={{ width: '100%', height: '100%', objectFit: 'cover' }} />\r\n                            </div>\r\n                            <div>\r\n                                <p style={{ fontWeight: '600', textAlign: 'center' }}>{service.name}</p>\r\n                                {/* Optionally list the doctors who provide this service */}\r\n                                <p style={{ fontSize: '12px', textAlign: 'center' }}>\r\n                                    Doctors: {service.doctors.map(doctor => doctor.name).join(', ')}\r\n                                </p>\r\n                            </div>\r\n                        </div>\r\n                    ))\r\n                ) : (\r\n                    <div>No services available</div>\r\n                )}\r\n            </Container>\r\n        </>\r\n    );\r\n}\r\n\r\nexport default DoctorServices;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}