{"ast":null,"code":"var _jsxFileName = \"E:\\\\School\\\\School\\\\Integrative Programming\\\\medical-appointment\\\\src\\\\components\\\\staffs\\\\admin\\\\dashboard\\\\Charts\\\\BarAppointment.jsx\",\n  _s = $RefreshSig$();\nimport React, { useEffect, useRef, useState } from 'react';\nimport { Container, Card } from 'react-bootstrap';\nimport Chart from 'chart.js/auto';\nimport axios from 'axios';\nimport { ip } from '../../../../../ContentExport';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction BarAppointment() {\n  _s();\n  const chartRef = useRef(null);\n  const chartInstanceRef = useRef(null);\n  const [chartData, setChartData] = useState({\n    labels: [],\n    data: []\n  });\n  useEffect(() => {\n    // Fetch appointment stats from the backend\n    axios.get(`${ip.address}/admin/api/appointments/stats`).then(response => {\n      const data = response.data;\n\n      // Ensure we have labels and counts for all required statuses\n      const requiredStatuses = ['Completed', 'Scheduled', 'Pending', 'Cancelled'];\n      const labels = [];\n      const counts = [];\n      requiredStatuses.forEach(status => {\n        const stat = data.find(item => item.status === status);\n        labels.push(status);\n        counts.push(stat ? stat.count : 0);\n      });\n      setChartData({\n        labels,\n        data: counts\n      });\n    }).catch(error => console.error('Error fetching appointment stats:', error));\n  }, []);\n  useEffect(() => {\n    if (chartInstanceRef.current) {\n      chartInstanceRef.current.destroy();\n    }\n    const ctx = chartRef.current.getContext('2d');\n    chartInstanceRef.current = new Chart(ctx, {\n      type: 'bar',\n      data: {\n        labels: chartData.labels,\n        // ['Completed', 'Scheduled', 'Pending', 'Cancelled']\n        datasets: [{\n          label: 'Appointment Statuses',\n          // General label for the dataset\n          backgroundColor: \"#4e73df\",\n          hoverBackgroundColor: \"#2e59d9\",\n          borderColor: \"#4e73df\",\n          data: chartData.data // Data points corresponding to each status\n        }]\n      },\n      options: {\n        maintainAspectRatio: false,\n        layout: {\n          padding: {\n            left: 10,\n            right: 25,\n            top: 25,\n            bottom: 0\n          }\n        },\n        scales: {\n          x: {\n            grid: {\n              display: false,\n              drawBorder: false\n            },\n            ticks: {\n              maxTicksLimit: 6\n            },\n            maxBarThickness: 25\n          },\n          y: {\n            ticks: {\n              min: 0,\n              maxTicksLimit: 5,\n              padding: 10,\n              callback: function (value) {\n                return value; // Just display the number\n              }\n            },\n            grid: {\n              color: \"rgb(234, 236, 244)\",\n              zeroLineColor: \"rgb(234, 236, 244)\",\n              drawBorder: false,\n              borderDash: [2],\n              zeroLineBorderDash: [2]\n            }\n          }\n        },\n        plugins: {\n          legend: {\n            display: false\n          },\n          tooltip: {\n            titleMarginBottom: 10,\n            titleFont: {\n              size: 14,\n              family: 'Nunito, -apple-system, system-ui, BlinkMacSystemFont, \"Segoe UI\", Roboto, \"Helvetica Neue\", Arial, sans-serif'\n            },\n            backgroundColor: \"rgb(255,255,255)\",\n            bodyColor: \"#858796\",\n            borderColor: '#dddfeb',\n            borderWidth: 1,\n            xPadding: 15,\n            yPadding: 15,\n            displayColors: false,\n            caretPadding: 10,\n            callbacks: {\n              label: function (tooltipItem) {\n                const label = chartData.labels[tooltipItem.dataIndex]; // Get the correct label\n                return label + ': ' + tooltipItem.raw;\n              }\n            }\n          }\n        }\n      }\n    });\n    return () => {\n      if (chartInstanceRef.current) {\n        chartInstanceRef.current.destroy();\n      }\n    };\n  }, [chartData]);\n  return /*#__PURE__*/_jsxDEV(Card, {\n    className: \"card-bar-chart shadow mb-4\",\n    children: [/*#__PURE__*/_jsxDEV(Card.Header, {\n      className: \"py-3\",\n      children: /*#__PURE__*/_jsxDEV(\"h6\", {\n        className: \"m-0 font-weight-bold text-primary\",\n        children: \"Appointment Statuses\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 132,\n        columnNumber: 13\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 131,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(Card.Body, {\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"chart-bar\",\n        children: /*#__PURE__*/_jsxDEV(\"canvas\", {\n          id: \"myBarChart\",\n          ref: chartRef\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 136,\n          columnNumber: 17\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 135,\n        columnNumber: 13\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 134,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 130,\n    columnNumber: 9\n  }, this);\n}\n_s(BarAppointment, \"BwV9Cqmv3VsO/wrKon1qjJ1Mk5I=\");\n_c = BarAppointment;\nexport default BarAppointment;\nvar _c;\n$RefreshReg$(_c, \"BarAppointment\");","map":{"version":3,"names":["React","useEffect","useRef","useState","Container","Card","Chart","axios","ip","jsxDEV","_jsxDEV","BarAppointment","_s","chartRef","chartInstanceRef","chartData","setChartData","labels","data","get","address","then","response","requiredStatuses","counts","forEach","status","stat","find","item","push","count","catch","error","console","current","destroy","ctx","getContext","type","datasets","label","backgroundColor","hoverBackgroundColor","borderColor","options","maintainAspectRatio","layout","padding","left","right","top","bottom","scales","x","grid","display","drawBorder","ticks","maxTicksLimit","maxBarThickness","y","min","callback","value","color","zeroLineColor","borderDash","zeroLineBorderDash","plugins","legend","tooltip","titleMarginBottom","titleFont","size","family","bodyColor","borderWidth","xPadding","yPadding","displayColors","caretPadding","callbacks","tooltipItem","dataIndex","raw","className","children","Header","fileName","_jsxFileName","lineNumber","columnNumber","Body","id","ref","_c","$RefreshReg$"],"sources":["E:/School/School/Integrative Programming/medical-appointment/src/components/staffs/admin/dashboard/Charts/BarAppointment.jsx"],"sourcesContent":["import React, { useEffect, useRef, useState } from 'react';\r\nimport { Container, Card } from 'react-bootstrap';\r\nimport Chart from 'chart.js/auto';\r\nimport axios from 'axios';\r\nimport { ip } from '../../../../../ContentExport';\r\n\r\nfunction BarAppointment() {\r\n  const chartRef = useRef(null);\r\n  const chartInstanceRef = useRef(null);\r\n  const [chartData, setChartData] = useState({ labels: [], data: [] });\r\n\r\n  useEffect(() => {\r\n    // Fetch appointment stats from the backend\r\n    axios.get(`${ip.address}/admin/api/appointments/stats`)\r\n      .then(response => {\r\n        const data = response.data;\r\n\r\n        // Ensure we have labels and counts for all required statuses\r\n        const requiredStatuses = ['Completed', 'Scheduled', 'Pending', 'Cancelled'];\r\n        const labels = [];\r\n        const counts = [];\r\n\r\n        requiredStatuses.forEach(status => {\r\n          const stat = data.find(item => item.status === status);\r\n          labels.push(status);\r\n          counts.push(stat ? stat.count : 0);\r\n        });\r\n\r\n        setChartData({ labels, data: counts });\r\n      })\r\n      .catch(error => console.error('Error fetching appointment stats:', error));\r\n  }, []);\r\n\r\n  useEffect(() => {\r\n    if (chartInstanceRef.current) {\r\n      chartInstanceRef.current.destroy();\r\n    }\r\n\r\n    const ctx = chartRef.current.getContext('2d');\r\n    chartInstanceRef.current = new Chart(ctx, {\r\n      type: 'bar',\r\n      data: {\r\n        labels: chartData.labels, // ['Completed', 'Scheduled', 'Pending', 'Cancelled']\r\n        datasets: [{\r\n          label: 'Appointment Statuses', // General label for the dataset\r\n          backgroundColor: \"#4e73df\",\r\n          hoverBackgroundColor: \"#2e59d9\",\r\n          borderColor: \"#4e73df\",\r\n          data: chartData.data, // Data points corresponding to each status\r\n        }],\r\n      },\r\n      options: {\r\n        maintainAspectRatio: false,\r\n        layout: {\r\n          padding: {\r\n            left: 10,\r\n            right: 25,\r\n            top: 25,\r\n            bottom: 0\r\n          }\r\n        },\r\n        scales: {\r\n          x: {\r\n            grid: {\r\n              display: false,\r\n              drawBorder: false\r\n            },\r\n            ticks: {\r\n              maxTicksLimit: 6\r\n            },\r\n            maxBarThickness: 25,\r\n          },\r\n          y: {\r\n            ticks: {\r\n              min: 0,\r\n              maxTicksLimit: 5,\r\n              padding: 10,\r\n              callback: function(value) {\r\n                return value; // Just display the number\r\n              }\r\n            },\r\n            grid: {\r\n              color: \"rgb(234, 236, 244)\",\r\n              zeroLineColor: \"rgb(234, 236, 244)\",\r\n              drawBorder: false,\r\n              borderDash: [2],\r\n              zeroLineBorderDash: [2]\r\n            }\r\n          },\r\n        },\r\n        plugins: {\r\n          legend: {\r\n            display: false\r\n          },\r\n          tooltip: {\r\n            titleMarginBottom: 10,\r\n            titleFont: {\r\n              size: 14,\r\n              family: 'Nunito, -apple-system, system-ui, BlinkMacSystemFont, \"Segoe UI\", Roboto, \"Helvetica Neue\", Arial, sans-serif',\r\n            },\r\n            backgroundColor: \"rgb(255,255,255)\",\r\n            bodyColor: \"#858796\",\r\n            borderColor: '#dddfeb',\r\n            borderWidth: 1,\r\n            xPadding: 15,\r\n            yPadding: 15,\r\n            displayColors: false,\r\n            caretPadding: 10,\r\n            callbacks: {\r\n              label: function(tooltipItem) {\r\n                const label = chartData.labels[tooltipItem.dataIndex]; // Get the correct label\r\n                return label + ': ' + tooltipItem.raw;\r\n              }\r\n            }\r\n          },\r\n        }\r\n      }\r\n    });\r\n    \r\n\r\n    return () => {\r\n      if (chartInstanceRef.current) {\r\n        chartInstanceRef.current.destroy();\r\n      }\r\n    };\r\n  }, [chartData]);\r\n\r\n  return (\r\n    \r\n        <Card className=\"card-bar-chart shadow mb-4\">\r\n            <Card.Header className=\"py-3\">\r\n            <h6 className=\"m-0 font-weight-bold text-primary\">Appointment Statuses</h6>\r\n            </Card.Header>\r\n            <Card.Body>\r\n            <div className=\"chart-bar\">\r\n                <canvas id=\"myBarChart\" ref={chartRef}></canvas>\r\n            </div>\r\n            </Card.Body>\r\n        </Card>\r\n\r\n\r\n\r\n  );\r\n}\r\n\r\nexport default BarAppointment;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}