{"ast":null,"code":"var _jsxFileName = \"E:\\\\School\\\\School\\\\Integrative Programming\\\\medical-appointment\\\\frontend\\\\src\\\\components\\\\patient\\\\PatientNavBar\\\\PatientNavBar.jsx\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport { useNavigate, Link } from 'react-router-dom';\nimport { Container, Navbar, Nav, NavDropdown } from 'react-bootstrap';\nimport { Bell } from 'react-bootstrap-icons';\nimport './PatientNavBar.css';\nimport { usePatient } from '../PatientContext';\nimport { image, ip } from '../../../ContentExport';\nimport axios from 'axios';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction PatientNavBar({\n  pid\n}) {\n  _s();\n  const navigate = useNavigate();\n  const {\n    patient,\n    setPatient\n  } = usePatient(); // Get patient data from the context\n  const [showNotifications, setShowNotifications] = useState(false);\n  const [itemsToShow, setItemsToShow] = useState(3);\n  const [theImage, setImage] = useState(null);\n  const inactivityLimit = 1000000; // 10 seconds\n  let timeoutId = null; // To store the timeout ID\n\n  const defaultImage = `${ip.address}/images/014ef2f860e8e56b27d4a3267e0a193a.jpg`;\n  useEffect(() => {\n    axios.get(`${ip.address}/patient/api/onepatient/${pid}`).then(res => {\n      const patientData = res.data.thePatient;\n      setImage(patientData.patient_image || defaultImage); // Set patient image\n    }).catch(err => {\n      console.log(err);\n    });\n  }, [pid]);\n  const logoutUser = () => {\n    setPatient(null); // Clear the patient context (session)\n    localStorage.removeItem('patient'); // Clear the localStorage to remove persistent session data\n    navigate(\"/medapp/login\"); // Redirect the user to the login page\n  };\n\n  // Start inactivity timer\n  const startInactivityTimer = () => {\n    if (timeoutId) clearTimeout(timeoutId);\n    timeoutId = setTimeout(() => {\n      logoutUser(); // Log the user out after inactivity\n    }, inactivityLimit);\n  };\n\n  // Reset inactivity timer on user activity\n  const resetInactivityTimer = () => {\n    startInactivityTimer();\n  };\n  useEffect(() => {\n    // Set up event listeners for activity detection\n    window.addEventListener(\"mousemove\", resetInactivityTimer);\n    window.addEventListener(\"keypress\", resetInactivityTimer);\n\n    // Start the initial inactivity timer\n    startInactivityTimer();\n\n    // Cleanup event listeners on component unmount\n    return () => {\n      clearTimeout(timeoutId);\n      window.removeEventListener(\"mousemove\", resetInactivityTimer);\n      window.removeEventListener(\"keypress\", resetInactivityTimer);\n    };\n  }, []);\n  const onClickHomepage = () => {\n    navigate(`/homepage`, {\n      state: {\n        pid: patient._id\n      }\n    });\n  };\n  const onButtonContainerClick = () => {\n    navigate(`/choosedoctor`, {\n      state: {\n        pid: patient._id\n      }\n    });\n  };\n  const MyAppointment = () => {\n    navigate(`/myappointment`, {\n      state: {\n        pid: patient._id\n      }\n    });\n  };\n  const toggleNotifications = () => {\n    setShowNotifications(!showNotifications);\n  };\n  const showMore = () => {\n    setItemsToShow(patient.notifications.length);\n  };\n  const showLess = () => {\n    setItemsToShow(3);\n  };\n  return /*#__PURE__*/_jsxDEV(Navbar, {\n    fluid: true,\n    expand: \"md\",\n    className: \"pnb-navbar\",\n    children: /*#__PURE__*/_jsxDEV(Container, {\n      fluid: true,\n      children: [/*#__PURE__*/_jsxDEV(Link, {\n        to: {\n          pathname: `/homepage`,\n          state: {\n            pid: patient._id\n          }\n        },\n        children: /*#__PURE__*/_jsxDEV(\"img\", {\n          className: \"molino-logo\",\n          src: image.logo || defaultImage,\n          alt: \"Logo\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 95,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 94,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(Navbar.Toggle, {\n        \"aria-controls\": \"basic-navbar-nav\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 99,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(Navbar.Collapse, {\n        id: \"basic-navbar-nav\",\n        className: \"justify-content-end\",\n        children: [/*#__PURE__*/_jsxDEV(Nav, {\n          children: [/*#__PURE__*/_jsxDEV(Nav.Link, {\n            className: \"pnb-nav-link\",\n            onClick: onClickHomepage,\n            children: \"Home\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 102,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(Nav.Link, {\n            className: \"pnb-nav-link\",\n            onClick: MyAppointment,\n            children: \"My Appointments\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 103,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(Nav.Link, {\n            className: \"pnb-nav-link\",\n            onClick: onButtonContainerClick,\n            children: \"Choose Doctor\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 104,\n            columnNumber: 25\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 101,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(Nav, {\n          children: /*#__PURE__*/_jsxDEV(Nav.Link, {\n            onClick: toggleNotifications,\n            className: \"position-relative\",\n            children: [/*#__PURE__*/_jsxDEV(Bell, {\n              size: 20\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 109,\n              columnNumber: 29\n            }, this), showNotifications && /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"notification-overlay\",\n              children: patient.notifications.length > 0 ? [...patient.notifications].reverse().slice(0, itemsToShow).map((notification, index) => /*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"notification-item\",\n                children: [notification.message, index < itemsToShow - 1 && index < patient.notifications.length - 1 && /*#__PURE__*/_jsxDEV(\"hr\", {}, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 116,\n                  columnNumber: 121\n                }, this)]\n              }, index, true, {\n                fileName: _jsxFileName,\n                lineNumber: 114,\n                columnNumber: 45\n              }, this)) : /*#__PURE__*/_jsxDEV(\"div\", {\n                children: \"No new notifications\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 120,\n                columnNumber: 41\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 111,\n              columnNumber: 33\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 108,\n            columnNumber: 25\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 107,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(Nav, {\n          className: \"align-items-center\",\n          children: /*#__PURE__*/_jsxDEV(NavDropdown, {\n            title: /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"d-flex align-items-center justify-content-end \",\n              children: [/*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"ms-2 \",\n                children: [/*#__PURE__*/_jsxDEV(\"p\", {\n                  className: \"m-0\",\n                  style: {\n                    fontSize: '14px',\n                    fontWeight: 'bold'\n                  },\n                  children: [patient.patient_firstName, \" \", patient.patient_lastName]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 133,\n                  columnNumber: 41\n                }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n                  className: \"m-0\",\n                  style: {\n                    fontSize: '12px',\n                    color: 'gray',\n                    textAlign: 'end'\n                  },\n                  children: \"Patient\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 134,\n                  columnNumber: 41\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 132,\n                columnNumber: 37\n              }, this), /*#__PURE__*/_jsxDEV(\"img\", {\n                src: `${ip.address}/${theImage}` || defaultImage,\n                alt: \"Profile\",\n                style: {\n                  objectFit: 'cover'\n                },\n                className: \"profile-image ms-3\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 136,\n                columnNumber: 37\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 131,\n              columnNumber: 33\n            }, this),\n            id: \"basic-nav-dropdown\",\n            className: \"pnb-nav-link1\",\n            children: [/*#__PURE__*/_jsxDEV(NavDropdown.Item, {\n              as: Link,\n              to: \"/accinfo\",\n              state: {\n                pid: patient._id\n              },\n              children: \"Account Information\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 147,\n              columnNumber: 29\n            }, this), /*#__PURE__*/_jsxDEV(NavDropdown.Divider, {}, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 148,\n              columnNumber: 29\n            }, this), /*#__PURE__*/_jsxDEV(NavDropdown.Item, {\n              className: \"pnb-nav-link\",\n              onClick: logoutUser,\n              children: \"Logout\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 149,\n              columnNumber: 29\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 129,\n            columnNumber: 25\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 127,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 100,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 93,\n      columnNumber: 13\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 92,\n    columnNumber: 9\n  }, this);\n}\n_s(PatientNavBar, \"kcJOvdP3ARHarfO4RrwfmPHI5hI=\", false, function () {\n  return [useNavigate, usePatient];\n});\n_c = PatientNavBar;\nexport default PatientNavBar;\nvar _c;\n$RefreshReg$(_c, \"PatientNavBar\");","map":{"version":3,"names":["React","useState","useEffect","useNavigate","Link","Container","Navbar","Nav","NavDropdown","Bell","usePatient","image","ip","axios","jsxDEV","_jsxDEV","PatientNavBar","pid","_s","navigate","patient","setPatient","showNotifications","setShowNotifications","itemsToShow","setItemsToShow","theImage","setImage","inactivityLimit","timeoutId","defaultImage","address","get","then","res","patientData","data","thePatient","patient_image","catch","err","console","log","logoutUser","localStorage","removeItem","startInactivityTimer","clearTimeout","setTimeout","resetInactivityTimer","window","addEventListener","removeEventListener","onClickHomepage","state","_id","onButtonContainerClick","MyAppointment","toggleNotifications","showMore","notifications","length","showLess","fluid","expand","className","children","to","pathname","src","logo","alt","fileName","_jsxFileName","lineNumber","columnNumber","Toggle","Collapse","id","onClick","size","reverse","slice","map","notification","index","message","title","style","fontSize","fontWeight","patient_firstName","patient_lastName","color","textAlign","objectFit","Item","as","Divider","_c","$RefreshReg$"],"sources":["E:/School/School/Integrative Programming/medical-appointment/frontend/src/components/patient/PatientNavBar/PatientNavBar.jsx"],"sourcesContent":["import React, { useState, useEffect } from 'react';\r\nimport { useNavigate, Link } from 'react-router-dom';\r\nimport { Container, Navbar, Nav, NavDropdown } from 'react-bootstrap';\r\nimport { Bell } from 'react-bootstrap-icons';\r\nimport './PatientNavBar.css';\r\nimport { usePatient } from '../PatientContext';\r\nimport { image, ip } from '../../../ContentExport';\r\nimport axios from 'axios';\r\nfunction PatientNavBar({pid}) {\r\n    const navigate = useNavigate();\r\n    const { patient, setPatient } = usePatient(); // Get patient data from the context\r\n    const [showNotifications, setShowNotifications] = useState(false);\r\n    const [itemsToShow, setItemsToShow] = useState(3);\r\n    const [theImage, setImage] = useState(null);\r\n    const inactivityLimit = 1000000; // 10 seconds\r\n    let timeoutId = null; // To store the timeout ID\r\n\r\n    const defaultImage = `${ip.address}/images/014ef2f860e8e56b27d4a3267e0a193a.jpg`;\r\n    useEffect(() => {\r\n        axios.get(`${ip.address}/patient/api/onepatient/${pid}`)\r\n          .then((res) => {\r\n            const patientData = res.data.thePatient;\r\n\r\n            setImage(patientData.patient_image || defaultImage);  // Set patient image\r\n          })\r\n          .catch((err) => {\r\n            console.log(err);\r\n          });\r\n      }, [pid]);\r\n    \r\n    const logoutUser = () => {\r\n        setPatient(null);  // Clear the patient context (session)\r\n        localStorage.removeItem('patient');  // Clear the localStorage to remove persistent session data\r\n        navigate(\"/medapp/login\");  // Redirect the user to the login page\r\n    };\r\n    \r\n\r\n    // Start inactivity timer\r\n    const startInactivityTimer = () => {\r\n        if (timeoutId) clearTimeout(timeoutId);\r\n        timeoutId = setTimeout(() => {\r\n            logoutUser(); // Log the user out after inactivity\r\n        }, inactivityLimit);\r\n    };\r\n\r\n    // Reset inactivity timer on user activity\r\n    const resetInactivityTimer = () => {\r\n        startInactivityTimer();\r\n    };\r\n\r\n    useEffect(() => {\r\n        // Set up event listeners for activity detection\r\n        window.addEventListener(\"mousemove\", resetInactivityTimer);\r\n        window.addEventListener(\"keypress\", resetInactivityTimer);\r\n\r\n        // Start the initial inactivity timer\r\n        startInactivityTimer();\r\n\r\n        // Cleanup event listeners on component unmount\r\n        return () => {\r\n            clearTimeout(timeoutId);\r\n            window.removeEventListener(\"mousemove\", resetInactivityTimer);\r\n            window.removeEventListener(\"keypress\", resetInactivityTimer);\r\n        };\r\n    }, []);\r\n\r\n    const onClickHomepage = () => {\r\n        navigate(`/homepage`, { state: { pid: patient._id } });\r\n    };\r\n\r\n    const onButtonContainerClick = () => {\r\n        navigate(`/choosedoctor`, { state: { pid: patient._id } });\r\n    };\r\n\r\n    const MyAppointment = () => {\r\n        navigate(`/myappointment`, { state: { pid: patient._id } });\r\n    };\r\n\r\n    const toggleNotifications = () => {\r\n        setShowNotifications(!showNotifications);\r\n    };\r\n\r\n    const showMore = () => {\r\n        setItemsToShow(patient.notifications.length);\r\n    };\r\n\r\n    const showLess = () => {\r\n        setItemsToShow(3);\r\n    };\r\n\r\n    return (\r\n        <Navbar fluid expand=\"md\" className=\"pnb-navbar\">\r\n            <Container fluid>\r\n                <Link to={{ pathname: `/homepage`, state: { pid: patient._id } }}>\r\n                    <img className=\"molino-logo\" src={image.logo || defaultImage} alt=\"Logo\" />\r\n                </Link>\r\n             \r\n\r\n                <Navbar.Toggle aria-controls=\"basic-navbar-nav\" />\r\n                <Navbar.Collapse id=\"basic-navbar-nav\" className=\"justify-content-end\">\r\n                    <Nav>\r\n                        <Nav.Link className=\"pnb-nav-link\" onClick={onClickHomepage}>Home</Nav.Link>\r\n                        <Nav.Link className=\"pnb-nav-link\" onClick={MyAppointment}>My Appointments</Nav.Link>\r\n                        <Nav.Link className=\"pnb-nav-link\" onClick={onButtonContainerClick}>Choose Doctor</Nav.Link>\r\n                    </Nav>\r\n\r\n                    <Nav>\r\n                        <Nav.Link onClick={toggleNotifications} className=\"position-relative\">\r\n                            <Bell size={20} />\r\n                            {showNotifications && (\r\n                                <div className=\"notification-overlay\">\r\n                                    {patient.notifications.length > 0 ? (\r\n                                        [...patient.notifications].reverse().slice(0, itemsToShow).map((notification, index) => (\r\n                                            <div key={index} className=\"notification-item\">\r\n                                                {notification.message}\r\n                                                {index < itemsToShow - 1 && index < patient.notifications.length - 1 && <hr />}\r\n                                            </div>\r\n                                        ))\r\n                                    ) : (\r\n                                        <div>No new notifications</div>\r\n                                    )}\r\n                                </div>\r\n                            )}\r\n                        </Nav.Link>\r\n                    </Nav>\r\n\r\n                    <Nav className=\"align-items-center\">\r\n                        {/* Profile section with image and two-paragraph text */}\r\n                        <NavDropdown\r\n                            title={\r\n                                <div className=\"d-flex align-items-center justify-content-end \">\r\n                                    <div className=\"ms-2 \">\r\n                                        <p className=\"m-0\" style={{ fontSize: '14px', fontWeight: 'bold' }}>{patient.patient_firstName} {patient.patient_lastName}</p>\r\n                                        <p className=\"m-0\" style={{ fontSize: '12px', color: 'gray', textAlign: 'end' }}>Patient</p>\r\n                                    </div>\r\n                                    <img\r\n                                        src={`${ip.address}/${theImage}` || defaultImage}\r\n                                        alt=\"Profile\"\r\n                                        style={{ objectFit: 'cover' }}\r\n                                        className=\"profile-image ms-3\"\r\n                                    />\r\n                                </div>\r\n                            }\r\n                            id=\"basic-nav-dropdown\"\r\n                            className=\"pnb-nav-link1\"\r\n                        >\r\n                            <NavDropdown.Item as={Link} to=\"/accinfo\" state={{ pid: patient._id }}>Account Information</NavDropdown.Item>\r\n                            <NavDropdown.Divider />\r\n                            <NavDropdown.Item className=\"pnb-nav-link\" onClick={logoutUser}>Logout</NavDropdown.Item>\r\n                        </NavDropdown>\r\n                    </Nav>\r\n                </Navbar.Collapse>\r\n            </Container>\r\n        </Navbar>\r\n    );\r\n}\r\n\r\nexport default PatientNavBar;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}