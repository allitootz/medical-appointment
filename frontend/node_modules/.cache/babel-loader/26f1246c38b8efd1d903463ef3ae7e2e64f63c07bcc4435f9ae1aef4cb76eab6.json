{"ast":null,"code":"var _jsxFileName = \"E:\\\\School\\\\School\\\\Integrative Programming\\\\medical-appointment\\\\src\\\\components\\\\patient\\\\homepage\\\\ChooseDoctorServices.jsx\",\n  _s = $RefreshSig$();\nimport { useNavigate, useParams } from \"react-router-dom\";\nimport { Container, Row, Col, Button, Card } from 'react-bootstrap';\nimport axios from \"axios\";\nimport { useEffect, useState } from \"react\";\nimport PatientNavBar from \"../PatientNavBar/PatientNavBar\";\nimport { ip } from \"../../../ContentExport\";\nimport { usePatient } from \"../PatientContext\";\nimport { jsxDEV as _jsxDEV, Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nfunction ChooseDoctorServices() {\n  _s();\n  const [theDoctors, setAllDoctors] = useState([]);\n  const {\n    services\n  } = useParams(); // Get service and patient id from URL params\n  const navigate = useNavigate();\n  const defaultImage = \"images/014ef2f860e8e56b27d4a3267e0a193a.jpg\";\n  const {\n    patient,\n    setDoctorId\n  } = usePatient(); // Get patient info and doctor setter from context\n\n  useEffect(() => {\n    axios.get(`${ip.address}/doctor/api/alldoctor`).then(res => {\n      // Filter doctors who provide the selected service\n      const filteredDoctors = res.data.theDoctor.filter(doctor => doctor.dr_services.name && doctor.dr_services.name.includes(services) // Check if the doctor has this service in the array\n      );\n      setAllDoctors(filteredDoctors);\n      console.log(filteredDoctors);\n    }).catch(err => {\n      console.log(err);\n    });\n  }, [services]);\n  const handleDoctorClick = did => {\n    setDoctorId(did); // Set selected doctor id in context\n    navigate(`/doctorprofile`); // Navigate to doctor profile\n  };\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(PatientNavBar, {\n      pid: patient._id\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 38,\n      columnNumber: 13\n    }, this), \" \", /*#__PURE__*/_jsxDEV(\"div\", {\n      style: {\n        paddingTop: '40px'\n      }\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 40,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"cd-main\",\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"cd-containergrid\",\n        children: theDoctors.map((doctor, index) => {\n          const doctorImage = doctor.dr_image || defaultImage;\n          return /*#__PURE__*/_jsxDEV(Card, {\n            className: \"cd-card\",\n            onClick: () => handleDoctorClick(doctor._id),\n            children: [/*#__PURE__*/_jsxDEV(Card.Img, {\n              variant: \"top\",\n              src: `${ip.address}/${doctorImage}`\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 48,\n              columnNumber: 33\n            }, this), /*#__PURE__*/_jsxDEV(Card.Body, {\n              children: [/*#__PURE__*/_jsxDEV(Card.Title, {\n                style: {\n                  textAlign: \"center\"\n                },\n                children: [doctor.dr_firstName, \" \", doctor.dr_middleInitial, \". \", doctor.dr_lastName]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 50,\n                columnNumber: 37\n              }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n                style: {\n                  textAlign: 'center',\n                  fontSize: '14px',\n                  fontStyle: 'italic'\n                },\n                children: doctor.dr_specialty\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 53,\n                columnNumber: 37\n              }, this), /*#__PURE__*/_jsxDEV(Card.Text, {\n                children: \"\\\"Lorem ipsum dolor sit amet, consectetur\\\"\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 56,\n                columnNumber: 37\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 49,\n              columnNumber: 33\n            }, this)]\n          }, index, true, {\n            fileName: _jsxFileName,\n            lineNumber: 47,\n            columnNumber: 29\n          }, this);\n        })\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 43,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 42,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true);\n}\n_s(ChooseDoctorServices, \"BX5q8lE9olb3tNBpd8pWAOfHQGM=\", false, function () {\n  return [useParams, useNavigate, usePatient];\n});\n_c = ChooseDoctorServices;\nexport default ChooseDoctorServices;\nvar _c;\n$RefreshReg$(_c, \"ChooseDoctorServices\");","map":{"version":3,"names":["useNavigate","useParams","Container","Row","Col","Button","Card","axios","useEffect","useState","PatientNavBar","ip","usePatient","jsxDEV","_jsxDEV","Fragment","_Fragment","ChooseDoctorServices","_s","theDoctors","setAllDoctors","services","navigate","defaultImage","patient","setDoctorId","get","address","then","res","filteredDoctors","data","theDoctor","filter","doctor","dr_services","name","includes","console","log","catch","err","handleDoctorClick","did","children","pid","_id","fileName","_jsxFileName","lineNumber","columnNumber","style","paddingTop","className","map","index","doctorImage","dr_image","onClick","Img","variant","src","Body","Title","textAlign","dr_firstName","dr_middleInitial","dr_lastName","fontSize","fontStyle","dr_specialty","Text","_c","$RefreshReg$"],"sources":["E:/School/School/Integrative Programming/medical-appointment/src/components/patient/homepage/ChooseDoctorServices.jsx"],"sourcesContent":["import { useNavigate, useParams } from \"react-router-dom\";\r\nimport { Container, Row, Col, Button, Card } from 'react-bootstrap';\r\nimport axios from \"axios\";\r\nimport { useEffect, useState } from \"react\";\r\nimport PatientNavBar from \"../PatientNavBar/PatientNavBar\";\r\nimport { ip } from \"../../../ContentExport\";\r\nimport { usePatient } from \"../PatientContext\";\r\n\r\nfunction ChooseDoctorServices() {\r\n    const [theDoctors, setAllDoctors] = useState([]);\r\n    const { services} = useParams(); // Get service and patient id from URL params\r\n    const navigate = useNavigate();\r\n    const defaultImage = \"images/014ef2f860e8e56b27d4a3267e0a193a.jpg\";\r\n    const { patient, setDoctorId } = usePatient(); // Get patient info and doctor setter from context\r\n\r\n    useEffect(() => {\r\n        axios.get(`${ip.address}/doctor/api/alldoctor`)\r\n            .then((res) => {\r\n                // Filter doctors who provide the selected service\r\n                const filteredDoctors = res.data.theDoctor.filter(doctor =>\r\n                    doctor.dr_services.name && doctor.dr_services.name.includes(services) // Check if the doctor has this service in the array\r\n                );\r\n                setAllDoctors(filteredDoctors);\r\n                console.log(filteredDoctors);\r\n            })\r\n            .catch((err) => {\r\n                console.log(err);\r\n            });\r\n    }, [services]);\r\n\r\n    const handleDoctorClick = (did) => {\r\n        setDoctorId(did); // Set selected doctor id in context\r\n        navigate(`/doctorprofile`); // Navigate to doctor profile\r\n    };\r\n\r\n    return (\r\n        <>\r\n            <PatientNavBar pid={patient._id}/> {/* Patient navigation bar */}\r\n\r\n            <div style={{ paddingTop: '40px' }}></div>\r\n\r\n            <div className=\"cd-main\">\r\n                <div className=\"cd-containergrid\">\r\n                    {theDoctors.map((doctor, index) => {\r\n                        const doctorImage = doctor.dr_image || defaultImage;\r\n                        return (\r\n                            <Card key={index} className=\"cd-card\" onClick={() => handleDoctorClick(doctor._id)}>\r\n                                <Card.Img variant=\"top\" src={`${ip.address}/${doctorImage}`} />\r\n                                <Card.Body>\r\n                                    <Card.Title style={{ textAlign: \"center\" }}>\r\n                                        {doctor.dr_firstName} {doctor.dr_middleInitial}. {doctor.dr_lastName}\r\n                                    </Card.Title>\r\n                                    <p style={{ textAlign: 'center', fontSize: '14px', fontStyle: 'italic' }}>\r\n                                        {doctor.dr_specialty}\r\n                                    </p>\r\n                                    <Card.Text>\r\n                                        \"Lorem ipsum dolor sit amet, consectetur\"\r\n                                    </Card.Text>\r\n                                </Card.Body>\r\n                            </Card>\r\n                        );\r\n                    })}\r\n                </div>\r\n            </div>\r\n        </>\r\n    );\r\n}\r\n\r\nexport default ChooseDoctorServices;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}