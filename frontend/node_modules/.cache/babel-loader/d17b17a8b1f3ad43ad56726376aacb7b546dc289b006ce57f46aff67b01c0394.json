{"ast":null,"code":"var _jsxFileName = \"E:\\\\School\\\\School\\\\Integrative Programming\\\\medical-appointment\\\\src\\\\components\\\\practitioner\\\\accountinfo\\\\modal\\\\ImageUploadModal.jsx\",\n  _s = $RefreshSig$();\nimport React, { useState } from 'react';\nimport Modal from 'react-modal';\nimport axios from 'axios';\nimport { Button, Form, Col } from \"react-bootstrap\";\nimport { useParams } from 'react-router-dom';\nimport CropResizeTiltModal from './CropResizeTiltModal';\nimport './UploadImageModal.css';\nimport { jsxDEV as _jsxDEV, Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst ImageUploadModal = ({\n  isOpen,\n  onRequestClose,\n  did\n}) => {\n  _s();\n  const [selectedFile, setSelectedFile] = useState(null);\n  const [imageSrc, setImageSrc] = useState(null);\n  const [editedImage, setEditedImage] = useState(null);\n  const handleFileChange = event => {\n    const file = event.target.files[0];\n    setSelectedFile(file);\n    const reader = new FileReader();\n    reader.onload = () => {\n      setImageSrc(reader.result);\n      setEditedImage(null); // Reset edited image when a new file is selected\n    };\n    reader.readAsDataURL(file);\n  };\n  const handleImageEdit = croppedImageSrc => {\n    setEditedImage(croppedImageSrc);\n  };\n  const handleSubmit = async event => {\n    event.preventDefault();\n    const formData = new FormData();\n    formData.append('image', selectedFile);\n    try {\n      const response = await axios.post(`http://localhost:8000/doctor/api/${did}/updateimage`, formData, {\n        headers: {\n          'Content-Type': 'multipart/form-data'\n        }\n      });\n      console.log('Image uploaded successfully:', response.data);\n      onRequestClose(response.data.updatedDoctor.dr_image); // Pass the new image URL back to the parent component\n    } catch (error) {\n      console.error('Error uploading image:', error);\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(Modal, {\n    isOpen: isOpen,\n    onRequestClose: () => onRequestClose(null),\n    contentLabel: \"Image Upload Modal\",\n    className: \"image-upload-modal\",\n    overlayClassName: \"modal-overlay\",\n    ariaHideApp: false,\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"modal-content\",\n      children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n        children: \"Upload Image\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 58,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Form, {\n        className: \"ium-form\",\n        children: /*#__PURE__*/_jsxDEV(Form.Group, {\n          as: Col,\n          className: \"mb-3\",\n          children: /*#__PURE__*/_jsxDEV(Form.Control, {\n            type: \"file\",\n            accept: \"image/*\",\n            onChange: handleFileChange\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 61,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 60,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 59,\n        columnNumber: 9\n      }, this), imageSrc && /*#__PURE__*/_jsxDEV(_Fragment, {\n        children: [/*#__PURE__*/_jsxDEV(Button, {\n          onClick: () => setEditedImage(imageSrc),\n          children: \"Edit Image\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 67,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"img\", {\n          src: editedImage || imageSrc,\n          alt: \"Preview\",\n          className: \"preview-image\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 68,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true), /*#__PURE__*/_jsxDEV(Button, {\n        style: {\n          marginTop: \"15px\"\n        },\n        type: \"submit\",\n        onClick: handleSubmit,\n        children: \"Upload\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 72,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(CropResizeTiltModal, {\n        isOpen: Boolean(editedImage),\n        onRequestClose: () => setEditedImage(null),\n        imageSrc: imageSrc,\n        onSave: handleImageEdit\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 74,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 57,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 49,\n    columnNumber: 5\n  }, this);\n};\n_s(ImageUploadModal, \"FxOdGGwA2VTYnOZWMUxfbN66DAo=\");\n_c = ImageUploadModal;\nexport default ImageUploadModal;\nvar _c;\n$RefreshReg$(_c, \"ImageUploadModal\");","map":{"version":3,"names":["React","useState","Modal","axios","Button","Form","Col","useParams","CropResizeTiltModal","jsxDEV","_jsxDEV","Fragment","_Fragment","ImageUploadModal","isOpen","onRequestClose","did","_s","selectedFile","setSelectedFile","imageSrc","setImageSrc","editedImage","setEditedImage","handleFileChange","event","file","target","files","reader","FileReader","onload","result","readAsDataURL","handleImageEdit","croppedImageSrc","handleSubmit","preventDefault","formData","FormData","append","response","post","headers","console","log","data","updatedDoctor","dr_image","error","contentLabel","className","overlayClassName","ariaHideApp","children","fileName","_jsxFileName","lineNumber","columnNumber","Group","as","Control","type","accept","onChange","onClick","src","alt","style","marginTop","Boolean","onSave","_c","$RefreshReg$"],"sources":["E:/School/School/Integrative Programming/medical-appointment/src/components/practitioner/accountinfo/modal/ImageUploadModal.jsx"],"sourcesContent":["import React, { useState } from 'react';\r\nimport Modal from 'react-modal';\r\nimport axios from 'axios';\r\nimport { Button, Form, Col } from \"react-bootstrap\";\r\nimport { useParams } from 'react-router-dom';\r\nimport CropResizeTiltModal from './CropResizeTiltModal';\r\nimport './UploadImageModal.css';\r\n\r\nconst ImageUploadModal = ({ isOpen, onRequestClose, did }) => {\r\n  const [selectedFile, setSelectedFile] = useState(null);\r\n  const [imageSrc, setImageSrc] = useState(null);\r\n  const [editedImage, setEditedImage] = useState(null);\r\n\r\n\r\n  const handleFileChange = (event) => {\r\n    const file = event.target.files[0];\r\n    setSelectedFile(file);\r\n    const reader = new FileReader();\r\n    reader.onload = () => {\r\n      setImageSrc(reader.result);\r\n      setEditedImage(null); // Reset edited image when a new file is selected\r\n    };\r\n    reader.readAsDataURL(file);\r\n  };\r\n\r\n  const handleImageEdit = (croppedImageSrc) => {\r\n    setEditedImage(croppedImageSrc);\r\n  };\r\n\r\n  const handleSubmit = async (event) => {\r\n    event.preventDefault();\r\n    const formData = new FormData();\r\n    formData.append('image', selectedFile);\r\n\r\n    try {\r\n      const response = await axios.post(`http://localhost:8000/doctor/api/${did}/updateimage`, formData, {\r\n        headers: {\r\n          'Content-Type': 'multipart/form-data'\r\n        }\r\n      });\r\n      console.log('Image uploaded successfully:', response.data);\r\n      onRequestClose(response.data.updatedDoctor.dr_image); // Pass the new image URL back to the parent component\r\n    } catch (error) {\r\n      console.error('Error uploading image:', error);\r\n    }\r\n  };\r\n\r\n  return (\r\n    <Modal\r\n      isOpen={isOpen}\r\n      onRequestClose={() => onRequestClose(null)}\r\n      contentLabel=\"Image Upload Modal\"\r\n      className=\"image-upload-modal\" \r\n      overlayClassName=\"modal-overlay\" \r\n      ariaHideApp={false} \r\n    >\r\n      <div className=\"modal-content\">\r\n        <h2>Upload Image</h2>\r\n        <Form className='ium-form'>\r\n          <Form.Group as={Col} className=\"mb-3\">\r\n            <Form.Control type=\"file\" accept=\"image/*\" onChange={handleFileChange} />\r\n          </Form.Group>\r\n        </Form>\r\n\r\n        {imageSrc && (\r\n          <>\r\n            <Button onClick={() => setEditedImage(imageSrc)}>Edit Image</Button>\r\n            <img src={editedImage || imageSrc} alt=\"Preview\" className=\"preview-image\" />\r\n          </>\r\n        )}\r\n\r\n        <Button style={{ marginTop: \"15px\" }} type=\"submit\" onClick={handleSubmit}>Upload</Button>\r\n\r\n        <CropResizeTiltModal\r\n          isOpen={Boolean(editedImage)}\r\n          onRequestClose={() => setEditedImage(null)}\r\n          imageSrc={imageSrc}\r\n          onSave={handleImageEdit}\r\n        />\r\n      </div>\r\n    </Modal>\r\n  );\r\n};\r\n\r\nexport default ImageUploadModal;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}