{"ast":null,"code":"var _jsxFileName = \"E:\\\\School\\\\School\\\\Integrative Programming\\\\medical-appointment\\\\src\\\\components\\\\patient\\\\choosedoctor\\\\choosedoctor.jsx\",\n  _s = $RefreshSig$();\nimport { useNavigate } from \"react-router-dom\";\nimport { Card, Form, Row, Col, Button, Container } from 'react-bootstrap';\nimport axios from \"axios\";\nimport { useEffect, useState } from \"react\";\nimport './ChooseDoctor.css';\nimport PatientNavBar from \"../PatientNavBar/PatientNavBar\";\nimport { usePatient } from \"../PatientContext\";\nimport { Helmet } from \"react-helmet\";\nimport Footer from \"../../Footer\";\nimport { ip } from \"../../../ContentExport\";\nimport { jsxDEV as _jsxDEV, Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst defaultImage = \"images/014ef2f860e8e56b27d4a3267e0a193a.jpg\";\nfunction ChooseDoctor() {\n  _s();\n  const [doctors, setDoctors] = useState([]);\n  const [filteredDoctors, setFilteredDoctors] = useState([]);\n  const [specializations, setSpecializations] = useState([]);\n  const [searchName, setSearchName] = useState('');\n  const [selectedSpecialization, setSelectedSpecialization] = useState('');\n  const [selectedDays, setSelectedDays] = useState({\n    monday: false,\n    tuesday: false,\n    wednesday: false,\n    thursday: false,\n    friday: false,\n    saturday: false,\n    sunday: false\n  });\n  const [availability, setAvailability] = useState({\n    am: false,\n    pm: false\n  });\n  const [clinicHoursRange, setClinicHoursRange] = useState({\n    start: '',\n    end: ''\n  });\n  const {\n    patient\n  } = usePatient();\n  const {\n    setDoctorId\n  } = usePatient();\n  const navigate = useNavigate();\n\n  // Fetch all doctors and populate specializations\n  useEffect(() => {\n    axios.get(`${ip.address}/doctor/api/alldoctor`).then(res => {\n      const doctorsData = res.data.theDoctor;\n      setDoctors(doctorsData);\n      setFilteredDoctors(doctorsData); // Set initial filtered list to all doctors\n\n      // Extract unique specializations\n      const uniqueSpecializations = [...new Set(doctorsData.map(doctor => doctor.dr_specialty))];\n      setSpecializations(uniqueSpecializations);\n    }).catch(err => {\n      console.log(err);\n    });\n  }, []);\n  const handleDoctorClick = did => {\n    setDoctorId(did);\n    navigate('/doctorprofile');\n  };\n  const handleSearchChange = e => {\n    setSearchName(e.target.value);\n  };\n  const handleSpecializationChange = e => {\n    setSelectedSpecialization(e.target.value);\n  };\n  const handleDayChange = e => {\n    const {\n      name,\n      checked\n    } = e.target;\n    setSelectedDays(prevDays => ({\n      ...prevDays,\n      [name]: checked\n    }));\n  };\n  const handleAvailabilityChange = e => {\n    const {\n      name,\n      checked\n    } = e.target;\n    setAvailability(prevAvailability => ({\n      ...prevAvailability,\n      [name]: checked\n    }));\n  };\n  const handleClinicHoursChange = e => {\n    const {\n      name,\n      value\n    } = e.target;\n    setClinicHoursRange(prevRange => ({\n      ...prevRange,\n      [name]: value\n    }));\n  };\n  const filterDoctors = () => {\n    const filtered = doctors.filter(doctor => {\n      // Filter by name or specialization\n      const doctorName = doctor.dr_firstName && doctor.dr_lastName ? `${doctor.dr_firstName} ${doctor.dr_lastName}`.toLowerCase() : '';\n      const doctorSpecialty = doctor.dr_specialty || '';\n      const matchesName = doctorName.includes(searchName.toLowerCase());\n      const matchesSpecialty = selectedSpecialization === '' || doctorSpecialty === selectedSpecialization;\n\n      // Filter by selected days and availability (AM/PM)\n      const selectedDaysArray = Object.keys(selectedDays).filter(day => selectedDays[day]);\n      const matchesDays = selectedDaysArray.length === 0 || selectedDaysArray.some(day => {\n        var _doctor$availability, _scheduleForDay$morni, _scheduleForDay$after;\n        const scheduleForDay = (_doctor$availability = doctor.availability) === null || _doctor$availability === void 0 ? void 0 : _doctor$availability[day]; // Access availability by day\n        return scheduleForDay && (!availability.am || ((_scheduleForDay$morni = scheduleForDay.morning) === null || _scheduleForDay$morni === void 0 ? void 0 : _scheduleForDay$morni.available)) && (!availability.pm || ((_scheduleForDay$after = scheduleForDay.afternoon) === null || _scheduleForDay$after === void 0 ? void 0 : _scheduleForDay$after.available));\n      });\n\n      // Filter by clinic hours range\n      const matchesClinicHours = !clinicHoursRange.start && !clinicHoursRange.end || Object.values(doctor.availability || {}).some(schedule => {\n        var _schedule$morning, _schedule$morning2, _schedule$afternoon, _schedule$afternoon2;\n        return !clinicHoursRange.start || ((_schedule$morning = schedule.morning) === null || _schedule$morning === void 0 ? void 0 : _schedule$morning.startTime) >= clinicHoursRange.start && ((_schedule$morning2 = schedule.morning) === null || _schedule$morning2 === void 0 ? void 0 : _schedule$morning2.endTime) <= clinicHoursRange.end || !clinicHoursRange.end || ((_schedule$afternoon = schedule.afternoon) === null || _schedule$afternoon === void 0 ? void 0 : _schedule$afternoon.startTime) >= clinicHoursRange.start && ((_schedule$afternoon2 = schedule.afternoon) === null || _schedule$afternoon2 === void 0 ? void 0 : _schedule$afternoon2.endTime) <= clinicHoursRange.end;\n      });\n      return matchesName && matchesSpecialty && matchesDays && matchesClinicHours;\n    });\n    setFilteredDoctors(filtered);\n  };\n  const timeSinceLastActive = lastActive => {\n    if (!lastActive) return \"Inactive\";\n    const now = new Date();\n    const lastActiveDate = new Date(lastActive);\n    const secondsAgo = Math.floor((now - lastActiveDate) / 1000);\n    const minutesAgo = Math.floor(secondsAgo / 60);\n    const hoursAgo = Math.floor(minutesAgo / 60);\n    const daysAgo = Math.floor(hoursAgo / 24);\n    const weeksAgo = Math.floor(daysAgo / 7);\n    if (minutesAgo < 1) return \"Active just now\";\n    if (minutesAgo < 60) return `Active ${minutesAgo} minute${minutesAgo > 1 ? 's' : ''} ago`;\n    if (hoursAgo < 24) return `Active ${hoursAgo} hour${hoursAgo > 1 ? 's' : ''} ago`;\n    if (daysAgo < 7) return `Active ${daysAgo} day${daysAgo > 1 ? 's' : ''} ago`;\n    return `Active ${weeksAgo} week${weeksAgo > 1 ? 's' : ''} ago`;\n  };\n  useEffect(() => {\n    filterDoctors(); // Apply the filter every time the search or filters change\n  }, [searchName, selectedSpecialization, selectedDays, availability, clinicHoursRange]);\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(Helmet, {\n      children: /*#__PURE__*/_jsxDEV(\"title\", {\n        children: \"Molino Care | Patient\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 134,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 133,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(PatientNavBar, {\n      pid: patient._id\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 136,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(Container, {\n      className: \"cont-fluid-no-gutter\",\n      fluid: true,\n      style: {\n        overflowY: 'scroll',\n        height: '100vh',\n        paddingBottom: '100px',\n        paddingTop: '1.5rem'\n      },\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"maincolor-container\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"content-area\",\n          children: [/*#__PURE__*/_jsxDEV(Container, {\n            className: \"announcement-container white-background align-items-center mt-3 mb-3 shadow-sm p-5\",\n            children: /*#__PURE__*/_jsxDEV(Form, {\n              className: \"mb-4\",\n              children: [/*#__PURE__*/_jsxDEV(Row, {\n                children: [/*#__PURE__*/_jsxDEV(Col, {\n                  children: /*#__PURE__*/_jsxDEV(Form.Group, {\n                    children: [/*#__PURE__*/_jsxDEV(Form.Label, {\n                      children: \"Search by Doctor's Name\"\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 146,\n                      columnNumber: 45\n                    }, this), /*#__PURE__*/_jsxDEV(Form.Control, {\n                      type: \"text\",\n                      value: searchName,\n                      onChange: handleSearchChange,\n                      placeholder: \"Doctor's Name\"\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 147,\n                      columnNumber: 45\n                    }, this)]\n                  }, void 0, true, {\n                    fileName: _jsxFileName,\n                    lineNumber: 145,\n                    columnNumber: 41\n                  }, this)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 144,\n                  columnNumber: 37\n                }, this), /*#__PURE__*/_jsxDEV(Col, {\n                  children: /*#__PURE__*/_jsxDEV(Form.Group, {\n                    children: [/*#__PURE__*/_jsxDEV(Form.Label, {\n                      children: \"Filter by Specialization\"\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 152,\n                      columnNumber: 45\n                    }, this), /*#__PURE__*/_jsxDEV(Form.Control, {\n                      as: \"select\",\n                      value: selectedSpecialization,\n                      onChange: handleSpecializationChange,\n                      children: [/*#__PURE__*/_jsxDEV(\"option\", {\n                        value: \"\",\n                        children: \"All Specializations\"\n                      }, void 0, false, {\n                        fileName: _jsxFileName,\n                        lineNumber: 154,\n                        columnNumber: 49\n                      }, this), specializations.map((specialization, index) => /*#__PURE__*/_jsxDEV(\"option\", {\n                        value: specialization,\n                        children: specialization\n                      }, index, false, {\n                        fileName: _jsxFileName,\n                        lineNumber: 156,\n                        columnNumber: 53\n                      }, this))]\n                    }, void 0, true, {\n                      fileName: _jsxFileName,\n                      lineNumber: 153,\n                      columnNumber: 45\n                    }, this)]\n                  }, void 0, true, {\n                    fileName: _jsxFileName,\n                    lineNumber: 151,\n                    columnNumber: 41\n                  }, this)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 150,\n                  columnNumber: 37\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 143,\n                columnNumber: 33\n              }, this), /*#__PURE__*/_jsxDEV(Row, {\n                children: [/*#__PURE__*/_jsxDEV(Col, {\n                  children: [/*#__PURE__*/_jsxDEV(Form.Group, {\n                    children: [/*#__PURE__*/_jsxDEV(Form.Label, {\n                      children: \"Availability\"\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 167,\n                      columnNumber: 45\n                    }, this), /*#__PURE__*/_jsxDEV(Form.Check, {\n                      label: \"AM\",\n                      name: \"am\",\n                      checked: availability.am,\n                      onChange: handleAvailabilityChange\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 168,\n                      columnNumber: 45\n                    }, this), /*#__PURE__*/_jsxDEV(Form.Check, {\n                      label: \"PM\",\n                      name: \"pm\",\n                      checked: availability.pm,\n                      onChange: handleAvailabilityChange\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 169,\n                      columnNumber: 45\n                    }, this)]\n                  }, void 0, true, {\n                    fileName: _jsxFileName,\n                    lineNumber: 166,\n                    columnNumber: 41\n                  }, this), /*#__PURE__*/_jsxDEV(Form.Group, {\n                    children: [/*#__PURE__*/_jsxDEV(Form.Label, {\n                      children: \"Clinic Days\"\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 174,\n                      columnNumber: 41\n                    }, this), /*#__PURE__*/_jsxDEV(Row, {\n                      children: [/*#__PURE__*/_jsxDEV(Col, {\n                        xs: 12,\n                        sm: 6,\n                        md: 3,\n                        lg: 2,\n                        children: /*#__PURE__*/_jsxDEV(Form.Check, {\n                          label: \"Mon\",\n                          name: \"monday\",\n                          checked: selectedDays.monday,\n                          onChange: handleDayChange\n                        }, void 0, false, {\n                          fileName: _jsxFileName,\n                          lineNumber: 177,\n                          columnNumber: 45\n                        }, this)\n                      }, void 0, false, {\n                        fileName: _jsxFileName,\n                        lineNumber: 176,\n                        columnNumber: 45\n                      }, this), /*#__PURE__*/_jsxDEV(Col, {\n                        xs: 12,\n                        sm: 6,\n                        md: 3,\n                        lg: 2,\n                        children: /*#__PURE__*/_jsxDEV(Form.Check, {\n                          label: \"Tue\",\n                          name: \"tuesday\",\n                          checked: selectedDays.tuesday,\n                          onChange: handleDayChange\n                        }, void 0, false, {\n                          fileName: _jsxFileName,\n                          lineNumber: 185,\n                          columnNumber: 45\n                        }, this)\n                      }, void 0, false, {\n                        fileName: _jsxFileName,\n                        lineNumber: 184,\n                        columnNumber: 45\n                      }, this), /*#__PURE__*/_jsxDEV(Col, {\n                        xs: 12,\n                        sm: 6,\n                        md: 3,\n                        lg: 2,\n                        children: /*#__PURE__*/_jsxDEV(Form.Check, {\n                          label: \"Wed\",\n                          name: \"wednesday\",\n                          checked: selectedDays.wednesday,\n                          onChange: handleDayChange\n                        }, void 0, false, {\n                          fileName: _jsxFileName,\n                          lineNumber: 193,\n                          columnNumber: 45\n                        }, this)\n                      }, void 0, false, {\n                        fileName: _jsxFileName,\n                        lineNumber: 192,\n                        columnNumber: 45\n                      }, this), /*#__PURE__*/_jsxDEV(Col, {\n                        xs: 12,\n                        sm: 6,\n                        md: 3,\n                        lg: 2,\n                        children: /*#__PURE__*/_jsxDEV(Form.Check, {\n                          label: \"Thu\",\n                          name: \"thursday\",\n                          checked: selectedDays.thursday,\n                          onChange: handleDayChange\n                        }, void 0, false, {\n                          fileName: _jsxFileName,\n                          lineNumber: 201,\n                          columnNumber: 45\n                        }, this)\n                      }, void 0, false, {\n                        fileName: _jsxFileName,\n                        lineNumber: 200,\n                        columnNumber: 45\n                      }, this), /*#__PURE__*/_jsxDEV(Col, {\n                        xs: 12,\n                        sm: 6,\n                        md: 3,\n                        lg: 2,\n                        children: /*#__PURE__*/_jsxDEV(Form.Check, {\n                          label: \"Fri\",\n                          name: \"friday\",\n                          checked: selectedDays.friday,\n                          onChange: handleDayChange\n                        }, void 0, false, {\n                          fileName: _jsxFileName,\n                          lineNumber: 209,\n                          columnNumber: 45\n                        }, this)\n                      }, void 0, false, {\n                        fileName: _jsxFileName,\n                        lineNumber: 208,\n                        columnNumber: 45\n                      }, this), /*#__PURE__*/_jsxDEV(Col, {\n                        xs: 12,\n                        sm: 6,\n                        md: 3,\n                        lg: 2,\n                        children: /*#__PURE__*/_jsxDEV(Form.Check, {\n                          label: \"Sat\",\n                          name: \"saturday\",\n                          checked: selectedDays.saturday,\n                          onChange: handleDayChange\n                        }, void 0, false, {\n                          fileName: _jsxFileName,\n                          lineNumber: 217,\n                          columnNumber: 45\n                        }, this)\n                      }, void 0, false, {\n                        fileName: _jsxFileName,\n                        lineNumber: 216,\n                        columnNumber: 45\n                      }, this), /*#__PURE__*/_jsxDEV(Col, {\n                        xs: 12,\n                        sm: 6,\n                        md: 3,\n                        lg: 2,\n                        children: /*#__PURE__*/_jsxDEV(Form.Check, {\n                          label: \"Sun\",\n                          name: \"sunday\",\n                          checked: selectedDays.sunday,\n                          onChange: handleDayChange\n                        }, void 0, false, {\n                          fileName: _jsxFileName,\n                          lineNumber: 225,\n                          columnNumber: 45\n                        }, this)\n                      }, void 0, false, {\n                        fileName: _jsxFileName,\n                        lineNumber: 224,\n                        columnNumber: 45\n                      }, this)]\n                    }, void 0, true, {\n                      fileName: _jsxFileName,\n                      lineNumber: 175,\n                      columnNumber: 41\n                    }, this)]\n                  }, void 0, true, {\n                    fileName: _jsxFileName,\n                    lineNumber: 173,\n                    columnNumber: 37\n                  }, this)]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 165,\n                  columnNumber: 37\n                }, this), /*#__PURE__*/_jsxDEV(Col, {\n                  children: /*#__PURE__*/_jsxDEV(Form.Group, {\n                    children: [/*#__PURE__*/_jsxDEV(Form.Label, {\n                      children: \"Clinic Hours\"\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 237,\n                      columnNumber: 45\n                    }, this), /*#__PURE__*/_jsxDEV(Form.Control, {\n                      type: \"time\",\n                      name: \"start\",\n                      value: clinicHoursRange.start,\n                      onChange: handleClinicHoursChange\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 238,\n                      columnNumber: 45\n                    }, this), /*#__PURE__*/_jsxDEV(Form.Control, {\n                      type: \"time\",\n                      name: \"end\",\n                      value: clinicHoursRange.end,\n                      onChange: handleClinicHoursChange,\n                      className: \"mt-2\"\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 239,\n                      columnNumber: 45\n                    }, this)]\n                  }, void 0, true, {\n                    fileName: _jsxFileName,\n                    lineNumber: 236,\n                    columnNumber: 41\n                  }, this)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 235,\n                  columnNumber: 37\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 164,\n                columnNumber: 33\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 142,\n              columnNumber: 29\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 141,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"cd-main\",\n            children: /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"cd-containergrid\",\n              children: filteredDoctors.map(doctor => {\n                const doctorImage = doctor.dr_image || defaultImage;\n\n                // Define the status color based on the activity status\n                const statusColor = doctor.activityStatus === 'Online' ? 'green' : doctor.activityStatus === 'In Session' ? 'orange' : 'gray';\n                return /*#__PURE__*/_jsxDEV(Card, {\n                  className: \"cd-card\",\n                  onClick: () => handleDoctorClick(doctor._id),\n                  children: [/*#__PURE__*/_jsxDEV(Card.Img, {\n                    variant: \"top\",\n                    src: `${ip.address}/${doctorImage}`\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 259,\n                    columnNumber: 45\n                  }, this), /*#__PURE__*/_jsxDEV(Card.Body, {\n                    children: [/*#__PURE__*/_jsxDEV(Card.Title, {\n                      style: {\n                        textAlign: \"center\"\n                      },\n                      children: [doctor.dr_firstName, \" \", doctor.dr_middleInitial, \". \", doctor.dr_lastName]\n                    }, void 0, true, {\n                      fileName: _jsxFileName,\n                      lineNumber: 261,\n                      columnNumber: 49\n                    }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n                      style: {\n                        textAlign: 'center',\n                        fontSize: '14px',\n                        fontStyle: 'italic'\n                      },\n                      children: doctor.dr_specialty\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 264,\n                      columnNumber: 49\n                    }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n                      style: {\n                        textAlign: 'center',\n                        fontSize: '12px'\n                      },\n                      children: [/*#__PURE__*/_jsxDEV(\"span\", {\n                        className: \"status-indicator\",\n                        style: {\n                          backgroundColor: statusColor,\n                          borderRadius: '50%',\n                          display: 'inline-block',\n                          width: '10px',\n                          height: '10px',\n                          marginRight: '8px'\n                        }\n                      }, void 0, false, {\n                        fileName: _jsxFileName,\n                        lineNumber: 270,\n                        columnNumber: 57\n                      }, this), doctor.activityStatus === 'Online' ? 'Online' : doctor.activityStatus === 'In Session' ? 'In Session' : `Last Active: ${timeSinceLastActive(doctor.lastActive)}`]\n                    }, void 0, true, {\n                      fileName: _jsxFileName,\n                      lineNumber: 269,\n                      columnNumber: 49\n                    }, this)]\n                  }, void 0, true, {\n                    fileName: _jsxFileName,\n                    lineNumber: 260,\n                    columnNumber: 45\n                  }, this)]\n                }, doctor._id, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 258,\n                  columnNumber: 41\n                }, this);\n              })\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 248,\n              columnNumber: 29\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 247,\n            columnNumber: 25\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 140,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"footer-container\",\n          children: /*#__PURE__*/_jsxDEV(Footer, {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 286,\n            columnNumber: 29\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 285,\n          columnNumber: 25\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 139,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 138,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true);\n}\n_s(ChooseDoctor, \"UdpMaViqCujaXUVlVcExHzUfR1o=\", false, function () {\n  return [usePatient, usePatient, useNavigate];\n});\n_c = ChooseDoctor;\nexport default ChooseDoctor;\nvar _c;\n$RefreshReg$(_c, \"ChooseDoctor\");","map":{"version":3,"names":["useNavigate","Card","Form","Row","Col","Button","Container","axios","useEffect","useState","PatientNavBar","usePatient","Helmet","Footer","ip","jsxDEV","_jsxDEV","Fragment","_Fragment","defaultImage","ChooseDoctor","_s","doctors","setDoctors","filteredDoctors","setFilteredDoctors","specializations","setSpecializations","searchName","setSearchName","selectedSpecialization","setSelectedSpecialization","selectedDays","setSelectedDays","monday","tuesday","wednesday","thursday","friday","saturday","sunday","availability","setAvailability","am","pm","clinicHoursRange","setClinicHoursRange","start","end","patient","setDoctorId","navigate","get","address","then","res","doctorsData","data","theDoctor","uniqueSpecializations","Set","map","doctor","dr_specialty","catch","err","console","log","handleDoctorClick","did","handleSearchChange","e","target","value","handleSpecializationChange","handleDayChange","name","checked","prevDays","handleAvailabilityChange","prevAvailability","handleClinicHoursChange","prevRange","filterDoctors","filtered","filter","doctorName","dr_firstName","dr_lastName","toLowerCase","doctorSpecialty","matchesName","includes","matchesSpecialty","selectedDaysArray","Object","keys","day","matchesDays","length","some","_doctor$availability","_scheduleForDay$morni","_scheduleForDay$after","scheduleForDay","morning","available","afternoon","matchesClinicHours","values","schedule","_schedule$morning","_schedule$morning2","_schedule$afternoon","_schedule$afternoon2","startTime","endTime","timeSinceLastActive","lastActive","now","Date","lastActiveDate","secondsAgo","Math","floor","minutesAgo","hoursAgo","daysAgo","weeksAgo","children","fileName","_jsxFileName","lineNumber","columnNumber","pid","_id","className","fluid","style","overflowY","height","paddingBottom","paddingTop","Group","Label","Control","type","onChange","placeholder","as","specialization","index","Check","label","xs","sm","md","lg","doctorImage","dr_image","statusColor","activityStatus","onClick","Img","variant","src","Body","Title","textAlign","dr_middleInitial","fontSize","fontStyle","backgroundColor","borderRadius","display","width","marginRight","_c","$RefreshReg$"],"sources":["E:/School/School/Integrative Programming/medical-appointment/src/components/patient/choosedoctor/choosedoctor.jsx"],"sourcesContent":["import { useNavigate } from \"react-router-dom\";\r\nimport { Card, Form, Row, Col, Button, Container } from 'react-bootstrap';\r\nimport axios from \"axios\";\r\nimport { useEffect, useState } from \"react\";\r\nimport './ChooseDoctor.css';\r\nimport PatientNavBar from \"../PatientNavBar/PatientNavBar\";\r\nimport { usePatient } from \"../PatientContext\";\r\nimport { Helmet } from \"react-helmet\";\r\nimport Footer from \"../../Footer\";\r\nimport { ip } from \"../../../ContentExport\";\r\nconst defaultImage = \"images/014ef2f860e8e56b27d4a3267e0a193a.jpg\";\r\nfunction ChooseDoctor() {\r\n    const [doctors, setDoctors] = useState([]);\r\n    const [filteredDoctors, setFilteredDoctors] = useState([]);\r\n    const [specializations, setSpecializations] = useState([]);\r\n    const [searchName, setSearchName] = useState('');\r\n    const [selectedSpecialization, setSelectedSpecialization] = useState('');\r\n    const [selectedDays, setSelectedDays] = useState({\r\n        monday: false, tuesday: false, wednesday: false, thursday: false, friday: false, saturday: false, sunday: false\r\n    });\r\n    const [availability, setAvailability] = useState({\r\n        am: false, pm: false\r\n    });\r\n    const [clinicHoursRange, setClinicHoursRange] = useState({ start: '', end: '' });\r\n\r\n    const { patient } = usePatient();\r\n    const { setDoctorId } = usePatient();\r\n    const navigate = useNavigate();\r\n\r\n    // Fetch all doctors and populate specializations\r\n    useEffect(() => {\r\n        axios.get(`${ip.address}/doctor/api/alldoctor`)\r\n            .then((res) => {\r\n                const doctorsData = res.data.theDoctor;\r\n                setDoctors(doctorsData);\r\n                setFilteredDoctors(doctorsData); // Set initial filtered list to all doctors\r\n\r\n                // Extract unique specializations\r\n                const uniqueSpecializations = [...new Set(doctorsData.map(doctor => doctor.dr_specialty))];\r\n                setSpecializations(uniqueSpecializations);\r\n            })\r\n            .catch((err) => {\r\n                console.log(err);\r\n            });\r\n    }, []);\r\n\r\n    const handleDoctorClick = (did) => {\r\n        setDoctorId(did);\r\n        navigate('/doctorprofile');\r\n    };\r\n\r\n    const handleSearchChange = (e) => {\r\n        setSearchName(e.target.value);\r\n    };\r\n\r\n    const handleSpecializationChange = (e) => {\r\n        setSelectedSpecialization(e.target.value);\r\n    };\r\n\r\n    const handleDayChange = (e) => {\r\n        const { name, checked } = e.target;\r\n        setSelectedDays(prevDays => ({ ...prevDays, [name]: checked }));\r\n    };\r\n\r\n    const handleAvailabilityChange = (e) => {\r\n        const { name, checked } = e.target;\r\n        setAvailability(prevAvailability => ({ ...prevAvailability, [name]: checked }));\r\n    };\r\n\r\n    const handleClinicHoursChange = (e) => {\r\n        const { name, value } = e.target;\r\n        setClinicHoursRange(prevRange => ({ ...prevRange, [name]: value }));\r\n    };\r\n\r\n    const filterDoctors = () => {\r\n        const filtered = doctors.filter((doctor) => {\r\n            // Filter by name or specialization\r\n            const doctorName = doctor.dr_firstName && doctor.dr_lastName ? `${doctor.dr_firstName} ${doctor.dr_lastName}`.toLowerCase() : '';\r\n            const doctorSpecialty = doctor.dr_specialty || '';\r\n\r\n            const matchesName = doctorName.includes(searchName.toLowerCase());\r\n            const matchesSpecialty = selectedSpecialization === '' || doctorSpecialty === selectedSpecialization;\r\n\r\n            // Filter by selected days and availability (AM/PM)\r\n            const selectedDaysArray = Object.keys(selectedDays).filter(day => selectedDays[day]);\r\n            const matchesDays = selectedDaysArray.length === 0 || selectedDaysArray.some(day => {\r\n                const scheduleForDay = doctor.availability?.[day]; // Access availability by day\r\n                return scheduleForDay && (\r\n                    (!availability.am || scheduleForDay.morning?.available) &&\r\n                    (!availability.pm || scheduleForDay.afternoon?.available)\r\n                );\r\n            });\r\n\r\n            // Filter by clinic hours range\r\n            const matchesClinicHours = (!clinicHoursRange.start && !clinicHoursRange.end) || \r\n                Object.values(doctor.availability || {}).some(schedule => {\r\n                    return (\r\n                        (!clinicHoursRange.start || (schedule.morning?.startTime >= clinicHoursRange.start && schedule.morning?.endTime <= clinicHoursRange.end)) ||\r\n                        (!clinicHoursRange.end || (schedule.afternoon?.startTime >= clinicHoursRange.start && schedule.afternoon?.endTime <= clinicHoursRange.end))\r\n                    );\r\n                });\r\n\r\n            return matchesName && matchesSpecialty && matchesDays && matchesClinicHours;\r\n        });\r\n\r\n        setFilteredDoctors(filtered);\r\n    };\r\n\r\n    const timeSinceLastActive = (lastActive) => {\r\n        if (!lastActive) return \"Inactive\";\r\n    \r\n        const now = new Date();\r\n        const lastActiveDate = new Date(lastActive);\r\n        const secondsAgo = Math.floor((now - lastActiveDate) / 1000);\r\n        const minutesAgo = Math.floor(secondsAgo / 60);\r\n        const hoursAgo = Math.floor(minutesAgo / 60);\r\n        const daysAgo = Math.floor(hoursAgo / 24);\r\n        const weeksAgo = Math.floor(daysAgo / 7);\r\n    \r\n        if (minutesAgo < 1) return \"Active just now\";\r\n        if (minutesAgo < 60) return `Active ${minutesAgo} minute${minutesAgo > 1 ? 's' : ''} ago`;\r\n        if (hoursAgo < 24) return `Active ${hoursAgo} hour${hoursAgo > 1 ? 's' : ''} ago`;\r\n        if (daysAgo < 7) return `Active ${daysAgo} day${daysAgo > 1 ? 's' : ''} ago`;\r\n        return `Active ${weeksAgo} week${weeksAgo > 1 ? 's' : ''} ago`;\r\n    };\r\n\r\n    useEffect(() => {\r\n        filterDoctors(); // Apply the filter every time the search or filters change\r\n    }, [searchName, selectedSpecialization, selectedDays, availability, clinicHoursRange]);\r\n\r\n    return (\r\n        <>\r\n            <Helmet>\r\n                <title>Molino Care | Patient</title>\r\n            </Helmet>\r\n            <PatientNavBar pid={patient._id} />\r\n        \r\n            <Container  className='cont-fluid-no-gutter' fluid style={{overflowY: 'scroll', height: '100vh', paddingBottom: '100px', paddingTop: '1.5rem'}}>\r\n                <div className=\"maincolor-container\">\r\n                    <div className=\"content-area\">\r\n                        <Container className=\"announcement-container white-background align-items-center mt-3 mb-3 shadow-sm p-5\">\r\n                            <Form className=\"mb-4\">\r\n                                <Row>\r\n                                    <Col>\r\n                                        <Form.Group>\r\n                                            <Form.Label>Search by Doctor's Name</Form.Label>\r\n                                            <Form.Control type=\"text\" value={searchName} onChange={handleSearchChange} placeholder=\"Doctor's Name\" />\r\n                                        </Form.Group>\r\n                                    </Col>\r\n                                    <Col>\r\n                                        <Form.Group>\r\n                                            <Form.Label>Filter by Specialization</Form.Label>\r\n                                            <Form.Control as=\"select\" value={selectedSpecialization} onChange={handleSpecializationChange}>\r\n                                                <option value=\"\">All Specializations</option>\r\n                                                {specializations.map((specialization, index) => (\r\n                                                    <option key={index} value={specialization}>\r\n                                                        {specialization}\r\n                                                    </option>\r\n                                                ))}\r\n                                            </Form.Control>\r\n                                        </Form.Group>\r\n                                    </Col>\r\n                                </Row>\r\n                                <Row>\r\n                                    <Col>\r\n                                        <Form.Group>\r\n                                            <Form.Label>Availability</Form.Label>\r\n                                            <Form.Check label=\"AM\" name=\"am\" checked={availability.am} onChange={handleAvailabilityChange} />\r\n                                            <Form.Check label=\"PM\" name=\"pm\" checked={availability.pm} onChange={handleAvailabilityChange} />\r\n                                        </Form.Group>\r\n                                   \r\n                                    \r\n                                    <Form.Group>\r\n                                        <Form.Label>Clinic Days</Form.Label>\r\n                                        <Row>\r\n                                            <Col xs={12} sm={6} md={3} lg={2}>\r\n                                            <Form.Check\r\n                                                label=\"Mon\"\r\n                                                name=\"monday\"\r\n                                                checked={selectedDays.monday}\r\n                                                onChange={handleDayChange}\r\n                                            />\r\n                                            </Col>\r\n                                            <Col xs={12} sm={6} md={3} lg={2}>\r\n                                            <Form.Check\r\n                                                label=\"Tue\"\r\n                                                name=\"tuesday\"\r\n                                                checked={selectedDays.tuesday}\r\n                                                onChange={handleDayChange}\r\n                                            />\r\n                                            </Col>\r\n                                            <Col xs={12} sm={6} md={3} lg={2}>\r\n                                            <Form.Check\r\n                                                label=\"Wed\"\r\n                                                name=\"wednesday\"\r\n                                                checked={selectedDays.wednesday}\r\n                                                onChange={handleDayChange}\r\n                                            />\r\n                                            </Col>\r\n                                            <Col xs={12} sm={6} md={3} lg={2}>\r\n                                            <Form.Check\r\n                                                label=\"Thu\"\r\n                                                name=\"thursday\"\r\n                                                checked={selectedDays.thursday}\r\n                                                onChange={handleDayChange}\r\n                                            />\r\n                                            </Col>\r\n                                            <Col xs={12} sm={6} md={3} lg={2}>\r\n                                            <Form.Check\r\n                                                label=\"Fri\"\r\n                                                name=\"friday\"\r\n                                                checked={selectedDays.friday}\r\n                                                onChange={handleDayChange}\r\n                                            />\r\n                                            </Col>\r\n                                            <Col xs={12} sm={6} md={3} lg={2}>\r\n                                            <Form.Check\r\n                                                label=\"Sat\"\r\n                                                name=\"saturday\"\r\n                                                checked={selectedDays.saturday}\r\n                                                onChange={handleDayChange}\r\n                                            />\r\n                                            </Col>\r\n                                            <Col xs={12} sm={6} md={3} lg={2}>\r\n                                            <Form.Check\r\n                                                label=\"Sun\"\r\n                                                name=\"sunday\"\r\n                                                checked={selectedDays.sunday}\r\n                                                onChange={handleDayChange}\r\n                                            />\r\n                                            </Col>\r\n                                        </Row>\r\n                                        </Form.Group>\r\n                                    </Col>\r\n                                    <Col>\r\n                                        <Form.Group>\r\n                                            <Form.Label>Clinic Hours</Form.Label>\r\n                                            <Form.Control type=\"time\" name=\"start\" value={clinicHoursRange.start} onChange={handleClinicHoursChange} />\r\n                                            <Form.Control type=\"time\" name=\"end\" value={clinicHoursRange.end} onChange={handleClinicHoursChange} className=\"mt-2\" />\r\n                                        </Form.Group>\r\n                                    </Col>\r\n                                </Row>\r\n                              \r\n                            </Form>\r\n                        </Container>\r\n\r\n                        <div className=\"cd-main\">\r\n                            <div className=\"cd-containergrid\">\r\n                                {filteredDoctors.map((doctor) => {\r\n                                    const doctorImage = doctor.dr_image || defaultImage;\r\n\r\n                                    // Define the status color based on the activity status\r\n                                    const statusColor = doctor.activityStatus === 'Online' ? 'green' \r\n                                                        : doctor.activityStatus === 'In Session' ? 'orange' \r\n                                                        : 'gray';\r\n\r\n                                    return (\r\n                                        <Card key={doctor._id} className=\"cd-card\" onClick={() => handleDoctorClick(doctor._id)}>\r\n                                            <Card.Img variant=\"top\" src={`${ip.address}/${doctorImage}`} />\r\n                                            <Card.Body>\r\n                                                <Card.Title style={{ textAlign: \"center\" }}>\r\n                                                    {doctor.dr_firstName} {doctor.dr_middleInitial}. {doctor.dr_lastName}\r\n                                                </Card.Title>\r\n                                                <p style={{ textAlign: 'center', fontSize: '14px', fontStyle: 'italic' }}>\r\n                                                    {doctor.dr_specialty}\r\n                                                </p>\r\n\r\n                                                {/* Adding Activity Status below the card */}\r\n                                                <p style={{ textAlign: 'center',  fontSize: '12px' }}>\r\n                                                        <span className=\"status-indicator\" style={{ backgroundColor: statusColor, borderRadius: '50%', display: 'inline-block', width: '10px', height: '10px', marginRight: '8px' }}></span>\r\n                                                        {doctor.activityStatus === 'Online' ? 'Online' \r\n                                                            : doctor.activityStatus === 'In Session' ? 'In Session' \r\n                                                            : `Last Active: ${timeSinceLastActive(doctor.lastActive)}`}\r\n                                                    </p>\r\n\r\n                                            </Card.Body>\r\n                                        </Card>\r\n                                    );\r\n                                })}\r\n                            </div>\r\n                        </div>\r\n\r\n\r\n                    </div>\r\n                        <div className=\"footer-container\">\r\n                            <Footer />\r\n                        </div>\r\n\r\n\r\n                </div>\r\n            </Container>\r\n       \r\n\r\n\r\n            \r\n        </>\r\n    );\r\n}\r\n\r\nexport default ChooseDoctor;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}