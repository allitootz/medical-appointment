{"ast":null,"code":"var _jsxFileName = \"E:\\\\School\\\\School\\\\Integrative Programming\\\\medical-appointment\\\\src\\\\components\\\\patient\\\\patientinformation\\\\PatientInformation\\\\CropResizeTiltModal.jsx\",\n  _s = $RefreshSig$();\nimport React, { useState, useCallback } from 'react';\nimport Modal from 'react-bootstrap/Modal';\nimport { Button, Form } from 'react-bootstrap';\nimport Cropper from 'react-easy-crop';\nimport './CropResizeTiltModal.css'; // Add necessary styling here\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst CropResizeTiltModal = ({\n  show,\n  handleClose,\n  imageSrc,\n  onSave\n}) => {\n  _s();\n  const [crop, setCrop] = useState({\n    x: 0,\n    y: 0\n  });\n  const [zoom, setZoom] = useState(1);\n  const [rotation, setRotation] = useState(0);\n  const [croppedAreaPixels, setCroppedAreaPixels] = useState(null);\n  const onCropComplete = useCallback((croppedArea, croppedAreaPixels) => {\n    setCroppedAreaPixels(croppedAreaPixels);\n  }, []);\n  const createImage = url => new Promise((resolve, reject) => {\n    const image = new Image();\n    image.onload = () => resolve(image);\n    image.onerror = reject;\n    image.src = url;\n  });\n  const getCroppedImg = async (imageSrc, croppedAreaPixels, rotation = 0) => {\n    const image = await createImage(imageSrc);\n    const canvas = document.createElement('canvas');\n    const ctx = canvas.getContext('2d');\n    canvas.width = croppedAreaPixels.width;\n    canvas.height = croppedAreaPixels.height;\n    ctx.translate(canvas.width / 2, canvas.height / 2);\n    ctx.rotate(rotation * Math.PI / 180);\n    ctx.translate(-canvas.width / 2, -canvas.height / 2);\n    ctx.drawImage(image, croppedAreaPixels.x, croppedAreaPixels.y, croppedAreaPixels.width, croppedAreaPixels.height, 0, 0, canvas.width, canvas.height);\n    return new Promise(resolve => {\n      canvas.toBlob(blob => {\n        const fileReader = new FileReader();\n        fileReader.readAsDataURL(blob);\n        fileReader.onloadend = () => {\n          resolve(fileReader.result); // Return base64 cropped image\n        };\n      });\n    });\n  };\n  const handleSave = async () => {\n    const croppedImage = await getCroppedImg(imageSrc, croppedAreaPixels, rotation);\n    onSave(croppedImage); // Pass the cropped image to the parent component\n    handleClose(); // Close the modal after cropping\n  };\n  return /*#__PURE__*/_jsxDEV(Modal, {\n    show: show,\n    onHide: handleClose,\n    children: [/*#__PURE__*/_jsxDEV(Modal.Header, {\n      closeButton: true,\n      children: /*#__PURE__*/_jsxDEV(Modal.Title, {\n        children: \"Edit Image\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 69,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 68,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Modal.Body, {\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"crop-container\",\n        children: /*#__PURE__*/_jsxDEV(Cropper, {\n          image: imageSrc,\n          crop: crop,\n          zoom: zoom,\n          rotation: rotation,\n          aspect: 1,\n          cropShape: \"round\",\n          onCropChange: setCrop,\n          onZoomChange: setZoom,\n          onRotationChange: setRotation,\n          onCropComplete: onCropComplete\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 73,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 72,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"controls\",\n        children: [/*#__PURE__*/_jsxDEV(Form.Label, {\n          children: \"Zoom\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 87,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Form.Control, {\n          type: \"range\",\n          value: zoom,\n          min: \"1\",\n          max: \"3\",\n          step: \"0.1\",\n          onChange: e => setZoom(e.target.value)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 88,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Form.Label, {\n          children: \"Rotation\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 96,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Form.Control, {\n          type: \"range\",\n          value: rotation,\n          min: \"0\",\n          max: \"360\",\n          step: \"1\",\n          onChange: e => setRotation(e.target.value)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 97,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 86,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 71,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Modal.Footer, {\n      children: [/*#__PURE__*/_jsxDEV(Button, {\n        variant: \"secondary\",\n        onClick: handleClose,\n        children: \"Cancel\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 108,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Button, {\n        variant: \"primary\",\n        onClick: handleSave,\n        children: \"Save\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 111,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 107,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 67,\n    columnNumber: 5\n  }, this);\n};\n_s(CropResizeTiltModal, \"J+fVfpH1UI+xKbppI0+OZXYWN3I=\");\n_c = CropResizeTiltModal;\nexport default CropResizeTiltModal;\nvar _c;\n$RefreshReg$(_c, \"CropResizeTiltModal\");","map":{"version":3,"names":["React","useState","useCallback","Modal","Button","Form","Cropper","jsxDEV","_jsxDEV","CropResizeTiltModal","show","handleClose","imageSrc","onSave","_s","crop","setCrop","x","y","zoom","setZoom","rotation","setRotation","croppedAreaPixels","setCroppedAreaPixels","onCropComplete","croppedArea","createImage","url","Promise","resolve","reject","image","Image","onload","onerror","src","getCroppedImg","canvas","document","createElement","ctx","getContext","width","height","translate","rotate","Math","PI","drawImage","toBlob","blob","fileReader","FileReader","readAsDataURL","onloadend","result","handleSave","croppedImage","onHide","children","Header","closeButton","Title","fileName","_jsxFileName","lineNumber","columnNumber","Body","className","aspect","cropShape","onCropChange","onZoomChange","onRotationChange","Label","Control","type","value","min","max","step","onChange","e","target","Footer","variant","onClick","_c","$RefreshReg$"],"sources":["E:/School/School/Integrative Programming/medical-appointment/src/components/patient/patientinformation/PatientInformation/CropResizeTiltModal.jsx"],"sourcesContent":["import React, { useState, useCallback } from 'react';\r\nimport Modal from 'react-bootstrap/Modal';\r\nimport { Button, Form } from 'react-bootstrap';\r\nimport Cropper from 'react-easy-crop';\r\nimport './CropResizeTiltModal.css'; // Add necessary styling here\r\n\r\nconst CropResizeTiltModal = ({ show, handleClose, imageSrc, onSave }) => {\r\n  const [crop, setCrop] = useState({ x: 0, y: 0 });\r\n  const [zoom, setZoom] = useState(1);\r\n  const [rotation, setRotation] = useState(0);\r\n  const [croppedAreaPixels, setCroppedAreaPixels] = useState(null);\r\n\r\n  const onCropComplete = useCallback((croppedArea, croppedAreaPixels) => {\r\n    setCroppedAreaPixels(croppedAreaPixels);\r\n  }, []);\r\n\r\n  const createImage = (url) =>\r\n    new Promise((resolve, reject) => {\r\n      const image = new Image();\r\n      image.onload = () => resolve(image);\r\n      image.onerror = reject;\r\n      image.src = url;\r\n    });\r\n\r\n  const getCroppedImg = async (imageSrc, croppedAreaPixels, rotation = 0) => {\r\n    const image = await createImage(imageSrc);\r\n    const canvas = document.createElement('canvas');\r\n    const ctx = canvas.getContext('2d');\r\n\r\n    canvas.width = croppedAreaPixels.width;\r\n    canvas.height = croppedAreaPixels.height;\r\n\r\n    ctx.translate(canvas.width / 2, canvas.height / 2);\r\n    ctx.rotate((rotation * Math.PI) / 180);\r\n    ctx.translate(-canvas.width / 2, -canvas.height / 2);\r\n\r\n    ctx.drawImage(\r\n      image,\r\n      croppedAreaPixels.x,\r\n      croppedAreaPixels.y,\r\n      croppedAreaPixels.width,\r\n      croppedAreaPixels.height,\r\n      0,\r\n      0,\r\n      canvas.width,\r\n      canvas.height\r\n    );\r\n\r\n    return new Promise((resolve) => {\r\n      canvas.toBlob((blob) => {\r\n        const fileReader = new FileReader();\r\n        fileReader.readAsDataURL(blob);\r\n        fileReader.onloadend = () => {\r\n          resolve(fileReader.result); // Return base64 cropped image\r\n        };\r\n      });\r\n    });\r\n  };\r\n\r\n  const handleSave = async () => {\r\n    const croppedImage = await getCroppedImg(imageSrc, croppedAreaPixels, rotation);\r\n    onSave(croppedImage); // Pass the cropped image to the parent component\r\n    handleClose(); // Close the modal after cropping\r\n  };\r\n\r\n  return (\r\n    <Modal show={show} onHide={handleClose}>\r\n      <Modal.Header closeButton>\r\n        <Modal.Title>Edit Image</Modal.Title>\r\n      </Modal.Header>\r\n      <Modal.Body>\r\n        <div className=\"crop-container\">\r\n          <Cropper\r\n            image={imageSrc}\r\n            crop={crop}\r\n            zoom={zoom}\r\n            rotation={rotation}\r\n            aspect={1}\r\n            cropShape=\"round\"\r\n            onCropChange={setCrop}\r\n            onZoomChange={setZoom}\r\n            onRotationChange={setRotation}\r\n            onCropComplete={onCropComplete}\r\n          />\r\n        </div>\r\n        <div className=\"controls\">\r\n          <Form.Label>Zoom</Form.Label>\r\n          <Form.Control\r\n            type=\"range\"\r\n            value={zoom}\r\n            min=\"1\"\r\n            max=\"3\"\r\n            step=\"0.1\"\r\n            onChange={(e) => setZoom(e.target.value)}\r\n          />\r\n          <Form.Label>Rotation</Form.Label>\r\n          <Form.Control\r\n            type=\"range\"\r\n            value={rotation}\r\n            min=\"0\"\r\n            max=\"360\"\r\n            step=\"1\"\r\n            onChange={(e) => setRotation(e.target.value)}\r\n          />\r\n        </div>\r\n      </Modal.Body>\r\n      <Modal.Footer>\r\n        <Button variant=\"secondary\" onClick={handleClose}>\r\n          Cancel\r\n        </Button>\r\n        <Button variant=\"primary\" onClick={handleSave}>\r\n          Save\r\n        </Button>\r\n      </Modal.Footer>\r\n    </Modal>\r\n  );\r\n};\r\n\r\nexport default CropResizeTiltModal;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}