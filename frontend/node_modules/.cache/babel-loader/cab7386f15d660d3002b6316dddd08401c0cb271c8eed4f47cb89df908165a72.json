{"ast":null,"code":"var _jsxFileName = \"E:\\\\School\\\\School\\\\Integrative Programming\\\\medical-appointment\\\\frontend\\\\src\\\\components\\\\practitioner\\\\patientinformation\\\\navbar\\\\PractitionerNavBar.jsx\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport { useNavigate, useParams } from \"react-router-dom\";\nimport { Container, Nav } from 'react-bootstrap';\nimport axios from 'axios';\nimport Prescription from '../prescription/Prescription';\nimport PatientFindings from '../findings/PatientFindings';\nimport './PractitionerNavBarStyles.css';\nimport Immunization from '../immunization/Immunization';\nimport LaboratoryResults from '../laboratory/LaboratoryResults';\nimport { ip } from '../../../../ContentExport';\nimport { jsxDEV as _jsxDEV, Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nfunction PractitionerNavBar({\n  pid,\n  did,\n  apid\n}) {\n  _s();\n  const navigate = useNavigate();\n  console.log('PractitionerNavBar', pid, did, apid);\n\n  // Default active tab\n  const [activeTab, setActiveTab] = useState(\"findings\");\n\n  // Fetch patient data when the component loads\n  useEffect(() => {\n    const fetchPatientData = async () => {\n      try {\n        await axios.get(`${ip.address}/patient/api/onepatient/${pid}`);\n      } catch (error) {\n        console.error('Error fetching patient data', error);\n      }\n    };\n    fetchPatientData();\n  }, [pid]);\n  const handleSelect = selectedKey => {\n    // Update the active tab based on the selected event key\n    setActiveTab(selectedKey);\n  };\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"pnb-component\",\n      children: [/*#__PURE__*/_jsxDEV(Container, {\n        className: \"d-flex p-0\",\n        children: /*#__PURE__*/_jsxDEV(Nav, {\n          fill: true,\n          variant: \"tabs\",\n          className: \"navtabs-pxmanagement\",\n          activeKey: activeTab,\n          onSelect: handleSelect,\n          children: [/*#__PURE__*/_jsxDEV(Nav.Item, {\n            children: /*#__PURE__*/_jsxDEV(Nav.Link, {\n              eventKey: \"findings\",\n              children: \"Patient Findings\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 45,\n              columnNumber: 29\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 44,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(Nav.Item, {\n            children: /*#__PURE__*/_jsxDEV(Nav.Link, {\n              eventKey: \"prescription\",\n              children: \"Create Prescription\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 48,\n              columnNumber: 29\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 47,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(Nav.Item, {\n            children: /*#__PURE__*/_jsxDEV(Nav.Link, {\n              eventKey: \"immunization\",\n              children: \"Immunization\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 51,\n              columnNumber: 29\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 50,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(Nav.Item, {\n            children: /*#__PURE__*/_jsxDEV(Nav.Link, {\n              eventKey: \"laboratory\",\n              children: \"Laboratory Results\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 54,\n              columnNumber: 29\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 53,\n            columnNumber: 25\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 43,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 42,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(Container, {\n        className: `pnb-content ${activeTab === 'findings' ? 'findings-tab' : 'other-tabs'}`,\n        children: [activeTab === 'findings' && /*#__PURE__*/_jsxDEV(PatientFindings, {\n          patientId: pid,\n          doctorId: did,\n          appointmentId: apid\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 61,\n          columnNumber: 50\n        }, this), activeTab === 'prescription' && /*#__PURE__*/_jsxDEV(Prescription, {\n          patientId: pid,\n          doctorId: did,\n          appointmentId: apid\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 62,\n          columnNumber: 54\n        }, this), activeTab === 'immunization' && /*#__PURE__*/_jsxDEV(Immunization, {\n          patientId: pid,\n          doctorId: did,\n          appointmentId: apid\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 63,\n          columnNumber: 54\n        }, this), activeTab === 'laboratory' && /*#__PURE__*/_jsxDEV(LaboratoryResults, {\n          patientId: pid,\n          doctorId: did,\n          appointmentId: apid\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 64,\n          columnNumber: 52\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 60,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 40,\n      columnNumber: 13\n    }, this)\n  }, void 0, false);\n}\n_s(PractitionerNavBar, \"iMe+8l2vEfy01coc7t7FvrO2uQY=\", false, function () {\n  return [useNavigate];\n});\n_c = PractitionerNavBar;\nexport default PractitionerNavBar;\nvar _c;\n$RefreshReg$(_c, \"PractitionerNavBar\");","map":{"version":3,"names":["React","useState","useEffect","useNavigate","useParams","Container","Nav","axios","Prescription","PatientFindings","Immunization","LaboratoryResults","ip","jsxDEV","_jsxDEV","Fragment","_Fragment","PractitionerNavBar","pid","did","apid","_s","navigate","console","log","activeTab","setActiveTab","fetchPatientData","get","address","error","handleSelect","selectedKey","children","className","fill","variant","activeKey","onSelect","Item","Link","eventKey","fileName","_jsxFileName","lineNumber","columnNumber","patientId","doctorId","appointmentId","_c","$RefreshReg$"],"sources":["E:/School/School/Integrative Programming/medical-appointment/frontend/src/components/practitioner/patientinformation/navbar/PractitionerNavBar.jsx"],"sourcesContent":["import React, { useState, useEffect } from 'react';\r\nimport { useNavigate, useParams } from \"react-router-dom\";\r\nimport { Container, Nav } from 'react-bootstrap';\r\n\r\nimport axios from 'axios';\r\nimport Prescription from '../prescription/Prescription';\r\nimport PatientFindings from '../findings/PatientFindings';\r\nimport './PractitionerNavBarStyles.css';\r\nimport Immunization from '../immunization/Immunization';\r\nimport LaboratoryResults from '../laboratory/LaboratoryResults';\r\nimport { ip } from '../../../../ContentExport';\r\nfunction PractitionerNavBar({ pid, did, apid }) {\r\n    const navigate = useNavigate();\r\n    console.log('PractitionerNavBar', pid, did, apid);\r\n    \r\n\r\n    // Default active tab\r\n    const [activeTab, setActiveTab] = useState(\"findings\");\r\n\r\n    // Fetch patient data when the component loads\r\n    useEffect(() => {\r\n        const fetchPatientData = async () => {\r\n            try {\r\n                await axios.get(`${ip.address}/patient/api/onepatient/${pid}`);\r\n            } catch (error) {\r\n                console.error('Error fetching patient data', error);\r\n            }\r\n        };\r\n\r\n        fetchPatientData();\r\n    }, [pid]);\r\n\r\n    const handleSelect = (selectedKey) => {\r\n        // Update the active tab based on the selected event key\r\n        setActiveTab(selectedKey);\r\n    };\r\n\r\n    return (\r\n        <>\r\n            <div className='pnb-component'>\r\n                {/* Use Nav to create tab-like navigation */}\r\n                <Container className='d-flex p-0'>\r\n                    <Nav fill variant=\"tabs\" className='navtabs-pxmanagement' activeKey={activeTab} onSelect={handleSelect}>\r\n                        <Nav.Item>\r\n                            <Nav.Link eventKey=\"findings\">Patient Findings</Nav.Link>\r\n                        </Nav.Item>\r\n                        <Nav.Item>\r\n                            <Nav.Link eventKey=\"prescription\">Create Prescription</Nav.Link>\r\n                        </Nav.Item>\r\n                        <Nav.Item>\r\n                            <Nav.Link eventKey=\"immunization\">Immunization</Nav.Link>\r\n                        </Nav.Item>\r\n                        <Nav.Item>\r\n                            <Nav.Link eventKey=\"laboratory\">Laboratory Results</Nav.Link>\r\n                        </Nav.Item>\r\n                    </Nav>\r\n                </Container>\r\n\r\n                {/* Render components based on the active tab */}\r\n                <Container className={`pnb-content ${activeTab === 'findings' ? 'findings-tab' : 'other-tabs'}`}>\r\n                    {activeTab === 'findings' && <PatientFindings patientId={pid} doctorId={did} appointmentId={apid} />}\r\n                    {activeTab === 'prescription' && <Prescription patientId={pid} doctorId={did} appointmentId={apid} />}\r\n                    {activeTab === 'immunization' && <Immunization patientId={pid} doctorId={did} appointmentId={apid} />}\r\n                    {activeTab === 'laboratory' && <LaboratoryResults patientId={pid} doctorId={did} appointmentId={apid} />}\r\n                </Container>\r\n            </div>\r\n        </>\r\n    );\r\n}\r\n\r\nexport default PractitionerNavBar;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}