{"ast":null,"code":"var _jsxFileName = \"E:\\\\School\\\\School\\\\Integrative Programming\\\\medical-appointment\\\\src\\\\components\\\\login\\\\LogInUser.js\",\n  _s = $RefreshSig$();\nimport React, { useState } from 'react';\nimport axios from 'axios';\nimport { useNavigate } from 'react-router-dom';\nimport { Row, Form, Col, Button, Container, Modal, Card } from 'react-bootstrap';\nimport './LogIn.css'; // Optional: Add custom styles here\nimport NavigationalBar from '../landpage/navbar';\nimport { image, ip } from '../../ContentExport';\nimport { usePatient } from '../patient/PatientContext';\nimport { useDoctor } from '../practitioner/DoctorContext';\nimport { jsxDEV as _jsxDEV, Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst LogInUser = () => {\n  _s();\n  const navigate = useNavigate();\n  const [email, setEmail] = useState(\"\");\n  const [password, setPassword] = useState(\"\");\n  const [userRole, setUserRole] = useState(\"Patient\");\n  const [rememberMe, setRememberMe] = useState(false);\n  const [showModal, setShowModal] = useState(false);\n  const [modalEmail, setModalEmail] = useState(\"\");\n  const [modalRole, setModalRole] = useState(\"Patient\");\n  const [modalMessage, setModalMessage] = useState(\"\");\n  const {\n    setPatient\n  } = usePatient();\n  const {\n    setDoctor\n  } = useDoctor();\n  const loginuser = async e => {\n    e.preventDefault();\n    if (userRole === \"Patient\") {\n      try {\n        const response = await axios.post(`${ip.address}/patient/api/login`, {\n          email,\n          password\n        });\n        if (response.data.patientData) {\n          const patientData = response.data.patientData;\n          if (rememberMe) {\n            localStorage.setItem('patient', JSON.stringify(patientData));\n          } else {\n            sessionStorage.setItem('patient', JSON.stringify(patientData));\n          }\n          setPatient(patientData); // Update context with patient data\n          window.alert(\"Successfully logged in\");\n\n          // Navigate to homepage\n          await axios.post(`${ip.address}/api/patient/session`, {\n            userId: patientData._id,\n            role: userRole\n          });\n          navigate('/homepage');\n        } else {\n          window.alert(response.data.message || \"Invalid email or password. Please try again.\");\n        }\n      } catch (err) {\n        console.error('Error logging in:', err);\n        window.alert(\"An error occurred while logging in.\");\n      }\n    } else if (userRole === \"Physician\") {\n      try {\n        const response = await axios.post(`${ip.address}/doctor/api/login`, {\n          email,\n          password\n        });\n        if (response.data.doctorData) {\n          const doctorData = response.data.doctorData;\n          if (rememberMe) {\n            localStorage.setItem('doctor', JSON.stringify(doctorData));\n          } else {\n            sessionStorage.setItem('doctor', JSON.stringify(doctorData));\n          }\n          setDoctor(doctorData);\n          window.alert(\"Successfully logged in\");\n          await axios.post(`${ip.address}/api/doctor/session`, {\n            userId: doctorData._id,\n            role: userRole\n          });\n          navigate('/dashboard');\n        } else {\n          window.alert(response.data.message || \"Invalid email or password. Please try again.\");\n        }\n      } catch (err) {\n        console.error('Error logging in:', err);\n        window.alert(\"An error occurred while logging in.\");\n      }\n    }\n  };\n  const handleForgotPassword = async e => {\n    e.preventDefault();\n    if (modalRole === \"Patient\") {\n      try {\n        const response = await axios.post(`${ip.address}/patient/api/forgot-password`, {\n          email: modalEmail\n        });\n        setModalMessage(response.data.message);\n      } catch (err) {\n        var _err$response, _err$response$data;\n        console.error('Error in forgot password:', err);\n        setModalMessage(((_err$response = err.response) === null || _err$response === void 0 ? void 0 : (_err$response$data = _err$response.data) === null || _err$response$data === void 0 ? void 0 : _err$response$data.message) || 'An error occurred.');\n      }\n    } else if (modalRole === \"Physician\") {\n      try {\n        const response = await axios.post(`${ip.address}/doctor/api/forgot-password`, {\n          email: modalEmail\n        });\n        setModalMessage(response.data.message);\n      } catch (err) {\n        var _err$response2, _err$response2$data;\n        console.error('Error in forgot password:', err);\n        setModalMessage(((_err$response2 = err.response) === null || _err$response2 === void 0 ? void 0 : (_err$response2$data = _err$response2.data) === null || _err$response2$data === void 0 ? void 0 : _err$response2$data.message) || 'An error occurred.');\n      }\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(NavigationalBar, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 112,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"login-background\",\n      style: {\n        //   backgroundImage: `url(${ip.address}/images/Background-Login.png)`, // Dynamically load the image URL\n        backgroundSize: 'cover',\n        backgroundPosition: 'center'\n      },\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"login-background\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"login-overlay\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 124,\n          columnNumber: 9\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"login-page\",\n          children: /*#__PURE__*/_jsxDEV(Container, {\n            children: /*#__PURE__*/_jsxDEV(Row, {\n              className: \"justify-content-center\",\n              children: /*#__PURE__*/_jsxDEV(Col, {\n                md: 6,\n                lg: 5,\n                children: /*#__PURE__*/_jsxDEV(Card, {\n                  className: \"shadow p-4\",\n                  children: /*#__PURE__*/_jsxDEV(Card.Body, {\n                    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n                      className: \"text-center\",\n                      children: [/*#__PURE__*/_jsxDEV(\"img\", {\n                        src: image.logo,\n                        style: {\n                          width: '10.5rem',\n                          height: '3.5rem'\n                        }\n                      }, void 0, false, {\n                        fileName: _jsxFileName,\n                        lineNumber: 132,\n                        columnNumber: 25\n                      }, this), /*#__PURE__*/_jsxDEV(\"h3\", {\n                        className: \"mb-4\",\n                        children: \"Welcome Back!\"\n                      }, void 0, false, {\n                        fileName: _jsxFileName,\n                        lineNumber: 140,\n                        columnNumber: 25\n                      }, this)]\n                    }, void 0, true, {\n                      fileName: _jsxFileName,\n                      lineNumber: 131,\n                      columnNumber: 21\n                    }, this), /*#__PURE__*/_jsxDEV(Form, {\n                      onSubmit: loginuser,\n                      children: [/*#__PURE__*/_jsxDEV(Form.Group, {\n                        controlId: \"formEmail\",\n                        children: [/*#__PURE__*/_jsxDEV(Form.Label, {\n                          children: \"Email Address\"\n                        }, void 0, false, {\n                          fileName: _jsxFileName,\n                          lineNumber: 144,\n                          columnNumber: 25\n                        }, this), /*#__PURE__*/_jsxDEV(Form.Control, {\n                          type: \"email\",\n                          placeholder: \"Enter Email\",\n                          value: email,\n                          onChange: e => setEmail(e.target.value),\n                          required: true\n                        }, void 0, false, {\n                          fileName: _jsxFileName,\n                          lineNumber: 145,\n                          columnNumber: 25\n                        }, this)]\n                      }, void 0, true, {\n                        fileName: _jsxFileName,\n                        lineNumber: 143,\n                        columnNumber: 25\n                      }, this), /*#__PURE__*/_jsxDEV(Form.Group, {\n                        controlId: \"formPassword\",\n                        className: \"mt-3\",\n                        children: [/*#__PURE__*/_jsxDEV(Form.Label, {\n                          children: \"Password\"\n                        }, void 0, false, {\n                          fileName: _jsxFileName,\n                          lineNumber: 154,\n                          columnNumber: 25\n                        }, this), /*#__PURE__*/_jsxDEV(Form.Control, {\n                          type: \"password\",\n                          placeholder: \"Enter Password\",\n                          value: password,\n                          onChange: e => setPassword(e.target.value),\n                          required: true\n                        }, void 0, false, {\n                          fileName: _jsxFileName,\n                          lineNumber: 155,\n                          columnNumber: 25\n                        }, this)]\n                      }, void 0, true, {\n                        fileName: _jsxFileName,\n                        lineNumber: 153,\n                        columnNumber: 25\n                      }, this), /*#__PURE__*/_jsxDEV(Form.Group, {\n                        className: \"mt-3\",\n                        children: [/*#__PURE__*/_jsxDEV(Form.Label, {\n                          children: \"Select Role\"\n                        }, void 0, false, {\n                          fileName: _jsxFileName,\n                          lineNumber: 164,\n                          columnNumber: 25\n                        }, this), /*#__PURE__*/_jsxDEV(Form.Select, {\n                          value: userRole,\n                          onChange: e => setUserRole(e.target.value),\n                          children: [/*#__PURE__*/_jsxDEV(\"option\", {\n                            value: \"Patient\",\n                            children: \"Patient\"\n                          }, void 0, false, {\n                            fileName: _jsxFileName,\n                            lineNumber: 169,\n                            columnNumber: 29\n                          }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n                            value: \"Physician\",\n                            children: \"Physician\"\n                          }, void 0, false, {\n                            fileName: _jsxFileName,\n                            lineNumber: 170,\n                            columnNumber: 29\n                          }, this)]\n                        }, void 0, true, {\n                          fileName: _jsxFileName,\n                          lineNumber: 165,\n                          columnNumber: 25\n                        }, this)]\n                      }, void 0, true, {\n                        fileName: _jsxFileName,\n                        lineNumber: 163,\n                        columnNumber: 25\n                      }, this), /*#__PURE__*/_jsxDEV(Form.Group, {\n                        className: \"mt-3 d-flex justify-content-between align-items-center\",\n                        children: [/*#__PURE__*/_jsxDEV(Form.Check, {\n                          type: \"checkbox\",\n                          label: \"Remember Me\",\n                          checked: rememberMe,\n                          onChange: e => setRememberMe(e.target.checked)\n                        }, void 0, false, {\n                          fileName: _jsxFileName,\n                          lineNumber: 174,\n                          columnNumber: 25\n                        }, this), /*#__PURE__*/_jsxDEV(\"a\", {\n                          href: \"#\",\n                          onClick: () => setShowModal(true),\n                          className: \"text-primary\",\n                          children: \"Forgot Password?\"\n                        }, void 0, false, {\n                          fileName: _jsxFileName,\n                          lineNumber: 180,\n                          columnNumber: 25\n                        }, this)]\n                      }, void 0, true, {\n                        fileName: _jsxFileName,\n                        lineNumber: 173,\n                        columnNumber: 25\n                      }, this), /*#__PURE__*/_jsxDEV(Button, {\n                        type: \"submit\",\n                        variant: \"primary\",\n                        className: \"w-100 mt-4\",\n                        children: \"Log In\"\n                      }, void 0, false, {\n                        fileName: _jsxFileName,\n                        lineNumber: 184,\n                        columnNumber: 25\n                      }, this)]\n                    }, void 0, true, {\n                      fileName: _jsxFileName,\n                      lineNumber: 142,\n                      columnNumber: 21\n                    }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n                      className: \"text-center mt-3\",\n                      children: [\"Not a member? \", /*#__PURE__*/_jsxDEV(\"a\", {\n                        href: \"/medapp/signup\",\n                        className: \"text-primary\",\n                        children: \"Sign up\"\n                      }, void 0, false, {\n                        fileName: _jsxFileName,\n                        lineNumber: 189,\n                        columnNumber: 39\n                      }, this)]\n                    }, void 0, true, {\n                      fileName: _jsxFileName,\n                      lineNumber: 188,\n                      columnNumber: 21\n                    }, this)]\n                  }, void 0, true, {\n                    fileName: _jsxFileName,\n                    lineNumber: 130,\n                    columnNumber: 21\n                  }, this)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 129,\n                  columnNumber: 17\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 128,\n                columnNumber: 17\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 127,\n              columnNumber: 13\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 126,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 125,\n          columnNumber: 9\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 121,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 113,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Modal, {\n      show: showModal,\n      onHide: () => setShowModal(false),\n      children: [/*#__PURE__*/_jsxDEV(Modal.Header, {\n        closeButton: true,\n        children: /*#__PURE__*/_jsxDEV(Modal.Title, {\n          children: \"Forgot Password\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 204,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 203,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Modal.Body, {\n        children: modalMessage ? /*#__PURE__*/_jsxDEV(\"p\", {\n          children: modalMessage\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 208,\n          columnNumber: 13\n        }, this) : /*#__PURE__*/_jsxDEV(Form, {\n          onSubmit: handleForgotPassword,\n          children: [/*#__PURE__*/_jsxDEV(Form.Group, {\n            controlId: \"formModalEmail\",\n            children: [/*#__PURE__*/_jsxDEV(Form.Label, {\n              children: \"Email Address\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 212,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(Form.Control, {\n              type: \"email\",\n              placeholder: \"Enter Email Address\",\n              value: modalEmail,\n              onChange: e => setModalEmail(e.target.value),\n              required: true\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 213,\n              columnNumber: 17\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 211,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(Form.Group, {\n            controlId: \"formModalRole\",\n            className: \"mt-3\",\n            children: [/*#__PURE__*/_jsxDEV(Form.Label, {\n              children: \"Select Role\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 222,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(Form.Select, {\n              value: modalRole,\n              onChange: e => setModalRole(e.target.value),\n              children: [/*#__PURE__*/_jsxDEV(\"option\", {\n                value: \"Patient\",\n                children: \"Patient\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 227,\n                columnNumber: 19\n              }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n                value: \"Physician\",\n                children: \"Physician\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 228,\n                columnNumber: 19\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 223,\n              columnNumber: 17\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 221,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(Button, {\n            type: \"submit\",\n            variant: \"primary\",\n            className: \"mt-3\",\n            children: \"Submit\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 231,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 210,\n          columnNumber: 13\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 206,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 202,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true);\n};\n_s(LogInUser, \"uXtzSNvD4H892K3IsXyTpqwToN8=\", false, function () {\n  return [useNavigate, usePatient, useDoctor];\n});\n_c = LogInUser;\nexport default LogInUser;\nvar _c;\n$RefreshReg$(_c, \"LogInUser\");","map":{"version":3,"names":["React","useState","axios","useNavigate","Row","Form","Col","Button","Container","Modal","Card","NavigationalBar","image","ip","usePatient","useDoctor","jsxDEV","_jsxDEV","Fragment","_Fragment","LogInUser","_s","navigate","email","setEmail","password","setPassword","userRole","setUserRole","rememberMe","setRememberMe","showModal","setShowModal","modalEmail","setModalEmail","modalRole","setModalRole","modalMessage","setModalMessage","setPatient","setDoctor","loginuser","e","preventDefault","response","post","address","data","patientData","localStorage","setItem","JSON","stringify","sessionStorage","window","alert","userId","_id","role","message","err","console","error","doctorData","handleForgotPassword","_err$response","_err$response$data","_err$response2","_err$response2$data","children","fileName","_jsxFileName","lineNumber","columnNumber","className","style","backgroundSize","backgroundPosition","md","lg","Body","src","logo","width","height","onSubmit","Group","controlId","Label","Control","type","placeholder","value","onChange","target","required","Select","Check","label","checked","href","onClick","variant","show","onHide","Header","closeButton","Title","_c","$RefreshReg$"],"sources":["E:/School/School/Integrative Programming/medical-appointment/src/components/login/LogInUser.js"],"sourcesContent":["import React, { useState } from 'react';\r\nimport axios from 'axios';\r\nimport { useNavigate } from 'react-router-dom';\r\nimport { Row, Form, Col, Button, Container, Modal, Card } from 'react-bootstrap';\r\nimport './LogIn.css'; // Optional: Add custom styles here\r\nimport NavigationalBar from '../landpage/navbar';\r\nimport { image, ip } from '../../ContentExport';\r\nimport { usePatient } from '../patient/PatientContext';\r\nimport { useDoctor } from '../practitioner/DoctorContext';\r\n\r\nconst LogInUser = () => {\r\n  const navigate = useNavigate();\r\n  const [email, setEmail] = useState(\"\");\r\n  const [password, setPassword] = useState(\"\");\r\n  const [userRole, setUserRole] = useState(\"Patient\");\r\n  const [rememberMe, setRememberMe] = useState(false);\r\n  const [showModal, setShowModal] = useState(false);\r\n  const [modalEmail, setModalEmail] = useState(\"\");\r\n  const [modalRole, setModalRole] = useState(\"Patient\");\r\n  const [modalMessage, setModalMessage] = useState(\"\");\r\n\r\n  const { setPatient } = usePatient();\r\n  const { setDoctor } = useDoctor();\r\n\r\n  const loginuser = async (e) => {\r\n    e.preventDefault();\r\n\r\n    if (userRole === \"Patient\") {\r\n      try {\r\n        const response = await axios.post(`${ip.address}/patient/api/login`, {\r\n          email,\r\n          password,\r\n        });\r\n\r\n        if (response.data.patientData) {\r\n          const patientData = response.data.patientData;\r\n\r\n          if (rememberMe) {\r\n            localStorage.setItem('patient', JSON.stringify(patientData));\r\n          } else {\r\n            sessionStorage.setItem('patient', JSON.stringify(patientData));\r\n          }\r\n\r\n          setPatient(patientData); // Update context with patient data\r\n          window.alert(\"Successfully logged in\");\r\n\r\n          // Navigate to homepage\r\n          await axios.post(`${ip.address}/api/patient/session`, { userId: patientData._id, role: userRole });\r\n          navigate('/homepage');\r\n        } else {\r\n          window.alert(response.data.message || \"Invalid email or password. Please try again.\");\r\n        }\r\n      } catch (err) {\r\n        console.error('Error logging in:', err);\r\n        window.alert(\"An error occurred while logging in.\");\r\n      }\r\n    } else if (userRole === \"Physician\") {\r\n      try {\r\n        const response = await axios.post(`${ip.address}/doctor/api/login`, {\r\n          email,\r\n          password,\r\n        });\r\n\r\n        if (response.data.doctorData) {\r\n          const doctorData = response.data.doctorData;\r\n\r\n          if (rememberMe) {\r\n            localStorage.setItem('doctor', JSON.stringify(doctorData));\r\n          } else {\r\n            sessionStorage.setItem('doctor', JSON.stringify(doctorData));\r\n          }\r\n\r\n          setDoctor(doctorData);\r\n          window.alert(\"Successfully logged in\");\r\n\r\n          await axios.post(`${ip.address}/api/doctor/session`, { userId: doctorData._id, role: userRole });\r\n          navigate('/dashboard');\r\n        } else {\r\n          window.alert(response.data.message || \"Invalid email or password. Please try again.\");\r\n        }\r\n      } catch (err) {\r\n        console.error('Error logging in:', err);\r\n        window.alert(\"An error occurred while logging in.\");\r\n      }\r\n    }\r\n  };\r\n\r\n  const handleForgotPassword = async (e) => {\r\n    e.preventDefault();\r\n\r\n    if (modalRole === \"Patient\") {\r\n      try {\r\n        const response = await axios.post(`${ip.address}/patient/api/forgot-password`, { email: modalEmail });\r\n        setModalMessage(response.data.message);\r\n      } catch (err) {\r\n        console.error('Error in forgot password:', err);\r\n        setModalMessage(err.response?.data?.message || 'An error occurred.');\r\n      }\r\n    } else if (modalRole === \"Physician\") {\r\n      try {\r\n        const response = await axios.post(`${ip.address}/doctor/api/forgot-password`, { email: modalEmail });\r\n        setModalMessage(response.data.message);\r\n      } catch (err) {\r\n        console.error('Error in forgot password:', err);\r\n        setModalMessage(err.response?.data?.message || 'An error occurred.');\r\n      }\r\n    }\r\n  };\r\n\r\n  return (\r\n    <>\r\n      <NavigationalBar />\r\n      <div\r\n        className=\"login-background\"\r\n        style={{\r\n        //   backgroundImage: `url(${ip.address}/images/Background-Login.png)`, // Dynamically load the image URL\r\n          backgroundSize: 'cover',\r\n          backgroundPosition: 'center',\r\n        }}\r\n      >\r\n        <div className=\"login-background\">\r\n\r\n\r\n        <div className=\"login-overlay\"></div>\r\n        <div className=\"login-page\">\r\n            <Container>\r\n            <Row className=\"justify-content-center\">\r\n                <Col md={6} lg={5}>\r\n                <Card className=\"shadow p-4\">\r\n                    <Card.Body>\r\n                    <div className=\"text-center\">\r\n                        <img src={image.logo}\r\n                            style={{ \r\n                                width: '10.5rem',\r\n                                height: '3.5rem', \r\n\r\n\r\n                            }}\r\n                        />\r\n                        <h3 className=\"mb-4\">Welcome Back!</h3>\r\n                    </div>\r\n                    <Form onSubmit={loginuser}>\r\n                        <Form.Group controlId=\"formEmail\">\r\n                        <Form.Label>Email Address</Form.Label>\r\n                        <Form.Control\r\n                            type=\"email\"\r\n                            placeholder=\"Enter Email\"\r\n                            value={email}\r\n                            onChange={(e) => setEmail(e.target.value)}\r\n                            required\r\n                        />\r\n                        </Form.Group>\r\n                        <Form.Group controlId=\"formPassword\" className=\"mt-3\">\r\n                        <Form.Label>Password</Form.Label>\r\n                        <Form.Control\r\n                            type=\"password\"\r\n                            placeholder=\"Enter Password\"\r\n                            value={password}\r\n                            onChange={(e) => setPassword(e.target.value)}\r\n                            required\r\n                        />\r\n                        </Form.Group>\r\n                        <Form.Group className=\"mt-3\">\r\n                        <Form.Label>Select Role</Form.Label>\r\n                        <Form.Select\r\n                            value={userRole}\r\n                            onChange={(e) => setUserRole(e.target.value)}\r\n                        >\r\n                            <option value=\"Patient\">Patient</option>\r\n                            <option value=\"Physician\">Physician</option>\r\n                        </Form.Select>\r\n                        </Form.Group>\r\n                        <Form.Group className=\"mt-3 d-flex justify-content-between align-items-center\">\r\n                        <Form.Check\r\n                            type=\"checkbox\"\r\n                            label=\"Remember Me\"\r\n                            checked={rememberMe}\r\n                            onChange={(e) => setRememberMe(e.target.checked)}\r\n                        />\r\n                        <a href=\"#\" onClick={() => setShowModal(true)} className=\"text-primary\">\r\n                            Forgot Password?\r\n                        </a>\r\n                        </Form.Group>\r\n                        <Button type=\"submit\" variant=\"primary\" className=\"w-100 mt-4\">\r\n                        Log In\r\n                        </Button>\r\n                    </Form>\r\n                    <p className=\"text-center mt-3\">\r\n                        Not a member? <a href=\"/medapp/signup\" className=\"text-primary\">Sign up</a>\r\n                    </p>\r\n                    </Card.Body>\r\n                </Card>\r\n                </Col>\r\n            </Row>\r\n            </Container>\r\n        </div>\r\n        </div>\r\n\r\n      </div>\r\n\r\n      {/* Forgot Password Modal */}\r\n      <Modal show={showModal} onHide={() => setShowModal(false)}>\r\n        <Modal.Header closeButton>\r\n          <Modal.Title>Forgot Password</Modal.Title>\r\n        </Modal.Header>\r\n        <Modal.Body>\r\n          {modalMessage ? (\r\n            <p>{modalMessage}</p>\r\n          ) : (\r\n            <Form onSubmit={handleForgotPassword}>\r\n              <Form.Group controlId=\"formModalEmail\">\r\n                <Form.Label>Email Address</Form.Label>\r\n                <Form.Control\r\n                  type=\"email\"\r\n                  placeholder=\"Enter Email Address\"\r\n                  value={modalEmail}\r\n                  onChange={(e) => setModalEmail(e.target.value)}\r\n                  required\r\n                />\r\n              </Form.Group>\r\n              <Form.Group controlId=\"formModalRole\" className=\"mt-3\">\r\n                <Form.Label>Select Role</Form.Label>\r\n                <Form.Select\r\n                  value={modalRole}\r\n                  onChange={(e) => setModalRole(e.target.value)}\r\n                >\r\n                  <option value=\"Patient\">Patient</option>\r\n                  <option value=\"Physician\">Physician</option>\r\n                </Form.Select>\r\n              </Form.Group>\r\n              <Button type=\"submit\" variant=\"primary\" className=\"mt-3\">\r\n                Submit\r\n              </Button>\r\n            </Form>\r\n          )}\r\n        </Modal.Body>\r\n      </Modal>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default LogInUser;\r\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,QAAQ,QAAQ,OAAO;AACvC,OAAOC,KAAK,MAAM,OAAO;AACzB,SAASC,WAAW,QAAQ,kBAAkB;AAC9C,SAASC,GAAG,EAAEC,IAAI,EAAEC,GAAG,EAAEC,MAAM,EAAEC,SAAS,EAAEC,KAAK,EAAEC,IAAI,QAAQ,iBAAiB;AAChF,OAAO,aAAa,CAAC,CAAC;AACtB,OAAOC,eAAe,MAAM,oBAAoB;AAChD,SAASC,KAAK,EAAEC,EAAE,QAAQ,qBAAqB;AAC/C,SAASC,UAAU,QAAQ,2BAA2B;AACtD,SAASC,SAAS,QAAQ,+BAA+B;AAAC,SAAAC,MAAA,IAAAC,OAAA,EAAAC,QAAA,IAAAC,SAAA;AAE1D,MAAMC,SAAS,GAAGA,CAAA,KAAM;EAAAC,EAAA;EACtB,MAAMC,QAAQ,GAAGnB,WAAW,CAAC,CAAC;EAC9B,MAAM,CAACoB,KAAK,EAAEC,QAAQ,CAAC,GAAGvB,QAAQ,CAAC,EAAE,CAAC;EACtC,MAAM,CAACwB,QAAQ,EAAEC,WAAW,CAAC,GAAGzB,QAAQ,CAAC,EAAE,CAAC;EAC5C,MAAM,CAAC0B,QAAQ,EAAEC,WAAW,CAAC,GAAG3B,QAAQ,CAAC,SAAS,CAAC;EACnD,MAAM,CAAC4B,UAAU,EAAEC,aAAa,CAAC,GAAG7B,QAAQ,CAAC,KAAK,CAAC;EACnD,MAAM,CAAC8B,SAAS,EAAEC,YAAY,CAAC,GAAG/B,QAAQ,CAAC,KAAK,CAAC;EACjD,MAAM,CAACgC,UAAU,EAAEC,aAAa,CAAC,GAAGjC,QAAQ,CAAC,EAAE,CAAC;EAChD,MAAM,CAACkC,SAAS,EAAEC,YAAY,CAAC,GAAGnC,QAAQ,CAAC,SAAS,CAAC;EACrD,MAAM,CAACoC,YAAY,EAAEC,eAAe,CAAC,GAAGrC,QAAQ,CAAC,EAAE,CAAC;EAEpD,MAAM;IAAEsC;EAAW,CAAC,GAAGzB,UAAU,CAAC,CAAC;EACnC,MAAM;IAAE0B;EAAU,CAAC,GAAGzB,SAAS,CAAC,CAAC;EAEjC,MAAM0B,SAAS,GAAG,MAAOC,CAAC,IAAK;IAC7BA,CAAC,CAACC,cAAc,CAAC,CAAC;IAElB,IAAIhB,QAAQ,KAAK,SAAS,EAAE;MAC1B,IAAI;QACF,MAAMiB,QAAQ,GAAG,MAAM1C,KAAK,CAAC2C,IAAI,CAAC,GAAGhC,EAAE,CAACiC,OAAO,oBAAoB,EAAE;UACnEvB,KAAK;UACLE;QACF,CAAC,CAAC;QAEF,IAAImB,QAAQ,CAACG,IAAI,CAACC,WAAW,EAAE;UAC7B,MAAMA,WAAW,GAAGJ,QAAQ,CAACG,IAAI,CAACC,WAAW;UAE7C,IAAInB,UAAU,EAAE;YACdoB,YAAY,CAACC,OAAO,CAAC,SAAS,EAAEC,IAAI,CAACC,SAAS,CAACJ,WAAW,CAAC,CAAC;UAC9D,CAAC,MAAM;YACLK,cAAc,CAACH,OAAO,CAAC,SAAS,EAAEC,IAAI,CAACC,SAAS,CAACJ,WAAW,CAAC,CAAC;UAChE;UAEAT,UAAU,CAACS,WAAW,CAAC,CAAC,CAAC;UACzBM,MAAM,CAACC,KAAK,CAAC,wBAAwB,CAAC;;UAEtC;UACA,MAAMrD,KAAK,CAAC2C,IAAI,CAAC,GAAGhC,EAAE,CAACiC,OAAO,sBAAsB,EAAE;YAAEU,MAAM,EAAER,WAAW,CAACS,GAAG;YAAEC,IAAI,EAAE/B;UAAS,CAAC,CAAC;UAClGL,QAAQ,CAAC,WAAW,CAAC;QACvB,CAAC,MAAM;UACLgC,MAAM,CAACC,KAAK,CAACX,QAAQ,CAACG,IAAI,CAACY,OAAO,IAAI,8CAA8C,CAAC;QACvF;MACF,CAAC,CAAC,OAAOC,GAAG,EAAE;QACZC,OAAO,CAACC,KAAK,CAAC,mBAAmB,EAAEF,GAAG,CAAC;QACvCN,MAAM,CAACC,KAAK,CAAC,qCAAqC,CAAC;MACrD;IACF,CAAC,MAAM,IAAI5B,QAAQ,KAAK,WAAW,EAAE;MACnC,IAAI;QACF,MAAMiB,QAAQ,GAAG,MAAM1C,KAAK,CAAC2C,IAAI,CAAC,GAAGhC,EAAE,CAACiC,OAAO,mBAAmB,EAAE;UAClEvB,KAAK;UACLE;QACF,CAAC,CAAC;QAEF,IAAImB,QAAQ,CAACG,IAAI,CAACgB,UAAU,EAAE;UAC5B,MAAMA,UAAU,GAAGnB,QAAQ,CAACG,IAAI,CAACgB,UAAU;UAE3C,IAAIlC,UAAU,EAAE;YACdoB,YAAY,CAACC,OAAO,CAAC,QAAQ,EAAEC,IAAI,CAACC,SAAS,CAACW,UAAU,CAAC,CAAC;UAC5D,CAAC,MAAM;YACLV,cAAc,CAACH,OAAO,CAAC,QAAQ,EAAEC,IAAI,CAACC,SAAS,CAACW,UAAU,CAAC,CAAC;UAC9D;UAEAvB,SAAS,CAACuB,UAAU,CAAC;UACrBT,MAAM,CAACC,KAAK,CAAC,wBAAwB,CAAC;UAEtC,MAAMrD,KAAK,CAAC2C,IAAI,CAAC,GAAGhC,EAAE,CAACiC,OAAO,qBAAqB,EAAE;YAAEU,MAAM,EAAEO,UAAU,CAACN,GAAG;YAAEC,IAAI,EAAE/B;UAAS,CAAC,CAAC;UAChGL,QAAQ,CAAC,YAAY,CAAC;QACxB,CAAC,MAAM;UACLgC,MAAM,CAACC,KAAK,CAACX,QAAQ,CAACG,IAAI,CAACY,OAAO,IAAI,8CAA8C,CAAC;QACvF;MACF,CAAC,CAAC,OAAOC,GAAG,EAAE;QACZC,OAAO,CAACC,KAAK,CAAC,mBAAmB,EAAEF,GAAG,CAAC;QACvCN,MAAM,CAACC,KAAK,CAAC,qCAAqC,CAAC;MACrD;IACF;EACF,CAAC;EAED,MAAMS,oBAAoB,GAAG,MAAOtB,CAAC,IAAK;IACxCA,CAAC,CAACC,cAAc,CAAC,CAAC;IAElB,IAAIR,SAAS,KAAK,SAAS,EAAE;MAC3B,IAAI;QACF,MAAMS,QAAQ,GAAG,MAAM1C,KAAK,CAAC2C,IAAI,CAAC,GAAGhC,EAAE,CAACiC,OAAO,8BAA8B,EAAE;UAAEvB,KAAK,EAAEU;QAAW,CAAC,CAAC;QACrGK,eAAe,CAACM,QAAQ,CAACG,IAAI,CAACY,OAAO,CAAC;MACxC,CAAC,CAAC,OAAOC,GAAG,EAAE;QAAA,IAAAK,aAAA,EAAAC,kBAAA;QACZL,OAAO,CAACC,KAAK,CAAC,2BAA2B,EAAEF,GAAG,CAAC;QAC/CtB,eAAe,CAAC,EAAA2B,aAAA,GAAAL,GAAG,CAAChB,QAAQ,cAAAqB,aAAA,wBAAAC,kBAAA,GAAZD,aAAA,CAAclB,IAAI,cAAAmB,kBAAA,uBAAlBA,kBAAA,CAAoBP,OAAO,KAAI,oBAAoB,CAAC;MACtE;IACF,CAAC,MAAM,IAAIxB,SAAS,KAAK,WAAW,EAAE;MACpC,IAAI;QACF,MAAMS,QAAQ,GAAG,MAAM1C,KAAK,CAAC2C,IAAI,CAAC,GAAGhC,EAAE,CAACiC,OAAO,6BAA6B,EAAE;UAAEvB,KAAK,EAAEU;QAAW,CAAC,CAAC;QACpGK,eAAe,CAACM,QAAQ,CAACG,IAAI,CAACY,OAAO,CAAC;MACxC,CAAC,CAAC,OAAOC,GAAG,EAAE;QAAA,IAAAO,cAAA,EAAAC,mBAAA;QACZP,OAAO,CAACC,KAAK,CAAC,2BAA2B,EAAEF,GAAG,CAAC;QAC/CtB,eAAe,CAAC,EAAA6B,cAAA,GAAAP,GAAG,CAAChB,QAAQ,cAAAuB,cAAA,wBAAAC,mBAAA,GAAZD,cAAA,CAAcpB,IAAI,cAAAqB,mBAAA,uBAAlBA,mBAAA,CAAoBT,OAAO,KAAI,oBAAoB,CAAC;MACtE;IACF;EACF,CAAC;EAED,oBACE1C,OAAA,CAAAE,SAAA;IAAAkD,QAAA,gBACEpD,OAAA,CAACN,eAAe;MAAA2D,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAE,CAAC,eACnBxD,OAAA;MACEyD,SAAS,EAAC,kBAAkB;MAC5BC,KAAK,EAAE;QACP;QACEC,cAAc,EAAE,OAAO;QACvBC,kBAAkB,EAAE;MACtB,CAAE;MAAAR,QAAA,eAEFpD,OAAA;QAAKyD,SAAS,EAAC,kBAAkB;QAAAL,QAAA,gBAGjCpD,OAAA;UAAKyD,SAAS,EAAC;QAAe;UAAAJ,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAM,CAAC,eACrCxD,OAAA;UAAKyD,SAAS,EAAC,YAAY;UAAAL,QAAA,eACvBpD,OAAA,CAACT,SAAS;YAAA6D,QAAA,eACVpD,OAAA,CAACb,GAAG;cAACsE,SAAS,EAAC,wBAAwB;cAAAL,QAAA,eACnCpD,OAAA,CAACX,GAAG;gBAACwE,EAAE,EAAE,CAAE;gBAACC,EAAE,EAAE,CAAE;gBAAAV,QAAA,eAClBpD,OAAA,CAACP,IAAI;kBAACgE,SAAS,EAAC,YAAY;kBAAAL,QAAA,eACxBpD,OAAA,CAACP,IAAI,CAACsE,IAAI;oBAAAX,QAAA,gBACVpD,OAAA;sBAAKyD,SAAS,EAAC,aAAa;sBAAAL,QAAA,gBACxBpD,OAAA;wBAAKgE,GAAG,EAAErE,KAAK,CAACsE,IAAK;wBACjBP,KAAK,EAAE;0BACHQ,KAAK,EAAE,SAAS;0BAChBC,MAAM,EAAE;wBAGZ;sBAAE;wBAAAd,QAAA,EAAAC,YAAA;wBAAAC,UAAA;wBAAAC,YAAA;sBAAA,OACL,CAAC,eACFxD,OAAA;wBAAIyD,SAAS,EAAC,MAAM;wBAAAL,QAAA,EAAC;sBAAa;wBAAAC,QAAA,EAAAC,YAAA;wBAAAC,UAAA;wBAAAC,YAAA;sBAAA,OAAI,CAAC;oBAAA;sBAAAH,QAAA,EAAAC,YAAA;sBAAAC,UAAA;sBAAAC,YAAA;oBAAA,OACtC,CAAC,eACNxD,OAAA,CAACZ,IAAI;sBAACgF,QAAQ,EAAE5C,SAAU;sBAAA4B,QAAA,gBACtBpD,OAAA,CAACZ,IAAI,CAACiF,KAAK;wBAACC,SAAS,EAAC,WAAW;wBAAAlB,QAAA,gBACjCpD,OAAA,CAACZ,IAAI,CAACmF,KAAK;0BAAAnB,QAAA,EAAC;wBAAa;0BAAAC,QAAA,EAAAC,YAAA;0BAAAC,UAAA;0BAAAC,YAAA;wBAAA,OAAY,CAAC,eACtCxD,OAAA,CAACZ,IAAI,CAACoF,OAAO;0BACTC,IAAI,EAAC,OAAO;0BACZC,WAAW,EAAC,aAAa;0BACzBC,KAAK,EAAErE,KAAM;0BACbsE,QAAQ,EAAGnD,CAAC,IAAKlB,QAAQ,CAACkB,CAAC,CAACoD,MAAM,CAACF,KAAK,CAAE;0BAC1CG,QAAQ;wBAAA;0BAAAzB,QAAA,EAAAC,YAAA;0BAAAC,UAAA;0BAAAC,YAAA;wBAAA,OACX,CAAC;sBAAA;wBAAAH,QAAA,EAAAC,YAAA;wBAAAC,UAAA;wBAAAC,YAAA;sBAAA,OACU,CAAC,eACbxD,OAAA,CAACZ,IAAI,CAACiF,KAAK;wBAACC,SAAS,EAAC,cAAc;wBAACb,SAAS,EAAC,MAAM;wBAAAL,QAAA,gBACrDpD,OAAA,CAACZ,IAAI,CAACmF,KAAK;0BAAAnB,QAAA,EAAC;wBAAQ;0BAAAC,QAAA,EAAAC,YAAA;0BAAAC,UAAA;0BAAAC,YAAA;wBAAA,OAAY,CAAC,eACjCxD,OAAA,CAACZ,IAAI,CAACoF,OAAO;0BACTC,IAAI,EAAC,UAAU;0BACfC,WAAW,EAAC,gBAAgB;0BAC5BC,KAAK,EAAEnE,QAAS;0BAChBoE,QAAQ,EAAGnD,CAAC,IAAKhB,WAAW,CAACgB,CAAC,CAACoD,MAAM,CAACF,KAAK,CAAE;0BAC7CG,QAAQ;wBAAA;0BAAAzB,QAAA,EAAAC,YAAA;0BAAAC,UAAA;0BAAAC,YAAA;wBAAA,OACX,CAAC;sBAAA;wBAAAH,QAAA,EAAAC,YAAA;wBAAAC,UAAA;wBAAAC,YAAA;sBAAA,OACU,CAAC,eACbxD,OAAA,CAACZ,IAAI,CAACiF,KAAK;wBAACZ,SAAS,EAAC,MAAM;wBAAAL,QAAA,gBAC5BpD,OAAA,CAACZ,IAAI,CAACmF,KAAK;0BAAAnB,QAAA,EAAC;wBAAW;0BAAAC,QAAA,EAAAC,YAAA;0BAAAC,UAAA;0BAAAC,YAAA;wBAAA,OAAY,CAAC,eACpCxD,OAAA,CAACZ,IAAI,CAAC2F,MAAM;0BACRJ,KAAK,EAAEjE,QAAS;0BAChBkE,QAAQ,EAAGnD,CAAC,IAAKd,WAAW,CAACc,CAAC,CAACoD,MAAM,CAACF,KAAK,CAAE;0BAAAvB,QAAA,gBAE7CpD,OAAA;4BAAQ2E,KAAK,EAAC,SAAS;4BAAAvB,QAAA,EAAC;0BAAO;4BAAAC,QAAA,EAAAC,YAAA;4BAAAC,UAAA;4BAAAC,YAAA;0BAAA,OAAQ,CAAC,eACxCxD,OAAA;4BAAQ2E,KAAK,EAAC,WAAW;4BAAAvB,QAAA,EAAC;0BAAS;4BAAAC,QAAA,EAAAC,YAAA;4BAAAC,UAAA;4BAAAC,YAAA;0BAAA,OAAQ,CAAC;wBAAA;0BAAAH,QAAA,EAAAC,YAAA;0BAAAC,UAAA;0BAAAC,YAAA;wBAAA,OACnC,CAAC;sBAAA;wBAAAH,QAAA,EAAAC,YAAA;wBAAAC,UAAA;wBAAAC,YAAA;sBAAA,OACF,CAAC,eACbxD,OAAA,CAACZ,IAAI,CAACiF,KAAK;wBAACZ,SAAS,EAAC,wDAAwD;wBAAAL,QAAA,gBAC9EpD,OAAA,CAACZ,IAAI,CAAC4F,KAAK;0BACPP,IAAI,EAAC,UAAU;0BACfQ,KAAK,EAAC,aAAa;0BACnBC,OAAO,EAAEtE,UAAW;0BACpBgE,QAAQ,EAAGnD,CAAC,IAAKZ,aAAa,CAACY,CAAC,CAACoD,MAAM,CAACK,OAAO;wBAAE;0BAAA7B,QAAA,EAAAC,YAAA;0BAAAC,UAAA;0BAAAC,YAAA;wBAAA,OACpD,CAAC,eACFxD,OAAA;0BAAGmF,IAAI,EAAC,GAAG;0BAACC,OAAO,EAAEA,CAAA,KAAMrE,YAAY,CAAC,IAAI,CAAE;0BAAC0C,SAAS,EAAC,cAAc;0BAAAL,QAAA,EAAC;wBAExE;0BAAAC,QAAA,EAAAC,YAAA;0BAAAC,UAAA;0BAAAC,YAAA;wBAAA,OAAG,CAAC;sBAAA;wBAAAH,QAAA,EAAAC,YAAA;wBAAAC,UAAA;wBAAAC,YAAA;sBAAA,OACQ,CAAC,eACbxD,OAAA,CAACV,MAAM;wBAACmF,IAAI,EAAC,QAAQ;wBAACY,OAAO,EAAC,SAAS;wBAAC5B,SAAS,EAAC,YAAY;wBAAAL,QAAA,EAAC;sBAE/D;wBAAAC,QAAA,EAAAC,YAAA;wBAAAC,UAAA;wBAAAC,YAAA;sBAAA,OAAQ,CAAC;oBAAA;sBAAAH,QAAA,EAAAC,YAAA;sBAAAC,UAAA;sBAAAC,YAAA;oBAAA,OACP,CAAC,eACPxD,OAAA;sBAAGyD,SAAS,EAAC,kBAAkB;sBAAAL,QAAA,GAAC,gBACd,eAAApD,OAAA;wBAAGmF,IAAI,EAAC,gBAAgB;wBAAC1B,SAAS,EAAC,cAAc;wBAAAL,QAAA,EAAC;sBAAO;wBAAAC,QAAA,EAAAC,YAAA;wBAAAC,UAAA;wBAAAC,YAAA;sBAAA,OAAG,CAAC;oBAAA;sBAAAH,QAAA,EAAAC,YAAA;sBAAAC,UAAA;sBAAAC,YAAA;oBAAA,OAC5E,CAAC;kBAAA;oBAAAH,QAAA,EAAAC,YAAA;oBAAAC,UAAA;oBAAAC,YAAA;kBAAA,OACO;gBAAC;kBAAAH,QAAA,EAAAC,YAAA;kBAAAC,UAAA;kBAAAC,YAAA;gBAAA,OACV;cAAC;gBAAAH,QAAA,EAAAC,YAAA;gBAAAC,UAAA;gBAAAC,YAAA;cAAA,OACF;YAAC;cAAAH,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OACL;UAAC;YAAAH,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OACK;QAAC;UAAAH,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OACX,CAAC;MAAA;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACD;IAAC;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAEH,CAAC,eAGNxD,OAAA,CAACR,KAAK;MAAC8F,IAAI,EAAExE,SAAU;MAACyE,MAAM,EAAEA,CAAA,KAAMxE,YAAY,CAAC,KAAK,CAAE;MAAAqC,QAAA,gBACxDpD,OAAA,CAACR,KAAK,CAACgG,MAAM;QAACC,WAAW;QAAArC,QAAA,eACvBpD,OAAA,CAACR,KAAK,CAACkG,KAAK;UAAAtC,QAAA,EAAC;QAAe;UAAAC,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAa;MAAC;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAC9B,CAAC,eACfxD,OAAA,CAACR,KAAK,CAACuE,IAAI;QAAAX,QAAA,EACRhC,YAAY,gBACXpB,OAAA;UAAAoD,QAAA,EAAIhC;QAAY;UAAAiC,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAI,CAAC,gBAErBxD,OAAA,CAACZ,IAAI;UAACgF,QAAQ,EAAErB,oBAAqB;UAAAK,QAAA,gBACnCpD,OAAA,CAACZ,IAAI,CAACiF,KAAK;YAACC,SAAS,EAAC,gBAAgB;YAAAlB,QAAA,gBACpCpD,OAAA,CAACZ,IAAI,CAACmF,KAAK;cAAAnB,QAAA,EAAC;YAAa;cAAAC,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OAAY,CAAC,eACtCxD,OAAA,CAACZ,IAAI,CAACoF,OAAO;cACXC,IAAI,EAAC,OAAO;cACZC,WAAW,EAAC,qBAAqB;cACjCC,KAAK,EAAE3D,UAAW;cAClB4D,QAAQ,EAAGnD,CAAC,IAAKR,aAAa,CAACQ,CAAC,CAACoD,MAAM,CAACF,KAAK,CAAE;cAC/CG,QAAQ;YAAA;cAAAzB,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OACT,CAAC;UAAA;YAAAH,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OACQ,CAAC,eACbxD,OAAA,CAACZ,IAAI,CAACiF,KAAK;YAACC,SAAS,EAAC,eAAe;YAACb,SAAS,EAAC,MAAM;YAAAL,QAAA,gBACpDpD,OAAA,CAACZ,IAAI,CAACmF,KAAK;cAAAnB,QAAA,EAAC;YAAW;cAAAC,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OAAY,CAAC,eACpCxD,OAAA,CAACZ,IAAI,CAAC2F,MAAM;cACVJ,KAAK,EAAEzD,SAAU;cACjB0D,QAAQ,EAAGnD,CAAC,IAAKN,YAAY,CAACM,CAAC,CAACoD,MAAM,CAACF,KAAK,CAAE;cAAAvB,QAAA,gBAE9CpD,OAAA;gBAAQ2E,KAAK,EAAC,SAAS;gBAAAvB,QAAA,EAAC;cAAO;gBAAAC,QAAA,EAAAC,YAAA;gBAAAC,UAAA;gBAAAC,YAAA;cAAA,OAAQ,CAAC,eACxCxD,OAAA;gBAAQ2E,KAAK,EAAC,WAAW;gBAAAvB,QAAA,EAAC;cAAS;gBAAAC,QAAA,EAAAC,YAAA;gBAAAC,UAAA;gBAAAC,YAAA;cAAA,OAAQ,CAAC;YAAA;cAAAH,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OACjC,CAAC;UAAA;YAAAH,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OACJ,CAAC,eACbxD,OAAA,CAACV,MAAM;YAACmF,IAAI,EAAC,QAAQ;YAACY,OAAO,EAAC,SAAS;YAAC5B,SAAS,EAAC,MAAM;YAAAL,QAAA,EAAC;UAEzD;YAAAC,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAAQ,CAAC;QAAA;UAAAH,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OACL;MACP;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACS,CAAC;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACR,CAAC;EAAA,eACR,CAAC;AAEP,CAAC;AAACpD,EAAA,CArOID,SAAS;EAAA,QACIjB,WAAW,EAULW,UAAU,EACXC,SAAS;AAAA;AAAA6F,EAAA,GAZ3BxF,SAAS;AAuOf,eAAeA,SAAS;AAAC,IAAAwF,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}