{"ast":null,"code":"var _jsxFileName = \"E:\\\\School\\\\School\\\\Integrative Programming\\\\medical-appointment\\\\src\\\\components\\\\login\\\\NewSignUp.js\",\n  _s = $RefreshSig$();\nimport axios from \"axios\";\nimport { useEffect, useState } from \"react\";\nimport { Link, useNavigate } from \"react-router-dom\";\nimport { Row, Col, Button, Form, Container, Card } from \"react-bootstrap\";\nimport PasswordValidation from \"./PasswordValidation\";\nimport \"./SignUp.css\";\nimport NavigationalBar from '../landpage/navbar';\nimport { jsxDEV as _jsxDEV, Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst NewSignUp = () => {\n  _s();\n  const navigate = useNavigate();\n  const [ufirstName, setfirstName] = useState(\"\");\n  const [uLastName, setLastName] = useState(\"\");\n  const [uAge, setAge] = useState(0);\n  const [uMiddleInitial, setMiddleInitial] = useState(\"\");\n  const [uemail, setemail] = useState(\"\");\n  const [uBirth, setBirth] = useState(\"\");\n  const [upassword, setPass] = useState(\"\");\n  const [confirmPassword, setConfirmPassword] = useState(\"\");\n  const [uNumber, setNumber] = useState(\"\");\n  const [uGender, setGender] = useState(\"\");\n  const [urole, setURole] = useState(\"\");\n  const [accountStatus, setAccountStatus] = useState('Registered');\n\n  // Practitioner-specific fields\n  const [dr_licenseNo, setLicenseNo] = useState(\"\");\n\n  // Patient-specific fields\n  const [patientAddress, setPatientAddress] = useState({\n    street: \"\",\n    city: \"\",\n    state: \"\",\n    zipCode: \"\",\n    country: \"\"\n  });\n  const [patientNationality, setPatientNationality] = useState(\"\");\n  const [patientCivilStatus, setPatientCivilStatus] = useState(\"\");\n  const [errors, setErrors] = useState({\n    firstName: \"\",\n    lastName: \"\",\n    email: \"\",\n    password: \"\",\n    confirmPassword: \"\",\n    birth: \"\",\n    number: \"\",\n    gender: \"\",\n    role: \"\"\n  });\n\n  // Validation and handleBlur function here...\n\n  const registerUser = () => {\n    if (!validateForm()) {\n      return;\n    }\n    if (urole === \"Practitioner\") {\n      const doctorUser = {\n        dr_firstName: ufirstName,\n        dr_lastName: uLastName,\n        dr_middleInitial: uMiddleInitial,\n        dr_email: uemail,\n        dr_password: upassword,\n        dr_dob: uBirth,\n        dr_age: uAge,\n        dr_contactNumber: uNumber,\n        dr_gender: uGender,\n        dr_licenseNo: dr_licenseNo // Practitioner-specific field\n      };\n      axios.post('http://localhost:8000/doctor/api/signup', doctorUser).then(response => {\n        console.log(response);\n        window.alert(\"Successfully registered Practitioner\");\n        navigate('/medapp/login');\n      }).catch(err => {\n        console.log(err);\n      });\n    } else if (urole === \"Patient\") {\n      const patientUser = {\n        patient_firstName: ufirstName,\n        patient_middleInitial: uMiddleInitial,\n        patient_lastName: uLastName,\n        patient_email: uemail,\n        patient_password: upassword,\n        patient_dob: uBirth,\n        patient_age: uAge,\n        patient_contactNumber: uNumber,\n        patient_gender: uGender,\n        accountStatus: accountStatus,\n        patient_address: patientAddress,\n        // Patient-specific field\n        patient_nationality: patientNationality,\n        patient_civilstatus: patientCivilStatus\n      };\n      console.log(patientUser);\n      axios.post('http://localhost:8000/patient/api/signup', patientUser).then(response => {\n        console.log(response);\n        window.alert(\"Successfully registered Patient\");\n        navigate('/medapp/login');\n      }).catch(err => {\n        console.log(err);\n      });\n    }\n  };\n\n  // Calculate age and handle birth date changes here...\n\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(NavigationalBar, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 112,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(Container, {\n      className: \"d-flex justify-content-center align-items-center vh-100\",\n      children: /*#__PURE__*/_jsxDEV(Card, {\n        className: \"container\",\n        children: /*#__PURE__*/_jsxDEV(Card.Body, {\n          children: /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"container\",\n            children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n              children: \"Sign Up\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 117,\n              columnNumber: 29\n            }, this), /*#__PURE__*/_jsxDEV(\"hr\", {}, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 118,\n              columnNumber: 29\n            }, this), /*#__PURE__*/_jsxDEV(Form, {\n              children: [/*#__PURE__*/_jsxDEV(Row, {\n                className: \"mb-3\",\n                children: /*#__PURE__*/_jsxDEV(Form.Group, {\n                  as: Col,\n                  controlId: \"formFName\",\n                  children: [/*#__PURE__*/_jsxDEV(Form.Label, {\n                    children: \"First Name\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 123,\n                    columnNumber: 41\n                  }, this), /*#__PURE__*/_jsxDEV(Form.Control, {\n                    type: \"text\",\n                    placeholder: \"Enter First Name\",\n                    onChange: e => setfirstName(e.target.value),\n                    onBlur: e => handleBlur(\"firstName\", e.target.value)\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 124,\n                    columnNumber: 41\n                  }, this)]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 122,\n                  columnNumber: 37\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 120,\n                columnNumber: 33\n              }, this), urole === \"Practitioner\" && /*#__PURE__*/_jsxDEV(Row, {\n                children: /*#__PURE__*/_jsxDEV(Form.Group, {\n                  as: Col,\n                  controlId: \"formLicenseNo\",\n                  children: [/*#__PURE__*/_jsxDEV(Form.Label, {\n                    children: \"License Number\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 138,\n                    columnNumber: 45\n                  }, this), /*#__PURE__*/_jsxDEV(Form.Control, {\n                    type: \"text\",\n                    placeholder: \"Enter License Number\",\n                    onChange: e => setLicenseNo(e.target.value),\n                    onBlur: e => handleBlur(\"licenseNo\", e.target.value)\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 139,\n                    columnNumber: 45\n                  }, this)]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 137,\n                  columnNumber: 41\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 136,\n                columnNumber: 37\n              }, this), urole === \"Patient\" && /*#__PURE__*/_jsxDEV(_Fragment, {\n                children: [/*#__PURE__*/_jsxDEV(Row, {\n                  children: [/*#__PURE__*/_jsxDEV(Form.Group, {\n                    as: Col,\n                    controlId: \"formStreet\",\n                    children: [/*#__PURE__*/_jsxDEV(Form.Label, {\n                      children: \"Street\"\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 153,\n                      columnNumber: 49\n                    }, this), /*#__PURE__*/_jsxDEV(Form.Control, {\n                      type: \"text\",\n                      placeholder: \"Enter Street\",\n                      onChange: e => setPatientAddress({\n                        ...patientAddress,\n                        street: e.target.value\n                      })\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 154,\n                      columnNumber: 49\n                    }, this)]\n                  }, void 0, true, {\n                    fileName: _jsxFileName,\n                    lineNumber: 152,\n                    columnNumber: 45\n                  }, this), /*#__PURE__*/_jsxDEV(Form.Group, {\n                    as: Col,\n                    controlId: \"formCity\",\n                    children: [/*#__PURE__*/_jsxDEV(Form.Label, {\n                      children: \"City\"\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 161,\n                      columnNumber: 49\n                    }, this), /*#__PURE__*/_jsxDEV(Form.Control, {\n                      type: \"text\",\n                      placeholder: \"Enter City\",\n                      onChange: e => setPatientAddress({\n                        ...patientAddress,\n                        city: e.target.value\n                      })\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 162,\n                      columnNumber: 49\n                    }, this)]\n                  }, void 0, true, {\n                    fileName: _jsxFileName,\n                    lineNumber: 160,\n                    columnNumber: 45\n                  }, this)]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 151,\n                  columnNumber: 41\n                }, this), /*#__PURE__*/_jsxDEV(Row, {\n                  children: [/*#__PURE__*/_jsxDEV(Form.Group, {\n                    as: Col,\n                    controlId: \"formNationality\",\n                    children: [/*#__PURE__*/_jsxDEV(Form.Label, {\n                      children: \"Nationality\"\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 173,\n                      columnNumber: 49\n                    }, this), /*#__PURE__*/_jsxDEV(Form.Control, {\n                      type: \"text\",\n                      placeholder: \"Enter Nationality\",\n                      onChange: e => setPatientNationality(e.target.value)\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 174,\n                      columnNumber: 49\n                    }, this)]\n                  }, void 0, true, {\n                    fileName: _jsxFileName,\n                    lineNumber: 172,\n                    columnNumber: 45\n                  }, this), /*#__PURE__*/_jsxDEV(Form.Group, {\n                    as: Col,\n                    controlId: \"formCivilStatus\",\n                    children: [/*#__PURE__*/_jsxDEV(Form.Label, {\n                      children: \"Civil Status\"\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 181,\n                      columnNumber: 49\n                    }, this), /*#__PURE__*/_jsxDEV(Form.Select, {\n                      onChange: e => setPatientCivilStatus(e.target.value),\n                      children: [/*#__PURE__*/_jsxDEV(\"option\", {\n                        value: \"\",\n                        children: \"Choose Civil Status\"\n                      }, void 0, false, {\n                        fileName: _jsxFileName,\n                        lineNumber: 185,\n                        columnNumber: 53\n                      }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n                        value: \"Single\",\n                        children: \"Single\"\n                      }, void 0, false, {\n                        fileName: _jsxFileName,\n                        lineNumber: 186,\n                        columnNumber: 53\n                      }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n                        value: \"Married\",\n                        children: \"Married\"\n                      }, void 0, false, {\n                        fileName: _jsxFileName,\n                        lineNumber: 187,\n                        columnNumber: 53\n                      }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n                        value: \"Widowed\",\n                        children: \"Widowed\"\n                      }, void 0, false, {\n                        fileName: _jsxFileName,\n                        lineNumber: 188,\n                        columnNumber: 53\n                      }, this)]\n                    }, void 0, true, {\n                      fileName: _jsxFileName,\n                      lineNumber: 182,\n                      columnNumber: 49\n                    }, this)]\n                  }, void 0, true, {\n                    fileName: _jsxFileName,\n                    lineNumber: 180,\n                    columnNumber: 45\n                  }, this)]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 171,\n                  columnNumber: 41\n                }, this)]\n              }, void 0, true), /*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"d-lg-flex justify-content-between align-items-center mt-3\",\n                children: [/*#__PURE__*/_jsxDEV(Button, {\n                  onClick: registerUser,\n                  variant: \"primary\",\n                  type: \"button\",\n                  children: \"Submit\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 198,\n                  columnNumber: 37\n                }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                  className: \"mb-0\",\n                  children: /*#__PURE__*/_jsxDEV(Link, {\n                    to: \"/medapp/login\",\n                    children: \"Already have an account?\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 202,\n                    columnNumber: 41\n                  }, this)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 201,\n                  columnNumber: 37\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 197,\n                columnNumber: 33\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 119,\n              columnNumber: 29\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 116,\n            columnNumber: 25\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 115,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 114,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 113,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true);\n};\n_s(NewSignUp, \"bwaCdBiAd5f6KzA7ElYBON01ghI=\", false, function () {\n  return [useNavigate];\n});\n_c = NewSignUp;\nexport default NewSignUp;\nvar _c;\n$RefreshReg$(_c, \"NewSignUp\");","map":{"version":3,"names":["axios","useEffect","useState","Link","useNavigate","Row","Col","Button","Form","Container","Card","PasswordValidation","NavigationalBar","jsxDEV","_jsxDEV","Fragment","_Fragment","NewSignUp","_s","navigate","ufirstName","setfirstName","uLastName","setLastName","uAge","setAge","uMiddleInitial","setMiddleInitial","uemail","setemail","uBirth","setBirth","upassword","setPass","confirmPassword","setConfirmPassword","uNumber","setNumber","uGender","setGender","urole","setURole","accountStatus","setAccountStatus","dr_licenseNo","setLicenseNo","patientAddress","setPatientAddress","street","city","state","zipCode","country","patientNationality","setPatientNationality","patientCivilStatus","setPatientCivilStatus","errors","setErrors","firstName","lastName","email","password","birth","number","gender","role","registerUser","validateForm","doctorUser","dr_firstName","dr_lastName","dr_middleInitial","dr_email","dr_password","dr_dob","dr_age","dr_contactNumber","dr_gender","post","then","response","console","log","window","alert","catch","err","patientUser","patient_firstName","patient_middleInitial","patient_lastName","patient_email","patient_password","patient_dob","patient_age","patient_contactNumber","patient_gender","patient_address","patient_nationality","patient_civilstatus","children","fileName","_jsxFileName","lineNumber","columnNumber","className","Body","Group","as","controlId","Label","Control","type","placeholder","onChange","e","target","value","onBlur","handleBlur","Select","onClick","variant","to","_c","$RefreshReg$"],"sources":["E:/School/School/Integrative Programming/medical-appointment/src/components/login/NewSignUp.js"],"sourcesContent":["import axios from \"axios\";\r\nimport { useEffect, useState } from \"react\";\r\nimport { Link, useNavigate } from \"react-router-dom\";\r\nimport { Row, Col, Button, Form, Container, Card } from \"react-bootstrap\";\r\nimport PasswordValidation from \"./PasswordValidation\";\r\nimport \"./SignUp.css\";\r\nimport NavigationalBar from '../landpage/navbar';\r\n\r\nconst NewSignUp = () => {\r\n    const navigate = useNavigate();\r\n    const [ufirstName, setfirstName] = useState(\"\");\r\n    const [uLastName, setLastName] = useState(\"\");\r\n    const [uAge, setAge] = useState(0);\r\n    const [uMiddleInitial, setMiddleInitial] = useState(\"\");\r\n    const [uemail, setemail] = useState(\"\");\r\n    const [uBirth, setBirth] = useState(\"\");\r\n    const [upassword, setPass] = useState(\"\");\r\n    const [confirmPassword, setConfirmPassword] = useState(\"\");\r\n    const [uNumber, setNumber] = useState(\"\");\r\n    const [uGender, setGender] = useState(\"\");\r\n    const [urole, setURole] = useState(\"\");\r\n    const [accountStatus, setAccountStatus] = useState('Registered');\r\n\r\n    // Practitioner-specific fields\r\n    const [dr_licenseNo, setLicenseNo] = useState(\"\");\r\n\r\n    // Patient-specific fields\r\n    const [patientAddress, setPatientAddress] = useState({\r\n        street: \"\",\r\n        city: \"\",\r\n        state: \"\",\r\n        zipCode: \"\",\r\n        country: \"\",\r\n    });\r\n    const [patientNationality, setPatientNationality] = useState(\"\");\r\n    const [patientCivilStatus, setPatientCivilStatus] = useState(\"\");\r\n\r\n    const [errors, setErrors] = useState({\r\n        firstName: \"\",\r\n        lastName: \"\",\r\n        email: \"\",\r\n        password: \"\",\r\n        confirmPassword: \"\",\r\n        birth: \"\",\r\n        number: \"\",\r\n        gender: \"\",\r\n        role: \"\",\r\n    });\r\n\r\n    // Validation and handleBlur function here...\r\n\r\n    const registerUser = () => {\r\n        if (!validateForm()) {\r\n            return;\r\n        }\r\n\r\n        if (urole === \"Practitioner\") {\r\n            const doctorUser = {\r\n                dr_firstName: ufirstName,\r\n                dr_lastName: uLastName,\r\n                dr_middleInitial: uMiddleInitial,\r\n                dr_email: uemail,\r\n                dr_password: upassword,\r\n                dr_dob: uBirth,\r\n                dr_age: uAge,\r\n                dr_contactNumber: uNumber,\r\n                dr_gender: uGender,\r\n                dr_licenseNo: dr_licenseNo,  // Practitioner-specific field\r\n            };\r\n            axios.post('http://localhost:8000/doctor/api/signup', doctorUser)\r\n                .then((response) => {\r\n                    console.log(response);\r\n                    window.alert(\"Successfully registered Practitioner\");\r\n                    navigate('/medapp/login');\r\n                })\r\n                .catch((err) => {\r\n                    console.log(err);\r\n                });\r\n        } else if (urole === \"Patient\") {\r\n            const patientUser = {\r\n                patient_firstName: ufirstName,\r\n                patient_middleInitial: uMiddleInitial,\r\n                patient_lastName: uLastName,\r\n                patient_email: uemail,\r\n                patient_password: upassword,\r\n                patient_dob: uBirth,\r\n                patient_age: uAge,\r\n                patient_contactNumber: uNumber,\r\n                patient_gender: uGender,\r\n                accountStatus: accountStatus,\r\n                patient_address: patientAddress,  // Patient-specific field\r\n                patient_nationality: patientNationality,\r\n                patient_civilstatus: patientCivilStatus,\r\n            };\r\n            console.log(patientUser);\r\n            axios.post('http://localhost:8000/patient/api/signup', patientUser)\r\n                .then((response) => {\r\n                    console.log(response);\r\n                    window.alert(\"Successfully registered Patient\");\r\n                    navigate('/medapp/login');\r\n                })\r\n                .catch((err) => {\r\n                    console.log(err);\r\n                });\r\n        }\r\n    };\r\n\r\n    // Calculate age and handle birth date changes here...\r\n\r\n    return (\r\n        <>\r\n            <NavigationalBar />\r\n            <Container className=\"d-flex justify-content-center align-items-center vh-100\">\r\n                <Card className=\"container\">\r\n                    <Card.Body>\r\n                        <div className=\"container\">\r\n                            <h1>Sign Up</h1>\r\n                            <hr />\r\n                            <Form>\r\n                                <Row className=\"mb-3\">\r\n                                    {/* Name Fields */}\r\n                                    <Form.Group as={Col} controlId=\"formFName\">\r\n                                        <Form.Label>First Name</Form.Label>\r\n                                        <Form.Control\r\n                                            type=\"text\"\r\n                                            placeholder=\"Enter First Name\"\r\n                                            onChange={(e) => setfirstName(e.target.value)}\r\n                                            onBlur={(e) => handleBlur(\"firstName\", e.target.value)}\r\n                                        />\r\n                                    </Form.Group>\r\n                                    {/* Other Name Fields */}\r\n                                </Row>\r\n\r\n                                {/* Role-specific Conditional Fields */}\r\n                                {urole === \"Practitioner\" && (\r\n                                    <Row>\r\n                                        <Form.Group as={Col} controlId=\"formLicenseNo\">\r\n                                            <Form.Label>License Number</Form.Label>\r\n                                            <Form.Control\r\n                                                type=\"text\"\r\n                                                placeholder=\"Enter License Number\"\r\n                                                onChange={(e) => setLicenseNo(e.target.value)}\r\n                                                onBlur={(e) => handleBlur(\"licenseNo\", e.target.value)}\r\n                                            />\r\n                                        </Form.Group>\r\n                                    </Row>\r\n                                )}\r\n\r\n                                {urole === \"Patient\" && (\r\n                                    <>\r\n                                        <Row>\r\n                                            <Form.Group as={Col} controlId=\"formStreet\">\r\n                                                <Form.Label>Street</Form.Label>\r\n                                                <Form.Control\r\n                                                    type=\"text\"\r\n                                                    placeholder=\"Enter Street\"\r\n                                                    onChange={(e) => setPatientAddress({ ...patientAddress, street: e.target.value })}\r\n                                                />\r\n                                            </Form.Group>\r\n                                            <Form.Group as={Col} controlId=\"formCity\">\r\n                                                <Form.Label>City</Form.Label>\r\n                                                <Form.Control\r\n                                                    type=\"text\"\r\n                                                    placeholder=\"Enter City\"\r\n                                                    onChange={(e) => setPatientAddress({ ...patientAddress, city: e.target.value })}\r\n                                                />\r\n                                            </Form.Group>\r\n                                        </Row>\r\n\r\n                                        {/* Other patient address fields */}\r\n                                        <Row>\r\n                                            <Form.Group as={Col} controlId=\"formNationality\">\r\n                                                <Form.Label>Nationality</Form.Label>\r\n                                                <Form.Control\r\n                                                    type=\"text\"\r\n                                                    placeholder=\"Enter Nationality\"\r\n                                                    onChange={(e) => setPatientNationality(e.target.value)}\r\n                                                />\r\n                                            </Form.Group>\r\n                                            <Form.Group as={Col} controlId=\"formCivilStatus\">\r\n                                                <Form.Label>Civil Status</Form.Label>\r\n                                                <Form.Select\r\n                                                    onChange={(e) => setPatientCivilStatus(e.target.value)}\r\n                                                >\r\n                                                    <option value=\"\">Choose Civil Status</option>\r\n                                                    <option value=\"Single\">Single</option>\r\n                                                    <option value=\"Married\">Married</option>\r\n                                                    <option value=\"Widowed\">Widowed</option>\r\n                                                </Form.Select>\r\n                                            </Form.Group>\r\n                                        </Row>\r\n                                    </>\r\n                                )}\r\n\r\n                                {/* Other form fields like password, gender, etc. */}\r\n                                \r\n                                <div className=\"d-lg-flex justify-content-between align-items-center mt-3\">\r\n                                    <Button onClick={registerUser} variant=\"primary\" type=\"button\">\r\n                                        Submit\r\n                                    </Button>\r\n                                    <div className=\"mb-0\">\r\n                                        <Link to=\"/medapp/login\">Already have an account?</Link>\r\n                                    </div>\r\n                                </div>\r\n                            </Form>\r\n                        </div>\r\n                    </Card.Body>\r\n                </Card>\r\n            </Container>\r\n        </>\r\n    );\r\n};\r\n\r\nexport default NewSignUp;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}