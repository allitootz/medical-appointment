{"ast":null,"code":"var _jsxFileName = \"E:\\\\School\\\\School\\\\Integrative Programming\\\\medical-appointment\\\\src\\\\components\\\\staffs\\\\medical secretary\\\\components\\\\Calendar\\\\AppointmentFullCalendar.jsx\",\n  _s = $RefreshSig$();\nimport React, { useEffect, useState, useRef } from 'react';\nimport FullCalendar from '@fullcalendar/react';\nimport dayGridPlugin from '@fullcalendar/daygrid';\nimport timeGridPlugin from '@fullcalendar/timegrid';\nimport interactionPlugin from '@fullcalendar/interaction';\nimport Tippy from '@tippyjs/react';\nimport 'tippy.js/dist/tippy.css'; // Required for styling\nimport axios from 'axios';\nimport { Container, Card } from 'react-bootstrap';\nimport { useNavigate, useLocation } from 'react-router-dom'; // Import useNavigate and useLocation\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction AppointmentFullCalendar() {\n  _s();\n  const [allAppointments, setAllappointments] = useState([]);\n  const calendarRef = useRef(null); // Reference to FullCalendar\n  const navigate = useNavigate(); // Replace useHistory with useNavigate\n  const location = useLocation(); // Use useLocation to get the passed state\n\n  // Extract userId, userName, and role from location state\n  const {\n    userId: msid,\n    userName: name,\n    role: roles\n  } = location.state || {};\n\n  // State variable for headerToolbar\n  const [headerToolbar, setHeaderToolbar] = useState({\n    left: 'prev,next today',\n    center: 'title',\n    right: 'dayGridMonth,timeGridWeek,timeGridDay'\n  });\n  useEffect(() => {\n    axios.get(`http://localhost:8000/medicalsecretary/api/allappointments`).then(result => {\n      setAllappointments(result.data.Appointments);\n    }).catch(error => {\n      console.log(error);\n    });\n\n    // Handle window resize\n    const handleResize = () => {\n      if (window.innerWidth < 768) {\n        // Small screen\n        setHeaderToolbar({\n          left: 'prev,next',\n          center: 'title',\n          right: 'today'\n        });\n      } else {\n        // Large screen\n        setHeaderToolbar({\n          left: 'prev,next today',\n          center: 'title',\n          right: 'dayGridMonth,timeGridWeek,timeGridDay'\n        });\n      }\n    };\n    window.addEventListener('resize', handleResize);\n    handleResize(); // Call once to set initial state\n\n    return () => {\n      window.removeEventListener('resize', handleResize);\n    };\n  }, []);\n  const parseTimeString = timeString => {\n    if (!timeString) return '00:00:00'; // Default to midnight if time is not provided\n\n    const [time, modifier] = timeString.split(' ');\n    let [hours, minutes] = time.split(':');\n    if (hours === '12') {\n      hours = '00';\n    }\n    if (modifier === 'PM') {\n      hours = parseInt(hours, 10) + 12;\n    }\n    return `${hours}:${minutes}:00`;\n  };\n  const events = allAppointments.map(appointment => {\n    const datePart = appointment.date.split('T')[0];\n    const timePart = appointment.time ? parseTimeString(appointment.time) : '00:00:00'; // Fallback to '00:00:00' if no time\n    const dateTimeString = `${datePart}T${timePart}`;\n    const startTime = new Date(dateTimeString);\n    return {\n      id: appointment._id,\n      title: `${appointment.patient.patient_firstName} ${appointment.patient.patient_lastName}`,\n      start: startTime,\n      end: new Date(startTime.getTime() + 30 * 60000),\n      description: appointment.reason,\n      status: appointment.status,\n      doctorName: appointment.doctor ? `${appointment.doctor.dr_firstName} ${appointment.doctor.dr_lastName}` : 'No doctor assigned'\n    };\n  });\n  const handleEventClick = eventInfo => {\n    const {\n      status\n    } = eventInfo.event.extendedProps; // Get status from extendedProps\n\n    // Determine the correct tab based on the appointment status\n    let tab;\n    if (status === 'Scheduled') {\n      tab = 'todays';\n    } else if (status === 'Ongoing') {\n      tab = 'ongoing';\n    } else if (status === 'Pending') {\n      tab = 'pending';\n    }\n\n    // If a valid tab is found, navigate to the respective URL\n    if (tab) {\n      navigate(`/medsec/appointments/${msid}?tab=${tab}`, {\n        state: {\n          userId: msid,\n          userName: name,\n          role: roles\n        }\n      });\n    }\n  };\n  const renderEventContent = eventInfo => {\n    const tooltipContent = `\n      <strong>Patient:</strong> ${eventInfo.event.title} <br/>\n      <strong>Doctor:</strong> ${eventInfo.event.extendedProps.doctorName} <br/>\n      <strong>Concern:</strong> ${eventInfo.event.extendedProps.description} <br/>\n      <strong>Start:</strong> ${eventInfo.event.start.toLocaleTimeString()} <br/>\n      <strong>Status:</strong> ${eventInfo.event.extendedProps.status}\n    `;\n    return /*#__PURE__*/_jsxDEV(Tippy, {\n      content: /*#__PURE__*/_jsxDEV(\"span\", {\n        dangerouslySetInnerHTML: {\n          __html: tooltipContent\n        }\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 133,\n        columnNumber: 18\n      }, this),\n      allowHTML: true,\n      theme: \"light-border\",\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        style: {\n          cursor: 'pointer'\n        },\n        onClick: () => handleEventClick(eventInfo) // Attach click handler here\n        ,\n        children: eventInfo.event.title\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 137,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 132,\n      columnNumber: 7\n    }, this);\n  };\n  const getEventClassNames = eventInfo => {\n    return [eventInfo.event.extendedProps.status]; // Apply the status as a class name\n  };\n  const handleDatesRender = () => {\n    if (calendarRef.current) {\n      const calendarApi = calendarRef.current.getApi();\n      if (calendarApi) {\n        const calendarEl = calendarApi.el;\n        calendarEl.style.transition = 'transform 2s ease-in-out';\n        calendarEl.style.transform = 'translateX(100%)'; // Start from the right\n        setTimeout(() => {\n          calendarEl.style.transform = 'translateX(0)'; // Slide to center\n        }, 10); // Slight delay to allow transition to take effect\n      }\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"d-flex justify-content-between pt-3\",\n    children: /*#__PURE__*/_jsxDEV(Card, {\n      className: \"shadow mb-4 w-100\",\n      children: [/*#__PURE__*/_jsxDEV(Card.Header, {\n        className: \"py-3\",\n        children: /*#__PURE__*/_jsxDEV(\"h6\", {\n          className: \"m-0 font-weight-bold text-primary\",\n          children: \"Appointment Calendar\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 169,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 168,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Card.Body, {\n        children: /*#__PURE__*/_jsxDEV(FullCalendar, {\n          ref: calendarRef,\n          plugins: [dayGridPlugin, timeGridPlugin, interactionPlugin],\n          initialView: \"dayGridMonth\",\n          headerToolbar: headerToolbar // Use the responsive headerToolbar\n          ,\n          height: \"auto\" // Or a fixed height like '500px'\n          ,\n          events: events,\n          editable: false,\n          selectable: true,\n          eventContent: renderEventContent // Use eventContent to render custom event content\n          ,\n          eventClassNames: getEventClassNames // Use eventClassNames to apply custom styles\n          ,\n          datesSet: handleDatesRender // Trigger transition when dates are rendered\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 172,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 171,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 167,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 166,\n    columnNumber: 5\n  }, this);\n}\n_s(AppointmentFullCalendar, \"R8XdMufF7F6vyoTfDo0F2sFSmJI=\", false, function () {\n  return [useNavigate, useLocation];\n});\n_c = AppointmentFullCalendar;\nexport default AppointmentFullCalendar;\nvar _c;\n$RefreshReg$(_c, \"AppointmentFullCalendar\");","map":{"version":3,"names":["React","useEffect","useState","useRef","FullCalendar","dayGridPlugin","timeGridPlugin","interactionPlugin","Tippy","axios","Container","Card","useNavigate","useLocation","jsxDEV","_jsxDEV","AppointmentFullCalendar","_s","allAppointments","setAllappointments","calendarRef","navigate","location","userId","msid","userName","name","role","roles","state","headerToolbar","setHeaderToolbar","left","center","right","get","then","result","data","Appointments","catch","error","console","log","handleResize","window","innerWidth","addEventListener","removeEventListener","parseTimeString","timeString","time","modifier","split","hours","minutes","parseInt","events","map","appointment","datePart","date","timePart","dateTimeString","startTime","Date","id","_id","title","patient","patient_firstName","patient_lastName","start","end","getTime","description","reason","status","doctorName","doctor","dr_firstName","dr_lastName","handleEventClick","eventInfo","event","extendedProps","tab","renderEventContent","tooltipContent","toLocaleTimeString","content","dangerouslySetInnerHTML","__html","fileName","_jsxFileName","lineNumber","columnNumber","allowHTML","theme","children","style","cursor","onClick","getEventClassNames","handleDatesRender","current","calendarApi","getApi","calendarEl","el","transition","transform","setTimeout","className","Header","Body","ref","plugins","initialView","height","editable","selectable","eventContent","eventClassNames","datesSet","_c","$RefreshReg$"],"sources":["E:/School/School/Integrative Programming/medical-appointment/src/components/staffs/medical secretary/components/Calendar/AppointmentFullCalendar.jsx"],"sourcesContent":["import React, { useEffect, useState, useRef } from 'react';\r\nimport FullCalendar from '@fullcalendar/react';\r\nimport dayGridPlugin from '@fullcalendar/daygrid';\r\nimport timeGridPlugin from '@fullcalendar/timegrid';\r\nimport interactionPlugin from '@fullcalendar/interaction';\r\nimport Tippy from '@tippyjs/react';\r\nimport 'tippy.js/dist/tippy.css'; // Required for styling\r\nimport axios from 'axios';\r\nimport { Container, Card } from 'react-bootstrap';\r\nimport { useNavigate, useLocation } from 'react-router-dom'; // Import useNavigate and useLocation\r\n\r\nfunction AppointmentFullCalendar() {\r\n  const [allAppointments, setAllappointments] = useState([]);\r\n  const calendarRef = useRef(null); // Reference to FullCalendar\r\n  const navigate = useNavigate(); // Replace useHistory with useNavigate\r\n  const location = useLocation(); // Use useLocation to get the passed state\r\n\r\n  // Extract userId, userName, and role from location state\r\n  const { userId: msid, userName: name, role: roles } = location.state || {};\r\n\r\n  // State variable for headerToolbar\r\n  const [headerToolbar, setHeaderToolbar] = useState({\r\n    left: 'prev,next today',\r\n    center: 'title',\r\n    right: 'dayGridMonth,timeGridWeek,timeGridDay',\r\n  });\r\n\r\n  useEffect(() => {\r\n    axios\r\n      .get(`http://localhost:8000/medicalsecretary/api/allappointments`)\r\n      .then((result) => {\r\n        setAllappointments(result.data.Appointments);\r\n      })\r\n      .catch((error) => {\r\n        console.log(error);\r\n      });\r\n\r\n    // Handle window resize\r\n    const handleResize = () => {\r\n      if (window.innerWidth < 768) {\r\n        // Small screen\r\n        setHeaderToolbar({\r\n          left: 'prev,next',\r\n          center: 'title',\r\n          right: 'today',\r\n        });\r\n      } else {\r\n        // Large screen\r\n        setHeaderToolbar({\r\n          left: 'prev,next today',\r\n          center: 'title',\r\n          right: 'dayGridMonth,timeGridWeek,timeGridDay',\r\n        });\r\n      }\r\n    };\r\n\r\n    window.addEventListener('resize', handleResize);\r\n    handleResize(); // Call once to set initial state\r\n\r\n    return () => {\r\n      window.removeEventListener('resize', handleResize);\r\n    };\r\n  }, []);\r\n\r\n  const parseTimeString = (timeString) => {\r\n    if (!timeString) return '00:00:00'; // Default to midnight if time is not provided\r\n\r\n    const [time, modifier] = timeString.split(' ');\r\n    let [hours, minutes] = time.split(':');\r\n\r\n    if (hours === '12') {\r\n      hours = '00';\r\n    }\r\n\r\n    if (modifier === 'PM') {\r\n      hours = parseInt(hours, 10) + 12;\r\n    }\r\n\r\n    return `${hours}:${minutes}:00`;\r\n  };\r\n\r\n  const events = allAppointments.map((appointment) => {\r\n    const datePart = appointment.date.split('T')[0];\r\n    const timePart = appointment.time ? parseTimeString(appointment.time) : '00:00:00'; // Fallback to '00:00:00' if no time\r\n    const dateTimeString = `${datePart}T${timePart}`;\r\n    const startTime = new Date(dateTimeString);\r\n\r\n    return {\r\n      id: appointment._id,\r\n      title: `${appointment.patient.patient_firstName} ${appointment.patient.patient_lastName}`,\r\n      start: startTime,\r\n      end: new Date(startTime.getTime() + 30 * 60000),\r\n      description: appointment.reason,\r\n      status: appointment.status,\r\n      doctorName: appointment.doctor\r\n        ? `${appointment.doctor.dr_firstName} ${appointment.doctor.dr_lastName}`\r\n        : 'No doctor assigned',\r\n    };\r\n  });\r\n\r\n  const handleEventClick = (eventInfo) => {\r\n    const { status } = eventInfo.event.extendedProps; // Get status from extendedProps\r\n\r\n    // Determine the correct tab based on the appointment status\r\n    let tab;\r\n    if (status === 'Scheduled') {\r\n      tab = 'todays';\r\n    } else if (status === 'Ongoing') {\r\n      tab = 'ongoing';\r\n    } else if (status === 'Pending') {\r\n      tab = 'pending';\r\n    }\r\n\r\n    // If a valid tab is found, navigate to the respective URL\r\n    if (tab) {\r\n      navigate(`/medsec/appointments/${msid}?tab=${tab}`, {\r\n        state: { userId: msid, userName: name, role: roles },\r\n      });\r\n    }\r\n  };\r\n\r\n  const renderEventContent = (eventInfo) => {\r\n    const tooltipContent = `\r\n      <strong>Patient:</strong> ${eventInfo.event.title} <br/>\r\n      <strong>Doctor:</strong> ${eventInfo.event.extendedProps.doctorName} <br/>\r\n      <strong>Concern:</strong> ${eventInfo.event.extendedProps.description} <br/>\r\n      <strong>Start:</strong> ${eventInfo.event.start.toLocaleTimeString()} <br/>\r\n      <strong>Status:</strong> ${eventInfo.event.extendedProps.status}\r\n    `;\r\n\r\n    return (\r\n      <Tippy\r\n        content={<span dangerouslySetInnerHTML={{ __html: tooltipContent }} />}\r\n        allowHTML={true}\r\n        theme=\"light-border\"\r\n      >\r\n        <div\r\n          style={{ cursor: 'pointer' }}\r\n          onClick={() => handleEventClick(eventInfo)} // Attach click handler here\r\n        >\r\n          {eventInfo.event.title}\r\n        </div>\r\n      </Tippy>\r\n    );\r\n  };\r\n\r\n  const getEventClassNames = (eventInfo) => {\r\n    return [eventInfo.event.extendedProps.status]; // Apply the status as a class name\r\n  };\r\n\r\n  const handleDatesRender = () => {\r\n    if (calendarRef.current) {\r\n      const calendarApi = calendarRef.current.getApi();\r\n      if (calendarApi) {\r\n        const calendarEl = calendarApi.el;\r\n        calendarEl.style.transition = 'transform 2s ease-in-out';\r\n        calendarEl.style.transform = 'translateX(100%)'; // Start from the right\r\n        setTimeout(() => {\r\n          calendarEl.style.transform = 'translateX(0)'; // Slide to center\r\n        }, 10); // Slight delay to allow transition to take effect\r\n      }\r\n    }\r\n  };\r\n\r\n  return (\r\n    <div className=\"d-flex justify-content-between pt-3\">\r\n      <Card className=\"shadow mb-4 w-100\">\r\n        <Card.Header className=\"py-3\">\r\n          <h6 className=\"m-0 font-weight-bold text-primary\">Appointment Calendar</h6>\r\n        </Card.Header>\r\n        <Card.Body>\r\n          <FullCalendar\r\n            ref={calendarRef}\r\n            plugins={[dayGridPlugin, timeGridPlugin, interactionPlugin]}\r\n            initialView=\"dayGridMonth\"\r\n            headerToolbar={headerToolbar} // Use the responsive headerToolbar\r\n            height=\"auto\" // Or a fixed height like '500px'\r\n            events={events}\r\n            editable={false}\r\n            selectable={true}\r\n            eventContent={renderEventContent} // Use eventContent to render custom event content\r\n            eventClassNames={getEventClassNames} // Use eventClassNames to apply custom styles\r\n            datesSet={handleDatesRender} // Trigger transition when dates are rendered\r\n          />\r\n        </Card.Body>\r\n      </Card>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default AppointmentFullCalendar;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}