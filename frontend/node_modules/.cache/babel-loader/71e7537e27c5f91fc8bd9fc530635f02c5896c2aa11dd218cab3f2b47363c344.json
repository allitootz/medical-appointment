{"ast":null,"code":"var _jsxFileName = \"E:\\\\School\\\\School\\\\Integrative Programming\\\\medical-appointment\\\\frontend\\\\src\\\\components\\\\practitioner\\\\patientinformation\\\\laboratory\\\\LaboratoryResults.jsx\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport { Form, Button, Container, Row, Col } from 'react-bootstrap';\nimport axios from 'axios';\nimport LaboratoryHistory from './LaboratoryHistory';\nimport { toast, ToastContainer } from 'react-toastify';\nimport 'react-toastify/dist/ReactToastify.css'; // Import Toastify CSS\nimport { ip } from '../../../../ContentExport';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction LaboratoryResults({\n  patientId,\n  appointmentId\n}) {\n  _s();\n  const [formData, setFormData] = useState({\n    file: null\n  });\n  const [labResults, setLabResults] = useState([]);\n  const [error, setError] = useState(null);\n  useEffect(() => {\n    const fetchLabResults = async () => {\n      try {\n        const response = await axios.get(`${ip.address}/patient/${patientId}/appointments/${appointmentId}/labResults`);\n        setLabResults(response.data);\n        console.log(response.data);\n      } catch (err) {\n        setError('Failed to fetch laboratory results');\n        toast.error('Failed to fetch laboratory results'); // Show error toast\n      }\n    };\n    fetchLabResults();\n  }, [patientId, appointmentId]);\n\n  // Handle file input change\n  const handleFileChange = e => {\n    const file = e.target.files[0];\n    if (file && file.type !== 'application/pdf') {\n      setError('Only PDF files are allowed.');\n      setFormData({\n        ...formData,\n        file: null\n      });\n      toast.error('Only PDF files are allowed.'); // Show error toast\n    } else {\n      setError(null); // Clear any previous errors\n      setFormData({\n        ...formData,\n        file: file\n      });\n    }\n  };\n\n  // Handle form submission (creating lab result with file upload)\n  const handleSubmit = async e => {\n    e.preventDefault();\n    setError(null); // Reset error state before submission\n\n    if (!formData.file) {\n      setError('Please upload a PDF file.');\n      toast.error('Please upload a PDF file.'); // Show error toast\n      return;\n    }\n    const labData = new FormData();\n    labData.append('file', formData.file);\n    labData.append('testResults', JSON.stringify([])); // Add empty test results if needed\n\n    try {\n      await axios.post(`${ip.address}/doctor/api/createLaboratoryResult/${patientId}/${appointmentId}`, labData, {\n        headers: {\n          'Content-Type': 'multipart/form-data' // Ensure this is correctly set\n        }\n      });\n      setFormData({\n        file: null\n      });\n      toast.success('Laboratory result uploaded successfully'); // Show success toast\n    } catch (err) {\n      var _err$response;\n      setError('Failed to upload laboratory result');\n      toast.error('Failed to upload laboratory result'); // Show error toast\n      console.error('Error uploading file:', ((_err$response = err.response) === null || _err$response === void 0 ? void 0 : _err$response.data) || err.message);\n    }\n  };\n\n  // Download file\n  const downloadFile = async resultId => {\n    try {\n      const response = await axios.get(`${ip.address}/doctor/api/laboratoryResult/download/${resultId}`, {\n        responseType: 'blob'\n      });\n      const url = window.URL.createObjectURL(new Blob([response.data]));\n      const link = document.createElement('a');\n      link.href = url;\n      link.setAttribute('download', 'laboratory_result.pdf'); // you can change this filename if necessary\n      document.body.appendChild(link);\n      link.click();\n    } catch (err) {\n      var _err$response2;\n      setError('Failed to download file');\n      toast.error('Failed to download file'); // Show error toast\n      console.error('Error downloading file:', ((_err$response2 = err.response) === null || _err$response2 === void 0 ? void 0 : _err$response2.data) || err.message);\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(Container, {\n    fluid: true,\n    children: [/*#__PURE__*/_jsxDEV(ToastContainer, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 102,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(Row, {\n      children: [/*#__PURE__*/_jsxDEV(Col, {\n        md: 6,\n        children: [/*#__PURE__*/_jsxDEV(\"h4\", {\n          className: \"m-0 font-weight-bold text-gray\",\n          children: \"Past Laboratories\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 106,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"hr\", {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 107,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(LaboratoryHistory, {\n          pid: patientId\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 108,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 105,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(Col, {\n        children: /*#__PURE__*/_jsxDEV(Form, {\n          onSubmit: handleSubmit,\n          children: [/*#__PURE__*/_jsxDEV(Form.Group, {\n            controlId: \"file\",\n            children: [/*#__PURE__*/_jsxDEV(Form.Label, {\n              children: \"Upload Laboratory Result (PDF Only)\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 113,\n              columnNumber: 29\n            }, this), /*#__PURE__*/_jsxDEV(Form.Control, {\n              type: \"file\",\n              accept: \"application/pdf\",\n              onChange: handleFileChange\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 114,\n              columnNumber: 29\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 112,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(Button, {\n            type: \"submit\",\n            variant: \"primary\",\n            className: \"mt-3\",\n            children: \"Upload Laboratory Result\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 121,\n            columnNumber: 25\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 111,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 110,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 104,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 100,\n    columnNumber: 9\n  }, this);\n}\n_s(LaboratoryResults, \"4E4A3vTtLXgvWRhxsfk1bao+anE=\");\n_c = LaboratoryResults;\nexport default LaboratoryResults;\nvar _c;\n$RefreshReg$(_c, \"LaboratoryResults\");","map":{"version":3,"names":["React","useState","useEffect","Form","Button","Container","Row","Col","axios","LaboratoryHistory","toast","ToastContainer","ip","jsxDEV","_jsxDEV","LaboratoryResults","patientId","appointmentId","_s","formData","setFormData","file","labResults","setLabResults","error","setError","fetchLabResults","response","get","address","data","console","log","err","handleFileChange","e","target","files","type","handleSubmit","preventDefault","labData","FormData","append","JSON","stringify","post","headers","success","_err$response","message","downloadFile","resultId","responseType","url","window","URL","createObjectURL","Blob","link","document","createElement","href","setAttribute","body","appendChild","click","_err$response2","fluid","children","fileName","_jsxFileName","lineNumber","columnNumber","md","className","pid","onSubmit","Group","controlId","Label","Control","accept","onChange","variant","_c","$RefreshReg$"],"sources":["E:/School/School/Integrative Programming/medical-appointment/frontend/src/components/practitioner/patientinformation/laboratory/LaboratoryResults.jsx"],"sourcesContent":["import React, { useState, useEffect } from 'react';\r\nimport { Form, Button, Container, Row, Col } from 'react-bootstrap';\r\nimport axios from 'axios';\r\nimport LaboratoryHistory from './LaboratoryHistory';\r\nimport { toast, ToastContainer } from 'react-toastify';\r\nimport 'react-toastify/dist/ReactToastify.css'; // Import Toastify CSS\r\nimport { ip } from '../../../../ContentExport';\r\nfunction LaboratoryResults({ patientId, appointmentId }) {\r\n    const [formData, setFormData] = useState({\r\n        file: null\r\n    });\r\n    const [labResults, setLabResults] = useState([]);\r\n    const [error, setError] = useState(null);\r\n\r\n    useEffect(() => {\r\n        const fetchLabResults = async () => {\r\n            try {\r\n                const response = await axios.get(`${ip.address}/patient/${patientId}/appointments/${appointmentId}/labResults`);\r\n                setLabResults(response.data);\r\n                console.log(response.data);\r\n            } catch (err) {\r\n                setError('Failed to fetch laboratory results');\r\n                toast.error('Failed to fetch laboratory results'); // Show error toast\r\n            }\r\n        };\r\n        fetchLabResults();\r\n    }, [patientId, appointmentId]);\r\n\r\n    // Handle file input change\r\n    const handleFileChange = (e) => {\r\n        const file = e.target.files[0];\r\n        if (file && file.type !== 'application/pdf') {\r\n            setError('Only PDF files are allowed.');\r\n            setFormData({\r\n                ...formData,\r\n                file: null\r\n            });\r\n            toast.error('Only PDF files are allowed.'); // Show error toast\r\n        } else {\r\n            setError(null); // Clear any previous errors\r\n            setFormData({\r\n                ...formData,\r\n                file: file\r\n            });\r\n        }\r\n    };\r\n\r\n    // Handle form submission (creating lab result with file upload)\r\n    const handleSubmit = async (e) => {\r\n        e.preventDefault();\r\n        setError(null); // Reset error state before submission\r\n\r\n        if (!formData.file) {\r\n            setError('Please upload a PDF file.');\r\n            toast.error('Please upload a PDF file.'); // Show error toast\r\n            return;\r\n        }\r\n\r\n        const labData = new FormData();\r\n        labData.append('file', formData.file);\r\n        labData.append('testResults', JSON.stringify([])); // Add empty test results if needed\r\n\r\n        try {\r\n            await axios.post(`${ip.address}/doctor/api/createLaboratoryResult/${patientId}/${appointmentId}`, labData, {\r\n                headers: {\r\n                    'Content-Type': 'multipart/form-data' // Ensure this is correctly set\r\n                }\r\n            });\r\n            setFormData({\r\n                file: null\r\n            });\r\n            toast.success('Laboratory result uploaded successfully'); // Show success toast\r\n        } catch (err) {\r\n            setError('Failed to upload laboratory result');\r\n            toast.error('Failed to upload laboratory result'); // Show error toast\r\n            console.error('Error uploading file:', err.response?.data || err.message);\r\n        }\r\n    };\r\n\r\n    // Download file\r\n    const downloadFile = async (resultId) => {\r\n        try {\r\n            const response = await axios.get(`${ip.address}/doctor/api/laboratoryResult/download/${resultId}`, {\r\n                responseType: 'blob'\r\n            });\r\n            const url = window.URL.createObjectURL(new Blob([response.data]));\r\n            const link = document.createElement('a');\r\n            link.href = url;\r\n            link.setAttribute('download', 'laboratory_result.pdf'); // you can change this filename if necessary\r\n            document.body.appendChild(link);\r\n            link.click();\r\n        } catch (err) {\r\n            setError('Failed to download file');\r\n            toast.error('Failed to download file'); // Show error toast\r\n            console.error('Error downloading file:', err.response?.data || err.message);\r\n        }\r\n    };\r\n\r\n    return (\r\n        <Container fluid>\r\n            {/* React Toast Container to display notifications */}\r\n            <ToastContainer />\r\n\r\n            <Row>\r\n                <Col md={6}>\r\n                    <h4 className=\"m-0 font-weight-bold text-gray\">Past Laboratories</h4>\r\n                    <hr />\r\n                    <LaboratoryHistory pid={patientId} />\r\n                </Col>\r\n                <Col>\r\n                    <Form onSubmit={handleSubmit}>\r\n                        <Form.Group controlId=\"file\">\r\n                            <Form.Label>Upload Laboratory Result (PDF Only)</Form.Label>\r\n                            <Form.Control\r\n                                type=\"file\"\r\n                                accept=\"application/pdf\"\r\n                                onChange={handleFileChange}\r\n                            />\r\n                        </Form.Group>\r\n\r\n                        <Button type=\"submit\" variant=\"primary\" className=\"mt-3\">\r\n                            Upload Laboratory Result\r\n                        </Button>\r\n                    </Form>\r\n                </Col>\r\n            </Row>\r\n        </Container>\r\n    );\r\n}\r\n\r\nexport default LaboratoryResults;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}