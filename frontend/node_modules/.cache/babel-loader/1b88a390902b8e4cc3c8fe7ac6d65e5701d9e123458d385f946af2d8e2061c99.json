{"ast":null,"code":"var _jsxFileName = \"E:\\\\School\\\\School\\\\Integrative Programming\\\\medical-appointment\\\\src\\\\components\\\\staffs\\\\admin\\\\dashboard\\\\Charts\\\\PieSpecialization.jsx\",\n  _s = $RefreshSig$();\nimport React, { useEffect, useRef, useState } from 'react';\nimport { Container, Card } from 'react-bootstrap';\nimport Chart from 'chart.js/auto';\nimport axios from 'axios';\nimport { ip } from '../../../../../ContentExport';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction PieSpecialization() {\n  _s();\n  const chartRef = useRef(null);\n  const chartInstanceRef = useRef(null);\n  const [chartData, setChartData] = useState({\n    labels: [],\n    data: []\n  });\n  useEffect(() => {\n    // Fetch doctor specialty stats from the backend\n    axios.get(`${ip.address}/api/doctor-specialty-stats`).then(response => {\n      const data = response.data;\n      const labels = data.map(item => item.specialty);\n      const counts = data.map(item => item.count);\n      setChartData({\n        labels,\n        data: counts\n      });\n    }).catch(error => console.error('Error fetching doctor specialty stats:', error));\n  }, []);\n  useEffect(() => {\n    if (chartInstanceRef.current) {\n      chartInstanceRef.current.destroy();\n    }\n    const ctx = chartRef.current.getContext('2d');\n    chartInstanceRef.current = new Chart(ctx, {\n      type: 'pie',\n      data: {\n        labels: chartData.labels,\n        datasets: [{\n          label: 'Number of Doctors',\n          data: chartData.data,\n          backgroundColor: ['#FF6384', '#36A2EB', '#FFCE56', '#4BC0C0', '#9966FF', '#FF9F40', '#FF6347', '#ADFF2F', '#FFD700', '#B0E0E6', '#B22222', '#8B4513', '#2E8B57', '#4682B4', '#D2691E', '#00CED1', '#1E90FF'],\n          hoverOffset: 4\n        }]\n      },\n      options: {\n        responsive: true,\n        maintainAspectRatio: false,\n        plugins: {\n          legend: {\n            position: 'top'\n          },\n          tooltip: {\n            callbacks: {\n              label: function (tooltipItem) {\n                return tooltipItem.label + ': ' + tooltipItem.raw;\n              }\n            }\n          }\n        }\n      }\n    });\n    return () => {\n      if (chartInstanceRef.current) {\n        chartInstanceRef.current.destroy();\n      }\n    };\n  }, [chartData]);\n  return /*#__PURE__*/_jsxDEV(Card, {\n    className: \"card-bar-chart shadow mb-4\",\n    children: [/*#__PURE__*/_jsxDEV(Card.Header, {\n      className: \"py-3\",\n      children: /*#__PURE__*/_jsxDEV(\"h6\", {\n        className: \"m-0 font-weight-bold text-primary\",\n        children: \"Doctor Specialties\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 74,\n        columnNumber: 11\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 73,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(Card.Body, {\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"chart-pie\",\n        children: /*#__PURE__*/_jsxDEV(\"canvas\", {\n          ref: chartRef\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 78,\n          columnNumber: 13\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 77,\n        columnNumber: 11\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 76,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 72,\n    columnNumber: 7\n  }, this);\n}\n_s(PieSpecialization, \"BwV9Cqmv3VsO/wrKon1qjJ1Mk5I=\");\n_c = PieSpecialization;\nexport default PieSpecialization;\nvar _c;\n$RefreshReg$(_c, \"PieSpecialization\");","map":{"version":3,"names":["React","useEffect","useRef","useState","Container","Card","Chart","axios","ip","jsxDEV","_jsxDEV","PieSpecialization","_s","chartRef","chartInstanceRef","chartData","setChartData","labels","data","get","address","then","response","map","item","specialty","counts","count","catch","error","console","current","destroy","ctx","getContext","type","datasets","label","backgroundColor","hoverOffset","options","responsive","maintainAspectRatio","plugins","legend","position","tooltip","callbacks","tooltipItem","raw","className","children","Header","fileName","_jsxFileName","lineNumber","columnNumber","Body","ref","_c","$RefreshReg$"],"sources":["E:/School/School/Integrative Programming/medical-appointment/src/components/staffs/admin/dashboard/Charts/PieSpecialization.jsx"],"sourcesContent":["import React, { useEffect, useRef, useState } from 'react';\r\nimport { Container, Card } from 'react-bootstrap';\r\nimport Chart from 'chart.js/auto';\r\nimport axios from 'axios';\r\nimport { ip } from '../../../../../ContentExport';\r\n\r\nfunction PieSpecialization() {\r\n  const chartRef = useRef(null);\r\n  const chartInstanceRef = useRef(null);\r\n  const [chartData, setChartData] = useState({ labels: [], data: [] });\r\n\r\n  useEffect(() => {\r\n    // Fetch doctor specialty stats from the backend\r\n    axios.get(`${ip.address}/api/doctor-specialty-stats`)\r\n      .then(response => {\r\n        const data = response.data;\r\n        const labels = data.map(item => item.specialty);\r\n        const counts = data.map(item => item.count);\r\n\r\n        setChartData({ labels, data: counts });\r\n      })\r\n      .catch(error => console.error('Error fetching doctor specialty stats:', error));\r\n  }, []);\r\n\r\n  useEffect(() => {\r\n    if (chartInstanceRef.current) {\r\n      chartInstanceRef.current.destroy();\r\n    }\r\n\r\n    const ctx = chartRef.current.getContext('2d');\r\n    chartInstanceRef.current = new Chart(ctx, {\r\n      type: 'pie',\r\n      data: {\r\n        labels: chartData.labels,\r\n        datasets: [{\r\n          label: 'Number of Doctors',\r\n          data: chartData.data,\r\n          backgroundColor: [\r\n            '#FF6384', '#36A2EB', '#FFCE56', '#4BC0C0', '#9966FF', '#FF9F40', '#FF6347', '#ADFF2F', '#FFD700', '#B0E0E6',\r\n            '#B22222', '#8B4513', '#2E8B57', '#4682B4', '#D2691E', '#00CED1', '#1E90FF'\r\n          ],\r\n          hoverOffset: 4\r\n        }]\r\n      },\r\n      options: {\r\n        responsive: true,\r\n        maintainAspectRatio: false,\r\n        plugins: {\r\n          legend: {\r\n            position: 'top',\r\n          },\r\n          tooltip: {\r\n            callbacks: {\r\n              label: function(tooltipItem) {\r\n                return tooltipItem.label + ': ' + tooltipItem.raw;\r\n              }\r\n            }\r\n          }\r\n        }\r\n      }\r\n    });\r\n\r\n    return () => {\r\n      if (chartInstanceRef.current) {\r\n        chartInstanceRef.current.destroy();\r\n      }\r\n    };\r\n  }, [chartData]);\r\n\r\n  return (\r\n \r\n      <Card className=\"card-bar-chart shadow mb-4\">\r\n        <Card.Header className=\"py-3\">\r\n          <h6 className=\"m-0 font-weight-bold text-primary\">Doctor Specialties</h6>\r\n        </Card.Header>\r\n        <Card.Body>\r\n          <div className=\"chart-pie\">\r\n            <canvas ref={chartRef}></canvas>\r\n          </div>\r\n        </Card.Body>\r\n      </Card>\r\n    \r\n  );\r\n}\r\n\r\nexport default PieSpecialization;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}