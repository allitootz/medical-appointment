{"ast":null,"code":"var _jsxFileName = \"E:\\\\School\\\\School\\\\Integrative Programming\\\\medical-appointment\\\\src\\\\components\\\\login\\\\LogInUser.js\",\n  _s = $RefreshSig$();\n// LogInUser.js\nimport React, { useState } from 'react';\nimport axios from 'axios';\nimport { useNavigate } from 'react-router-dom';\nimport { Row, Form, Col, Button, Container, Modal } from 'react-bootstrap';\nimport './LogIn.css';\nimport NavigationalBar from '../landpage/navbar';\nimport { ip } from '../../ContentExport';\nimport { usePatient } from '../patient/PatientContext';\nimport { jsxDEV as _jsxDEV, Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst LogInUser = () => {\n  _s();\n  const navigate = useNavigate();\n  const [email, setEmail] = useState(\"\");\n  const [password, setPassword] = useState(\"\");\n  const [userRole, setUserRole] = useState(\"Patient\"); // Role selection\n  const [rememberMe, setRememberMe] = useState(false);\n  const [showModal, setShowModal] = useState(false);\n  const [modalEmail, setModalEmail] = useState(\"\");\n  const [modalRole, setModalRole] = useState(\"Patient\"); // Role selection in modal\n  const [modalMessage, setModalMessage] = useState(\"\");\n  const {\n    setPatient\n  } = usePatient();\n  const loginuser = async e => {\n    e.preventDefault();\n    if (userRole === \"Patient\") {\n      // Patient login\n      try {\n        const response = await axios.post(`${ip.address}/patient/api/login`, {\n          email,\n          password\n        });\n        if (response.data.patientId) {\n          const patientData = response.data;\n\n          // Handle \"Remember Me\"\n          if (rememberMe) {\n            localStorage.setItem('patient', JSON.stringify(patientData));\n          } else {\n            sessionStorage.setItem('patient', JSON.stringify(patientData));\n          }\n          setPatient(patientData);\n          window.alert(\"Successfully logged in\");\n          navigate(`/homepage` /*, { state: { pid: patientData.patientId } }*/);\n        } else {\n          window.alert(response.data.message || \"Invalid email or password. Please try again.\");\n        }\n      } catch (err) {\n        console.error('Error logging in:', err);\n        window.alert(\"An error occurred while logging in.\");\n      }\n    } else if (userRole === \"Practitioner\") {\n      // Practitioner login\n      try {\n        const response = await axios.post(`${ip.address}/doctor/api/login`, {\n          email,\n          password\n        });\n        if (response.data.doctorId) {\n          const doctorData = response.data;\n\n          // Handle \"Remember Me\"\n          if (rememberMe) {\n            localStorage.setItem('doctor', JSON.stringify(doctorData));\n          } else {\n            sessionStorage.setItem('doctor', JSON.stringify(doctorData));\n          }\n\n          // setDoctor(doctorData); // Assuming you have a context for doctor\n          window.alert(\"Successfully logged in\");\n          navigate(`/dashboard`, {\n            state: {\n              did: doctorData.doctorId\n            }\n          });\n        } else {\n          window.alert(response.data.message || \"Invalid email or password. Please try again.\");\n        }\n      } catch (err) {\n        console.error('Error logging in:', err);\n        window.alert(\"An error occurred while logging in.\");\n      }\n    }\n  };\n  const handleForgotPassword = async e => {\n    e.preventDefault();\n    if (modalRole === \"Patient\") {\n      // Forgot password for Patient\n      try {\n        const response = await axios.post(`${ip.address}/patient/api/forgot-password`, {\n          email: modalEmail\n        });\n        setModalMessage(response.data.message);\n      } catch (err) {\n        var _err$response, _err$response$data;\n        console.error('Error in forgot password:', err);\n        setModalMessage(((_err$response = err.response) === null || _err$response === void 0 ? void 0 : (_err$response$data = _err$response.data) === null || _err$response$data === void 0 ? void 0 : _err$response$data.message) || 'An error occurred.');\n      }\n    } else if (modalRole === \"Practitioner\") {\n      // Forgot password for Practitioner\n      // Since you requested to only implement for Patient now, we can show a message\n      setModalMessage(\"Forgot password functionality for Practitioner is not implemented yet.\");\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(NavigationalBar, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 107,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"align-items-center d-flex vh-100\",\n      children: /*#__PURE__*/_jsxDEV(Container, {\n        fluid: true,\n        className: \"maincontainer d-flex justify-content-center align-items-center\",\n        children: /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"container\",\n          children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n            children: \"Welcome Back!\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 111,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(Form, {\n            onSubmit: loginuser,\n            children: [/*#__PURE__*/_jsxDEV(Row, {\n              className: \"mb-3\",\n              children: /*#__PURE__*/_jsxDEV(Form.Group, {\n                className: \"mb-3\",\n                controlId: \"formEmail\",\n                children: [/*#__PURE__*/_jsxDEV(Form.Label, {\n                  children: \"Email Address\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 115,\n                  columnNumber: 37\n                }, this), /*#__PURE__*/_jsxDEV(Form.Control, {\n                  type: \"email\",\n                  placeholder: \"Enter Email Address\",\n                  value: email,\n                  onChange: e => setEmail(e.target.value)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 116,\n                  columnNumber: 37\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 114,\n                columnNumber: 33\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 113,\n              columnNumber: 29\n            }, this), /*#__PURE__*/_jsxDEV(Row, {\n              className: \"align-items right\",\n              children: /*#__PURE__*/_jsxDEV(Form.Group, {\n                className: \"mb-3\",\n                controlId: \"formPassword\",\n                children: [/*#__PURE__*/_jsxDEV(Form.Label, {\n                  children: \"Password\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 126,\n                  columnNumber: 37\n                }, this), /*#__PURE__*/_jsxDEV(Form.Control, {\n                  type: \"password\",\n                  placeholder: \"Enter Password\",\n                  value: password,\n                  onChange: e => setPassword(e.target.value)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 127,\n                  columnNumber: 37\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 125,\n                columnNumber: 33\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 124,\n              columnNumber: 29\n            }, this), /*#__PURE__*/_jsxDEV(Row, {\n              children: /*#__PURE__*/_jsxDEV(Form.Group, {\n                as: Col,\n                controlId: \"formChoose\",\n                children: [/*#__PURE__*/_jsxDEV(Form.Label, {\n                  children: \"Choose your role:\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 137,\n                  columnNumber: 37\n                }, this), /*#__PURE__*/_jsxDEV(Form.Select, {\n                  value: userRole,\n                  onChange: e => setUserRole(e.target.value),\n                  children: [/*#__PURE__*/_jsxDEV(\"option\", {\n                    value: \"Patient\",\n                    children: \"Patient\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 139,\n                    columnNumber: 41\n                  }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n                    value: \"Practitioner\",\n                    children: \"Practitioner\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 140,\n                    columnNumber: 41\n                  }, this)]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 138,\n                  columnNumber: 37\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 136,\n                columnNumber: 33\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 135,\n              columnNumber: 29\n            }, this), /*#__PURE__*/_jsxDEV(Row, {\n              className: \"mb-3\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 144,\n              columnNumber: 29\n            }, this), /*#__PURE__*/_jsxDEV(Row, {\n              className: \"mb-3\",\n              children: /*#__PURE__*/_jsxDEV(Form.Group, {\n                controlId: \"formBasicCheckbox\",\n                children: /*#__PURE__*/_jsxDEV(Form.Check, {\n                  type: \"checkbox\",\n                  label: \"Remember me\",\n                  checked: rememberMe,\n                  onChange: e => setRememberMe(e.target.checked)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 147,\n                  columnNumber: 37\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 146,\n                columnNumber: 33\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 145,\n              columnNumber: 29\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"justify-content-center\",\n              children: /*#__PURE__*/_jsxDEV(Button, {\n                type: \"submit\",\n                className: \"mb-2 buttonStyle\",\n                children: \"Log In\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 156,\n                columnNumber: 33\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 155,\n              columnNumber: 29\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"mb-0\",\n              children: /*#__PURE__*/_jsxDEV(\"a\", {\n                href: \"#\",\n                onClick: () => setShowModal(true),\n                children: \"Forgot Password?\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 161,\n                columnNumber: 33\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 160,\n              columnNumber: 29\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"mb-0\",\n              children: /*#__PURE__*/_jsxDEV(\"a\", {\n                href: \"/medapp/signup\",\n                children: \"No account yet? Sign up\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 164,\n                columnNumber: 33\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 163,\n              columnNumber: 29\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 112,\n            columnNumber: 25\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 110,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 109,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 108,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(Modal, {\n      show: showModal,\n      onHide: () => {\n        setShowModal(false);\n        setModalMessage('');\n      },\n      children: [/*#__PURE__*/_jsxDEV(Modal.Header, {\n        closeButton: true,\n        children: /*#__PURE__*/_jsxDEV(Modal.Title, {\n          children: \"Forgot Password\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 177,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 176,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(Modal.Body, {\n        children: modalMessage ? /*#__PURE__*/_jsxDEV(\"p\", {\n          children: modalMessage\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 181,\n          columnNumber: 25\n        }, this) : /*#__PURE__*/_jsxDEV(Form, {\n          onSubmit: handleForgotPassword,\n          children: [/*#__PURE__*/_jsxDEV(Form.Group, {\n            className: \"mb-3\",\n            controlId: \"formModalEmail\",\n            children: [/*#__PURE__*/_jsxDEV(Form.Label, {\n              children: \"Email Address\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 185,\n              columnNumber: 33\n            }, this), /*#__PURE__*/_jsxDEV(Form.Control, {\n              type: \"email\",\n              placeholder: \"Enter Email Address\",\n              value: modalEmail,\n              onChange: e => setModalEmail(e.target.value)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 186,\n              columnNumber: 33\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 184,\n            columnNumber: 29\n          }, this), /*#__PURE__*/_jsxDEV(Form.Group, {\n            as: Col,\n            controlId: \"formModalRole\",\n            children: [/*#__PURE__*/_jsxDEV(Form.Label, {\n              children: \"Choose your role:\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 194,\n              columnNumber: 33\n            }, this), /*#__PURE__*/_jsxDEV(Form.Select, {\n              value: modalRole,\n              onChange: e => setModalRole(e.target.value),\n              children: [/*#__PURE__*/_jsxDEV(\"option\", {\n                value: \"Patient\",\n                children: \"Patient\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 196,\n                columnNumber: 37\n              }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n                value: \"Practitioner\",\n                children: \"Practitioner\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 197,\n                columnNumber: 37\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 195,\n              columnNumber: 33\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 193,\n            columnNumber: 29\n          }, this), /*#__PURE__*/_jsxDEV(Button, {\n            variant: \"primary\",\n            type: \"submit\",\n            className: \"mt-3\",\n            children: \"Submit\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 200,\n            columnNumber: 29\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 183,\n          columnNumber: 25\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 179,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 172,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true);\n};\n_s(LogInUser, \"Q7aUeIGtDHiYMLEJ4Q47LY6SPfg=\", false, function () {\n  return [useNavigate, usePatient];\n});\n_c = LogInUser;\nexport default LogInUser;\nvar _c;\n$RefreshReg$(_c, \"LogInUser\");","map":{"version":3,"names":["React","useState","axios","useNavigate","Row","Form","Col","Button","Container","Modal","NavigationalBar","ip","usePatient","jsxDEV","_jsxDEV","Fragment","_Fragment","LogInUser","_s","navigate","email","setEmail","password","setPassword","userRole","setUserRole","rememberMe","setRememberMe","showModal","setShowModal","modalEmail","setModalEmail","modalRole","setModalRole","modalMessage","setModalMessage","setPatient","loginuser","e","preventDefault","response","post","address","data","patientId","patientData","localStorage","setItem","JSON","stringify","sessionStorage","window","alert","message","err","console","error","doctorId","doctorData","state","did","handleForgotPassword","_err$response","_err$response$data","children","fileName","_jsxFileName","lineNumber","columnNumber","className","fluid","onSubmit","Group","controlId","Label","Control","type","placeholder","value","onChange","target","as","Select","Check","label","checked","href","onClick","show","onHide","Header","closeButton","Title","Body","variant","_c","$RefreshReg$"],"sources":["E:/School/School/Integrative Programming/medical-appointment/src/components/login/LogInUser.js"],"sourcesContent":["// LogInUser.js\r\nimport React, { useState } from 'react';\r\nimport axios from 'axios';\r\nimport { useNavigate } from 'react-router-dom';\r\nimport { Row, Form, Col, Button, Container, Modal } from 'react-bootstrap';\r\nimport './LogIn.css';\r\nimport NavigationalBar from '../landpage/navbar';\r\nimport { ip } from '../../ContentExport';\r\nimport { usePatient } from '../patient/PatientContext';\r\n\r\nconst LogInUser = () => {\r\n    const navigate = useNavigate();\r\n    const [email, setEmail] = useState(\"\");\r\n    const [password, setPassword] = useState(\"\");\r\n    const [userRole, setUserRole] = useState(\"Patient\"); // Role selection\r\n    const [rememberMe, setRememberMe] = useState(false);\r\n    const [showModal, setShowModal] = useState(false);\r\n    const [modalEmail, setModalEmail] = useState(\"\");\r\n    const [modalRole, setModalRole] = useState(\"Patient\"); // Role selection in modal\r\n    const [modalMessage, setModalMessage] = useState(\"\");\r\n\r\n    const { setPatient } = usePatient();\r\n\r\n    const loginuser = async (e) => {\r\n        e.preventDefault();\r\n\r\n        if (userRole === \"Patient\") {\r\n            // Patient login\r\n            try {\r\n                const response = await axios.post(`${ip.address}/patient/api/login`, {\r\n                    email,\r\n                    password,\r\n                });\r\n\r\n                if (response.data.patientId) {\r\n                    const patientData = response.data;\r\n\r\n                    // Handle \"Remember Me\"\r\n                    if (rememberMe) {\r\n                        localStorage.setItem('patient', JSON.stringify(patientData));\r\n                    } else {\r\n                        sessionStorage.setItem('patient', JSON.stringify(patientData));\r\n                    }\r\n\r\n                    setPatient(patientData);\r\n                    window.alert(\"Successfully logged in\");\r\n                    navigate(`/homepage` /*, { state: { pid: patientData.patientId } }*/);\r\n                } else {\r\n                    window.alert(response.data.message || \"Invalid email or password. Please try again.\");\r\n                }\r\n            } catch (err) {\r\n                console.error('Error logging in:', err);\r\n                window.alert(\"An error occurred while logging in.\");\r\n            }\r\n        } else if (userRole === \"Practitioner\") {\r\n            // Practitioner login\r\n            try {\r\n                const response = await axios.post(`${ip.address}/doctor/api/login`, {\r\n                    email,\r\n                    password,\r\n                });\r\n\r\n                if (response.data.doctorId) {\r\n                    const doctorData = response.data;\r\n\r\n                    // Handle \"Remember Me\"\r\n                    if (rememberMe) {\r\n                        localStorage.setItem('doctor', JSON.stringify(doctorData));\r\n                    } else {\r\n                        sessionStorage.setItem('doctor', JSON.stringify(doctorData));\r\n                    }\r\n\r\n                    // setDoctor(doctorData); // Assuming you have a context for doctor\r\n                    window.alert(\"Successfully logged in\");\r\n                    navigate(`/dashboard`, { state: { did: doctorData.doctorId } });\r\n                } else {\r\n                    window.alert(response.data.message || \"Invalid email or password. Please try again.\");\r\n                }\r\n            } catch (err) {\r\n                console.error('Error logging in:', err);\r\n                window.alert(\"An error occurred while logging in.\");\r\n            }\r\n        }\r\n    };\r\n\r\n    const handleForgotPassword = async (e) => {\r\n        e.preventDefault();\r\n\r\n        if (modalRole === \"Patient\") {\r\n            // Forgot password for Patient\r\n            try {\r\n                const response = await axios.post(`${ip.address}/patient/api/forgot-password`, { email: modalEmail });\r\n                setModalMessage(response.data.message);\r\n            } catch (err) {\r\n                console.error('Error in forgot password:', err);\r\n                setModalMessage(err.response?.data?.message || 'An error occurred.');\r\n            }\r\n        } else if (modalRole === \"Practitioner\") {\r\n            // Forgot password for Practitioner\r\n            // Since you requested to only implement for Patient now, we can show a message\r\n            setModalMessage(\"Forgot password functionality for Practitioner is not implemented yet.\");\r\n        }\r\n    };\r\n\r\n    return (\r\n        <>\r\n            <NavigationalBar />\r\n            <div className=\"align-items-center d-flex vh-100\">\r\n                <Container fluid className=\"maincontainer d-flex justify-content-center align-items-center\">\r\n                    <div className=\"container\">\r\n                        <h1>Welcome Back!</h1>\r\n                        <Form onSubmit={loginuser}>\r\n                            <Row className=\"mb-3\">\r\n                                <Form.Group className=\"mb-3\" controlId=\"formEmail\">\r\n                                    <Form.Label>Email Address</Form.Label>\r\n                                    <Form.Control\r\n                                        type=\"email\"\r\n                                        placeholder=\"Enter Email Address\"\r\n                                        value={email}\r\n                                        onChange={(e) => setEmail(e.target.value)}\r\n                                    />\r\n                                </Form.Group>\r\n                            </Row>\r\n                            <Row className=\"align-items right\">\r\n                                <Form.Group className=\"mb-3\" controlId=\"formPassword\">\r\n                                    <Form.Label>Password</Form.Label>\r\n                                    <Form.Control\r\n                                        type=\"password\"\r\n                                        placeholder=\"Enter Password\"\r\n                                        value={password}\r\n                                        onChange={(e) => setPassword(e.target.value)}\r\n                                    />\r\n                                </Form.Group>\r\n                            </Row>\r\n                            <Row>\r\n                                <Form.Group as={Col} controlId=\"formChoose\">\r\n                                    <Form.Label>Choose your role:</Form.Label>\r\n                                    <Form.Select value={userRole} onChange={(e) => setUserRole(e.target.value)}>\r\n                                        <option value=\"Patient\">Patient</option>\r\n                                        <option value=\"Practitioner\">Practitioner</option>\r\n                                    </Form.Select>\r\n                                </Form.Group>\r\n                            </Row>\r\n                            <Row className=\"mb-3\"></Row>\r\n                            <Row className=\"mb-3\">\r\n                                <Form.Group controlId=\"formBasicCheckbox\">\r\n                                    <Form.Check\r\n                                        type=\"checkbox\"\r\n                                        label=\"Remember me\"\r\n                                        checked={rememberMe}\r\n                                        onChange={(e) => setRememberMe(e.target.checked)}\r\n                                    />\r\n                                </Form.Group>\r\n                            </Row>\r\n                            <div className=\"justify-content-center\">\r\n                                <Button type=\"submit\" className=\"mb-2 buttonStyle\">\r\n                                    Log In\r\n                                </Button>\r\n                            </div>\r\n                            <div className=\"mb-0\">\r\n                                <a href=\"#\" onClick={() => setShowModal(true)}>Forgot Password?</a>\r\n                            </div>\r\n                            <div className=\"mb-0\">\r\n                                <a href=\"/medapp/signup\">No account yet? Sign up</a>\r\n                            </div>\r\n                        </Form>\r\n                    </div>\r\n                </Container>\r\n            </div>\r\n\r\n            {/* Forgot Password Modal */}\r\n            <Modal show={showModal} onHide={() => {\r\n                setShowModal(false);\r\n                setModalMessage('');\r\n            }}>\r\n                <Modal.Header closeButton>\r\n                    <Modal.Title>Forgot Password</Modal.Title>\r\n                </Modal.Header>\r\n                <Modal.Body>\r\n                    {modalMessage ? (\r\n                        <p>{modalMessage}</p>\r\n                    ) : (\r\n                        <Form onSubmit={handleForgotPassword}>\r\n                            <Form.Group className=\"mb-3\" controlId=\"formModalEmail\">\r\n                                <Form.Label>Email Address</Form.Label>\r\n                                <Form.Control\r\n                                    type=\"email\"\r\n                                    placeholder=\"Enter Email Address\"\r\n                                    value={modalEmail}\r\n                                    onChange={(e) => setModalEmail(e.target.value)}\r\n                                />\r\n                            </Form.Group>\r\n                            <Form.Group as={Col} controlId=\"formModalRole\">\r\n                                <Form.Label>Choose your role:</Form.Label>\r\n                                <Form.Select value={modalRole} onChange={(e) => setModalRole(e.target.value)}>\r\n                                    <option value=\"Patient\">Patient</option>\r\n                                    <option value=\"Practitioner\">Practitioner</option>\r\n                                </Form.Select>\r\n                            </Form.Group>\r\n                            <Button variant=\"primary\" type=\"submit\" className=\"mt-3\">\r\n                                Submit\r\n                            </Button>\r\n                        </Form>\r\n                    )}\r\n                </Modal.Body>\r\n            </Modal>\r\n        </>\r\n    );\r\n};\r\n\r\nexport default LogInUser;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}