{"ast":null,"code":"var _jsxFileName = \"E:\\\\School\\\\School\\\\Integrative Programming\\\\medical-appointment\\\\frontend\\\\src\\\\components\\\\practitioner\\\\patientinformation\\\\findings\\\\PatientFindings.jsx\",\n  _s = $RefreshSig$();\nimport { useNavigate, useParams, Link } from \"react-router-dom\";\nimport { Container, Row, Col, Button, Card, Form, Table } from 'react-bootstrap';\nimport axios from \"axios\";\nimport { useEffect, useState } from \"react\";\nimport './PatientFindings.css';\nimport PatientHistory from \"./PatientHistory\";\nimport { ip } from \"../../../../ContentExport\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction PatientFindings({\n  patientId,\n  appointmentId,\n  doctorId\n}) {\n  _s();\n  var _findings$historyOfPr, _findings$bloodPressu, _findings$bloodPressu2, _findings$skinConditi, _findings$allergy;\n  const [fname, setFname] = useState('');\n  const [lname, setLname] = useState('');\n  const [age, setAge] = useState('');\n  const [email, setEmail] = useState('');\n  const [reason, setReason] = useState('');\n  const [findings, setFindings] = useState({\n    bloodPressure: {\n      systole: '',\n      diastole: ''\n    },\n    respiratoryRate: '',\n    pulseRate: '',\n    temperature: '',\n    weight: '',\n    height: '',\n    historyOfPresentIllness: {\n      chiefComplaint: '',\n      currentSymptoms: ['']\n    },\n    bloodSugar: {\n      fasting: '',\n      random: ''\n    },\n    cholesterol: {\n      total: '',\n      ldl: '',\n      hdl: '',\n      triglycerides: ''\n    },\n    oxygenSaturation: '',\n    generalCondition: 'Stable',\n    lifestyle: {\n      smoking: false,\n      alcoholConsumption: false,\n      physicalActivity: ''\n    },\n    familyHistory: [{\n      relation: '',\n      condition: ''\n    }],\n    socialHistory: {\n      employmentStatus: '',\n      livingSituation: '',\n      socialSupport: true\n    },\n    mentalHealth: {\n      mood: '',\n      anxietyLevel: '',\n      depressionLevel: ''\n    },\n    skinCondition: [],\n    // Ensure this is an array\n    allergy: [],\n    // Ensure this is an array\n    neurologicalFindings: '',\n    gastrointestinalSymptoms: '',\n    cardiovascularSymptoms: '',\n    reproductiveHealth: '',\n    remarks: '',\n    interpretation: '',\n    recommendations: '',\n    assessment: ''\n  });\n  ;\n  const [loading, setLoading] = useState(true);\n  const [error, setError] = useState(null);\n  const navigate = useNavigate();\n  useEffect(() => {\n    axios.get(`${ip.address}/appointments/${appointmentId}`).then(res => {\n      setReason(res.data.reason);\n    }).catch(err => {\n      console.error('Error fetching appointment:', err);\n      setError('Failed to load appointment data. Please try again later.');\n    });\n  }, [appointmentId]);\n  useEffect(() => {\n    const fetchPatientAndFindings = async () => {\n      setLoading(true);\n      try {\n        const patientRes = await axios.get(`${ip.address}/patient/api/onepatient/${patientId}`);\n        setFname(patientRes.data.thePatient.patient_firstName);\n        setLname(patientRes.data.thePatient.patient_lastName);\n        setAge(patientRes.data.thePatient.patient_age);\n        setEmail(patientRes.data.thePatient.patient_email);\n        const findingsRes = await axios.get(`${ip.address}/getfindings/${appointmentId}`);\n        if (findingsRes.data && findingsRes.data.findings) {\n          setFindings(findingsRes.data.findings);\n        }\n        const appointmnetRes = await axios.get(`${ip.address}/appointments/${appointmentId}`);\n        if (appointmnetRes.data && appointmnetRes.data.appointment) {\n          setReason(appointmnetRes.data);\n        }\n        setLoading(false);\n      } catch (err) {\n        console.error('Error fetching data:', err);\n        setError('Failed to load data. Please try again later.');\n        setLoading(false);\n      }\n    };\n    fetchPatientAndFindings();\n  }, [patientId, appointmentId]);\n  const handleChange = e => {\n    const {\n      name,\n      value,\n      type,\n      checked\n    } = e.target;\n    if (name.includes('systole') || name.includes('diastole')) {\n      setFindings(prevState => ({\n        ...prevState,\n        bloodPressure: {\n          ...prevState.bloodPressure,\n          [name]: value\n        }\n      }));\n    } else if (name.includes('fasting') || name.includes('random')) {\n      setFindings(prevState => ({\n        ...prevState,\n        bloodSugar: {\n          ...prevState.bloodSugar,\n          [name]: value\n        }\n      }));\n    } else if (name.includes('total') || name.includes('ldl') || name.includes('hdl') || name.includes('triglycerides')) {\n      setFindings(prevState => ({\n        ...prevState,\n        cholesterol: {\n          ...prevState.cholesterol,\n          [name]: value\n        }\n      }));\n    } else if (name === 'smoking' || name === 'alcoholConsumption') {\n      setFindings(prevState => ({\n        ...prevState,\n        lifestyle: {\n          ...prevState.lifestyle,\n          [name]: checked\n        }\n      }));\n    } else if (name === 'socialSupport') {\n      setFindings(prevState => ({\n        ...prevState,\n        socialHistory: {\n          ...prevState.socialHistory,\n          [name]: checked\n        }\n      }));\n    } else {\n      setFindings(prevState => ({\n        ...prevState,\n        [name]: value\n      }));\n    }\n  };\n  const handleSubmit = async e => {\n    e.preventDefault();\n\n    // Validation for Chief Complaint and Current Symptoms\n    if (!findings.historyOfPresentIllness.chiefComplaint.trim()) {\n      alert('Chief Complaint is required.');\n      return;\n    }\n    const validSymptoms = findings.historyOfPresentIllness.currentSymptoms.filter(symptom => symptom.trim() !== '');\n    if (validSymptoms.length === 0) {\n      alert('At least one valid symptom is required.');\n      return;\n    }\n    let updatedSkinConditions = findings.skinCondition || [];\n    if (updatedSkinConditions.includes('Other') && findings.otherSkinCondition) {\n      updatedSkinConditions = updatedSkinConditions.map(condition => condition === 'Other' ? findings.otherSkinCondition : condition);\n    }\n    let updatedAllergies = findings.allergy || [];\n    if (updatedAllergies.includes('Other') && findings.otherAllergy) {\n      updatedAllergies = updatedAllergies.map(allergy => allergy === 'Other' ? findings.otherAllergy : allergy);\n    }\n    try {\n      await axios.post('${ip.address}/createfindings', {\n        ...findings,\n        skinCondition: updatedSkinConditions,\n        allergy: updatedAllergies,\n        patient: patientId,\n        appointment: appointmentId,\n        doctor: doctorId\n      });\n      alert('Findings saved successfully');\n    } catch (err) {\n      console.error('Error saving findings:', err);\n      alert('Error saving findings');\n    }\n  };\n  if (loading) {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      children: \"Loading...\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 197,\n      columnNumber: 16\n    }, this);\n  }\n  if (error) {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      children: error\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 201,\n      columnNumber: 16\n    }, this);\n  }\n  return /*#__PURE__*/_jsxDEV(Container, {\n    fluid: true,\n    children: /*#__PURE__*/_jsxDEV(Row, {\n      className: \"mt-4\",\n      children: [/*#__PURE__*/_jsxDEV(Col, {\n        md: 4,\n        children: [/*#__PURE__*/_jsxDEV(Card, {\n          className: \"mb-4\",\n          children: [/*#__PURE__*/_jsxDEV(Card.Header, {\n            children: /*#__PURE__*/_jsxDEV(\"h4\", {\n              className: \"m-0 font-weight-bold text-gray\",\n              children: \"Patient Details\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 210,\n              columnNumber: 29\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 209,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(Card.Body, {\n            children: [/*#__PURE__*/_jsxDEV(Card.Text, {\n              children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n                children: \"Patient Name:\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 214,\n                columnNumber: 33\n              }, this), \" \", fname, \" \", lname]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 213,\n              columnNumber: 29\n            }, this), /*#__PURE__*/_jsxDEV(Card.Text, {\n              children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n                children: \"Patient Age:\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 217,\n                columnNumber: 33\n              }, this), \" \", age]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 216,\n              columnNumber: 29\n            }, this), /*#__PURE__*/_jsxDEV(Card.Text, {\n              children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n                children: \"Patient Email:\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 220,\n                columnNumber: 33\n              }, this), \" \", email]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 219,\n              columnNumber: 29\n            }, this), /*#__PURE__*/_jsxDEV(Card.Text, {\n              children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n                children: \"Primary Concern:\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 223,\n                columnNumber: 33\n              }, this), \" \", reason]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 222,\n              columnNumber: 29\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 212,\n            columnNumber: 25\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 208,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(PatientHistory, {\n          pid: patientId\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 228,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 207,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(Col, {\n        md: 8,\n        children: /*#__PURE__*/_jsxDEV(Card, {\n          className: \"mb-4\",\n          children: [/*#__PURE__*/_jsxDEV(Card.Header, {\n            className: \"d-flex align-items-center\",\n            children: /*#__PURE__*/_jsxDEV(\"h4\", {\n              className: \"m-0 font-weight-bold text-gray\",\n              children: \"Patient Findings\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 237,\n              columnNumber: 29\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 236,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(Card.Body, {\n            children: [/*#__PURE__*/_jsxDEV(\"h4\", {\n              children: \"History of Present Illness\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 240,\n              columnNumber: 29\n            }, this), /*#__PURE__*/_jsxDEV(\"hr\", {}, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 241,\n              columnNumber: 29\n            }, this), /*#__PURE__*/_jsxDEV(Form.Group, {\n              className: \"mb-3\",\n              children: [/*#__PURE__*/_jsxDEV(Form.Label, {\n                children: \"Chief Complaint:\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 244,\n                columnNumber: 33\n              }, this), /*#__PURE__*/_jsxDEV(Form.Control, {\n                type: \"text\",\n                name: \"chiefComplaint\",\n                value: (findings === null || findings === void 0 ? void 0 : (_findings$historyOfPr = findings.historyOfPresentIllness) === null || _findings$historyOfPr === void 0 ? void 0 : _findings$historyOfPr.chiefComplaint) || '',\n                onChange: e => {\n                  setFindings({\n                    ...findings,\n                    historyOfPresentIllness: {\n                      ...findings.historyOfPresentIllness,\n                      chiefComplaint: e.target.value\n                    }\n                  });\n                }\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 245,\n                columnNumber: 37\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 243,\n              columnNumber: 33\n            }, this), /*#__PURE__*/_jsxDEV(Form.Group, {\n              className: \"mb-3\",\n              children: [/*#__PURE__*/_jsxDEV(Form.Label, {\n                children: \"Current Symptoms: \"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 262,\n                columnNumber: 37\n              }, this), findings.historyOfPresentIllness.currentSymptoms.map((symptom, index) => /*#__PURE__*/_jsxDEV(Row, {\n                className: \"mb-2 align-items-center\",\n                children: [/*#__PURE__*/_jsxDEV(Col, {\n                  children: /*#__PURE__*/_jsxDEV(Form.Control, {\n                    type: \"text\",\n                    value: symptom || '',\n                    onChange: e => {\n                      const updatedSymptoms = [...findings.historyOfPresentIllness.currentSymptoms];\n                      updatedSymptoms[index] = e.target.value;\n                      setFindings({\n                        ...findings,\n                        historyOfPresentIllness: {\n                          ...findings.historyOfPresentIllness,\n                          currentSymptoms: updatedSymptoms\n                        }\n                      });\n                    }\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 266,\n                    columnNumber: 49\n                  }, this)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 265,\n                  columnNumber: 45\n                }, this), /*#__PURE__*/_jsxDEV(Col, {\n                  xs: \"auto\",\n                  children: /*#__PURE__*/_jsxDEV(Button, {\n                    variant: \"danger\",\n                    onClick: () => {\n                      const updatedSymptoms = findings.historyOfPresentIllness.currentSymptoms.filter((_, i) => i !== index);\n                      setFindings({\n                        ...findings,\n                        historyOfPresentIllness: {\n                          ...findings.historyOfPresentIllness,\n                          currentSymptoms: updatedSymptoms\n                        }\n                      });\n                    },\n                    children: \"X\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 283,\n                    columnNumber: 49\n                  }, this)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 282,\n                  columnNumber: 45\n                }, this)]\n              }, index, true, {\n                fileName: _jsxFileName,\n                lineNumber: 264,\n                columnNumber: 41\n              }, this)), /*#__PURE__*/_jsxDEV(Link, {\n                className: \"margin-left\",\n                variant: \"secondary\",\n                onClick: () => {\n                  setFindings({\n                    ...findings,\n                    historyOfPresentIllness: {\n                      ...findings.historyOfPresentIllness,\n                      currentSymptoms: [...findings.historyOfPresentIllness.currentSymptoms, '']\n                    }\n                  });\n                },\n                children: \"Add Symptom\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 303,\n                columnNumber: 37\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 261,\n              columnNumber: 33\n            }, this), /*#__PURE__*/_jsxDEV(\"hr\", {}, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 316,\n              columnNumber: 33\n            }, this), /*#__PURE__*/_jsxDEV(\"h4\", {\n              children: \"Vitals\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 318,\n              columnNumber: 29\n            }, this), /*#__PURE__*/_jsxDEV(\"hr\", {}, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 319,\n              columnNumber: 29\n            }, this), /*#__PURE__*/_jsxDEV(Form, {\n              onSubmit: handleSubmit,\n              children: [/*#__PURE__*/_jsxDEV(Row, {\n                className: \"mb-2\",\n                children: [/*#__PURE__*/_jsxDEV(Form.Group, {\n                  as: Col,\n                  className: \"mb-3\",\n                  children: [/*#__PURE__*/_jsxDEV(Form.Label, {\n                    children: \"Blood Pressure (Systole):\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 324,\n                    columnNumber: 41\n                  }, this), /*#__PURE__*/_jsxDEV(Form.Control, {\n                    type: \"number\",\n                    name: \"systole\",\n                    value: (findings === null || findings === void 0 ? void 0 : (_findings$bloodPressu = findings.bloodPressure) === null || _findings$bloodPressu === void 0 ? void 0 : _findings$bloodPressu.systole) || '',\n                    onChange: handleChange\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 325,\n                    columnNumber: 41\n                  }, this)]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 323,\n                  columnNumber: 37\n                }, this), /*#__PURE__*/_jsxDEV(Form.Group, {\n                  as: Col,\n                  className: \"mb-3\",\n                  children: [/*#__PURE__*/_jsxDEV(Form.Label, {\n                    children: \"Blood Pressure (Diastole):\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 333,\n                    columnNumber: 41\n                  }, this), /*#__PURE__*/_jsxDEV(Form.Control, {\n                    type: \"number\",\n                    name: \"diastole\",\n                    value: (findings === null || findings === void 0 ? void 0 : (_findings$bloodPressu2 = findings.bloodPressure) === null || _findings$bloodPressu2 === void 0 ? void 0 : _findings$bloodPressu2.diastole) || '',\n                    onChange: handleChange\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 334,\n                    columnNumber: 41\n                  }, this)]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 332,\n                  columnNumber: 37\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 322,\n                columnNumber: 33\n              }, this), /*#__PURE__*/_jsxDEV(Row, {\n                className: \"mb-2\",\n                children: [/*#__PURE__*/_jsxDEV(Form.Group, {\n                  as: Col,\n                  className: \"mb-3\",\n                  children: [/*#__PURE__*/_jsxDEV(Form.Label, {\n                    children: \"Respiratory Rate:\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 349,\n                    columnNumber: 41\n                  }, this), /*#__PURE__*/_jsxDEV(Form.Control, {\n                    type: \"number\",\n                    name: \"respiratoryRate\",\n                    value: (findings === null || findings === void 0 ? void 0 : findings.respiratoryRate) || '',\n                    onChange: handleChange\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 350,\n                    columnNumber: 41\n                  }, this)]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 348,\n                  columnNumber: 37\n                }, this), /*#__PURE__*/_jsxDEV(Form.Group, {\n                  as: Col,\n                  className: \"mb-3\",\n                  children: [/*#__PURE__*/_jsxDEV(Form.Label, {\n                    children: \"Pulse Rate:\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 358,\n                    columnNumber: 41\n                  }, this), /*#__PURE__*/_jsxDEV(Form.Control, {\n                    type: \"number\",\n                    name: \"pulseRate\",\n                    value: (findings === null || findings === void 0 ? void 0 : findings.pulseRate) || '',\n                    onChange: handleChange\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 359,\n                    columnNumber: 41\n                  }, this)]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 357,\n                  columnNumber: 37\n                }, this), /*#__PURE__*/_jsxDEV(Form.Group, {\n                  as: Col,\n                  className: \"mb-3\",\n                  children: [/*#__PURE__*/_jsxDEV(Form.Label, {\n                    children: \"Temperature (\\xB0C):\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 367,\n                    columnNumber: 41\n                  }, this), /*#__PURE__*/_jsxDEV(Form.Control, {\n                    type: \"number\",\n                    name: \"temperature\",\n                    value: (findings === null || findings === void 0 ? void 0 : findings.temperature) || '',\n                    onChange: handleChange\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 368,\n                    columnNumber: 41\n                  }, this)]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 366,\n                  columnNumber: 37\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 347,\n                columnNumber: 33\n              }, this), /*#__PURE__*/_jsxDEV(Row, {\n                className: \"mb-2\",\n                children: [/*#__PURE__*/_jsxDEV(Form.Group, {\n                  as: Col,\n                  className: \"mb-3\",\n                  children: [/*#__PURE__*/_jsxDEV(Form.Label, {\n                    children: \"Weight (kg):\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 379,\n                    columnNumber: 41\n                  }, this), /*#__PURE__*/_jsxDEV(Form.Control, {\n                    type: \"number\",\n                    name: \"weight\",\n                    value: (findings === null || findings === void 0 ? void 0 : findings.weight) || '',\n                    onChange: handleChange\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 380,\n                    columnNumber: 41\n                  }, this)]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 378,\n                  columnNumber: 37\n                }, this), /*#__PURE__*/_jsxDEV(Form.Group, {\n                  as: Col,\n                  className: \"mb-3\",\n                  children: [/*#__PURE__*/_jsxDEV(Form.Label, {\n                    children: \"Height (cm):\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 388,\n                    columnNumber: 41\n                  }, this), /*#__PURE__*/_jsxDEV(Form.Control, {\n                    type: \"number\",\n                    name: \"height\",\n                    value: (findings === null || findings === void 0 ? void 0 : findings.height) || '',\n                    onChange: handleChange\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 389,\n                    columnNumber: 41\n                  }, this)]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 387,\n                  columnNumber: 37\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 377,\n                columnNumber: 33\n              }, this), /*#__PURE__*/_jsxDEV(\"hr\", {}, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 398,\n                columnNumber: 33\n              }, this), /*#__PURE__*/_jsxDEV(\"h4\", {\n                children: \"Lifestyle\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 399,\n                columnNumber: 37\n              }, this), /*#__PURE__*/_jsxDEV(\"hr\", {}, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 400,\n                columnNumber: 33\n              }, this), /*#__PURE__*/_jsxDEV(Row, {\n                children: /*#__PURE__*/_jsxDEV(Form.Group, {\n                  className: \"mb-3\",\n                  children: [/*#__PURE__*/_jsxDEV(Form.Check, {\n                    type: \"checkbox\",\n                    label: \"Smoking\",\n                    name: \"smoking\",\n                    checked: findings.lifestyle.smoking,\n                    onChange: handleChange\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 405,\n                    columnNumber: 37\n                  }, this), /*#__PURE__*/_jsxDEV(Form.Check, {\n                    type: \"checkbox\",\n                    label: \"Alcohol Consumption\",\n                    name: \"alcoholConsumption\",\n                    checked: findings.lifestyle.alcoholConsumption,\n                    onChange: handleChange\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 412,\n                    columnNumber: 37\n                  }, this)]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 404,\n                  columnNumber: 33\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 402,\n                columnNumber: 33\n              }, this), /*#__PURE__*/_jsxDEV(\"hr\", {}, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 424,\n                columnNumber: 33\n              }, this), /*#__PURE__*/_jsxDEV(\"h4\", {\n                children: \"Family History\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 425,\n                columnNumber: 37\n              }, this), /*#__PURE__*/_jsxDEV(\"hr\", {}, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 426,\n                columnNumber: 33\n              }, this), /*#__PURE__*/_jsxDEV(Form.Group, {\n                className: \"mb-3\",\n                children: [/*#__PURE__*/_jsxDEV(Form.Label, {\n                  children: \"Family History (Relation/Condition):\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 429,\n                  columnNumber: 33\n                }, this), findings.familyHistory.map((history, index) => /*#__PURE__*/_jsxDEV(Row, {\n                  className: \"mb-2\",\n                  children: [/*#__PURE__*/_jsxDEV(Col, {\n                    children: /*#__PURE__*/_jsxDEV(Form.Control, {\n                      type: \"text\",\n                      name: `relation-${index}`,\n                      value: history.relation || '',\n                      onChange: e => {\n                        const updatedFamilyHistory = [...findings.familyHistory];\n                        updatedFamilyHistory[index].relation = e.target.value;\n                        setFindings({\n                          ...findings,\n                          familyHistory: updatedFamilyHistory\n                        });\n                      }\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 433,\n                      columnNumber: 45\n                    }, this)\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 432,\n                    columnNumber: 41\n                  }, this), /*#__PURE__*/_jsxDEV(Col, {\n                    children: /*#__PURE__*/_jsxDEV(Form.Control, {\n                      type: \"text\",\n                      name: `condition-${index}`,\n                      value: history.condition || '',\n                      onChange: e => {\n                        const updatedFamilyHistory = [...findings.familyHistory];\n                        updatedFamilyHistory[index].condition = e.target.value;\n                        setFindings({\n                          ...findings,\n                          familyHistory: updatedFamilyHistory\n                        });\n                      }\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 445,\n                      columnNumber: 45\n                    }, this)\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 444,\n                    columnNumber: 41\n                  }, this)]\n                }, index, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 431,\n                  columnNumber: 37\n                }, this))]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 428,\n                columnNumber: 33\n              }, this), /*#__PURE__*/_jsxDEV(Link, {\n                variant: \"secondary\",\n                onClick: () => {\n                  setFindings({\n                    ...findings,\n                    familyHistory: [...findings.familyHistory, {\n                      relation: '',\n                      condition: ''\n                    }]\n                  });\n                },\n                children: \"Add Family History\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 459,\n                columnNumber: 29\n              }, this), /*#__PURE__*/_jsxDEV(\"hr\", {}, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 468,\n                columnNumber: 29\n              }, this), /*#__PURE__*/_jsxDEV(\"h4\", {\n                children: \"Skin Condition\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 469,\n                columnNumber: 37\n              }, this), /*#__PURE__*/_jsxDEV(\"hr\", {}, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 470,\n                columnNumber: 29\n              }, this), /*#__PURE__*/_jsxDEV(Form.Group, {\n                className: \"mb-3\",\n                children: [/*#__PURE__*/_jsxDEV(Form.Check, {\n                  type: \"checkbox\",\n                  label: \"Rash\",\n                  name: \"skinCondition\",\n                  value: \"Rash\",\n                  checked: ((findings === null || findings === void 0 ? void 0 : findings.skinCondition) || []).includes('Rash'),\n                  onChange: e => {\n                    const {\n                      value,\n                      checked\n                    } = e.target;\n                    let updatedConditions = findings.skinCondition || [];\n                    if (checked) {\n                      updatedConditions.push(value);\n                    } else {\n                      updatedConditions = updatedConditions.filter(condition => condition !== value);\n                    }\n                    setFindings({\n                      ...findings,\n                      skinCondition: updatedConditions\n                    });\n                  }\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 472,\n                  columnNumber: 29\n                }, this), /*#__PURE__*/_jsxDEV(Form.Check, {\n                  type: \"checkbox\",\n                  label: \"Jaundice\",\n                  name: \"skinCondition\",\n                  value: \"Jaundice\",\n                  checked: ((findings === null || findings === void 0 ? void 0 : findings.skinCondition) || []).includes('Jaundice'),\n                  onChange: e => {\n                    const {\n                      value,\n                      checked\n                    } = e.target;\n                    let updatedConditions = findings.skinCondition || [];\n                    if (checked) {\n                      updatedConditions.push(value);\n                    } else {\n                      updatedConditions = updatedConditions.filter(condition => condition !== value);\n                    }\n                    setFindings({\n                      ...findings,\n                      skinCondition: updatedConditions\n                    });\n                  }\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 492,\n                  columnNumber: 29\n                }, this), /*#__PURE__*/_jsxDEV(Form.Check, {\n                  type: \"checkbox\",\n                  label: \"Dry Skin\",\n                  name: \"skinCondition\",\n                  value: \"Dry Skin\",\n                  checked: ((findings === null || findings === void 0 ? void 0 : findings.skinCondition) || []).includes('Dry Skin'),\n                  onChange: e => {\n                    const {\n                      value,\n                      checked\n                    } = e.target;\n                    let updatedConditions = findings.skinCondition || [];\n                    if (checked) {\n                      updatedConditions.push(value);\n                    } else {\n                      updatedConditions = updatedConditions.filter(condition => condition !== value);\n                    }\n                    setFindings({\n                      ...findings,\n                      skinCondition: updatedConditions\n                    });\n                  }\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 511,\n                  columnNumber: 29\n                }, this), /*#__PURE__*/_jsxDEV(Form.Check, {\n                  type: \"checkbox\",\n                  label: \"Other\",\n                  name: \"skinCondition\",\n                  value: \"Other\",\n                  checked: ((findings === null || findings === void 0 ? void 0 : findings.skinCondition) || []).includes('Other'),\n                  onChange: e => {\n                    const {\n                      value,\n                      checked\n                    } = e.target;\n                    let updatedConditions = findings.skinCondition || [];\n                    if (checked) {\n                      updatedConditions.push(value);\n                    } else {\n                      updatedConditions = updatedConditions.filter(condition => condition !== value);\n                    }\n                    setFindings({\n                      ...findings,\n                      skinCondition: updatedConditions\n                    });\n                  }\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 532,\n                  columnNumber: 29\n                }, this), (findings === null || findings === void 0 ? void 0 : (_findings$skinConditi = findings.skinCondition) === null || _findings$skinConditi === void 0 ? void 0 : _findings$skinConditi.includes('Other')) && /*#__PURE__*/_jsxDEV(Form.Group, {\n                  className: \"mt-2\",\n                  children: [/*#__PURE__*/_jsxDEV(Form.Label, {\n                    children: \"Specify Other Skin Condition:\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 555,\n                    columnNumber: 37\n                  }, this), /*#__PURE__*/_jsxDEV(Form.Control, {\n                    type: \"text\",\n                    name: \"otherSkinCondition\",\n                    value: (findings === null || findings === void 0 ? void 0 : findings.otherSkinCondition) || '',\n                    onChange: e => setFindings({\n                      ...findings,\n                      otherSkinCondition: e.target.value\n                    })\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 556,\n                    columnNumber: 37\n                  }, this)]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 554,\n                  columnNumber: 33\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 471,\n                columnNumber: 29\n              }, this), /*#__PURE__*/_jsxDEV(\"hr\", {}, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 566,\n                columnNumber: 25\n              }, this), /*#__PURE__*/_jsxDEV(\"h4\", {\n                children: \"Allergies\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 567,\n                columnNumber: 37\n              }, this), /*#__PURE__*/_jsxDEV(\"hr\", {}, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 568,\n                columnNumber: 33\n              }, this), /*#__PURE__*/_jsxDEV(Form.Group, {\n                className: \"mb-3\",\n                children: [/*#__PURE__*/_jsxDEV(Form.Check, {\n                  type: \"checkbox\",\n                  label: \"Peanuts\",\n                  name: \"allergy\",\n                  value: \"Peanuts\",\n                  checked: ((findings === null || findings === void 0 ? void 0 : findings.allergy) || []).includes('Peanuts'),\n                  onChange: e => {\n                    const {\n                      value,\n                      checked\n                    } = e.target;\n                    let updatedAllergies = findings.allergy || [];\n                    if (checked) {\n                      updatedAllergies.push(value);\n                    } else {\n                      updatedAllergies = updatedAllergies.filter(allergy => allergy !== value);\n                    }\n                    setFindings({\n                      ...findings,\n                      allergy: updatedAllergies\n                    });\n                  }\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 573,\n                  columnNumber: 29\n                }, this), /*#__PURE__*/_jsxDEV(Form.Check, {\n                  type: \"checkbox\",\n                  label: \"Shellfish\",\n                  name: \"allergy\",\n                  value: \"Shellfish\",\n                  checked: ((findings === null || findings === void 0 ? void 0 : findings.allergy) || []).includes('Shellfish'),\n                  onChange: e => {\n                    const {\n                      value,\n                      checked\n                    } = e.target;\n                    let updatedAllergies = findings.allergy || [];\n                    if (checked) {\n                      updatedAllergies.push(value);\n                    } else {\n                      updatedAllergies = updatedAllergies.filter(allergy => allergy !== value);\n                    }\n                    setFindings({\n                      ...findings,\n                      allergy: updatedAllergies\n                    });\n                  }\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 593,\n                  columnNumber: 29\n                }, this), /*#__PURE__*/_jsxDEV(Form.Check, {\n                  type: \"checkbox\",\n                  label: \"Pollen\",\n                  name: \"allergy\",\n                  value: \"Pollen\",\n                  checked: ((findings === null || findings === void 0 ? void 0 : findings.allergy) || []).includes('Pollen'),\n                  onChange: e => {\n                    const {\n                      value,\n                      checked\n                    } = e.target;\n                    let updatedAllergies = findings.allergy || [];\n                    if (checked) {\n                      updatedAllergies.push(value);\n                    } else {\n                      updatedAllergies = updatedAllergies.filter(allergy => allergy !== value);\n                    }\n                    setFindings({\n                      ...findings,\n                      allergy: updatedAllergies\n                    });\n                  }\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 612,\n                  columnNumber: 29\n                }, this), /*#__PURE__*/_jsxDEV(Form.Check, {\n                  type: \"checkbox\",\n                  label: \"Other\",\n                  name: \"allergy\",\n                  value: \"Other\",\n                  checked: ((findings === null || findings === void 0 ? void 0 : findings.allergy) || []).includes('Other'),\n                  onChange: e => {\n                    const {\n                      value,\n                      checked\n                    } = e.target;\n                    let updatedAllergies = findings.allergy || [];\n                    if (checked) {\n                      updatedAllergies.push(value);\n                    } else {\n                      updatedAllergies = updatedAllergies.filter(allergy => allergy !== value);\n                    }\n                    setFindings({\n                      ...findings,\n                      allergy: updatedAllergies\n                    });\n                  }\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 633,\n                  columnNumber: 29\n                }, this), (findings === null || findings === void 0 ? void 0 : (_findings$allergy = findings.allergy) === null || _findings$allergy === void 0 ? void 0 : _findings$allergy.includes('Other')) && /*#__PURE__*/_jsxDEV(Form.Group, {\n                  className: \"mt-2\",\n                  children: [/*#__PURE__*/_jsxDEV(Form.Label, {\n                    children: \"Specify Other Allergy:\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 656,\n                    columnNumber: 37\n                  }, this), /*#__PURE__*/_jsxDEV(Form.Control, {\n                    type: \"text\",\n                    name: \"otherAllergy\",\n                    value: (findings === null || findings === void 0 ? void 0 : findings.otherAllergy) || '',\n                    onChange: e => setFindings({\n                      ...findings,\n                      otherAllergy: e.target.value\n                    })\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 657,\n                    columnNumber: 37\n                  }, this)]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 655,\n                  columnNumber: 33\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 569,\n                columnNumber: 25\n              }, this), /*#__PURE__*/_jsxDEV(\"hr\", {}, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 667,\n                columnNumber: 25\n              }, this), /*#__PURE__*/_jsxDEV(Form.Group, {\n                className: \"mb-3\",\n                children: [/*#__PURE__*/_jsxDEV(Form.Label, {\n                  children: \"Assessment:\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 671,\n                  columnNumber: 37\n                }, this), /*#__PURE__*/_jsxDEV(Form.Control, {\n                  type: \"text\",\n                  name: \"assessment\",\n                  value: findings.assessment || '',\n                  onChange: handleChange\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 672,\n                  columnNumber: 37\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 670,\n                columnNumber: 29\n              }, this), /*#__PURE__*/_jsxDEV(Form.Group, {\n                className: \"mb-3\",\n                children: [/*#__PURE__*/_jsxDEV(Form.Label, {\n                  children: \"Interpretation:\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 683,\n                  columnNumber: 33\n                }, this), /*#__PURE__*/_jsxDEV(Form.Control, {\n                  type: \"text\",\n                  name: \"interpretation\",\n                  value: (findings === null || findings === void 0 ? void 0 : findings.interpretation) || '',\n                  onChange: handleChange\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 684,\n                  columnNumber: 33\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 682,\n                columnNumber: 29\n              }, this), /*#__PURE__*/_jsxDEV(Form.Group, {\n                className: \"mb-3\",\n                children: [/*#__PURE__*/_jsxDEV(Form.Label, {\n                  children: \"Recommendations:\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 693,\n                  columnNumber: 33\n                }, this), /*#__PURE__*/_jsxDEV(Form.Control, {\n                  type: \"text\",\n                  name: \"recommendations\",\n                  value: (findings === null || findings === void 0 ? void 0 : findings.recommendations) || '',\n                  onChange: handleChange\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 694,\n                  columnNumber: 33\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 692,\n                columnNumber: 29\n              }, this), /*#__PURE__*/_jsxDEV(Form.Group, {\n                className: \"mb-3\",\n                children: [/*#__PURE__*/_jsxDEV(Form.Label, {\n                  children: \"Remarks:\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 728,\n                  columnNumber: 37\n                }, this), /*#__PURE__*/_jsxDEV(Form.Control, {\n                  type: \"text\",\n                  name: \"remarks\",\n                  value: findings.remarks || '',\n                  onChange: handleChange\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 729,\n                  columnNumber: 37\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 727,\n                columnNumber: 33\n              }, this), /*#__PURE__*/_jsxDEV(Button, {\n                type: \"submit\",\n                variant: \"primary\",\n                children: \"Save Findings\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 740,\n                columnNumber: 33\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 320,\n              columnNumber: 29\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 239,\n            columnNumber: 25\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 235,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 234,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 206,\n      columnNumber: 13\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 205,\n    columnNumber: 9\n  }, this);\n}\n_s(PatientFindings, \"w8Ma/WPnm9DXVQXzmdkw4YInMGU=\", false, function () {\n  return [useNavigate];\n});\n_c = PatientFindings;\nexport default PatientFindings;\nvar _c;\n$RefreshReg$(_c, \"PatientFindings\");","map":{"version":3,"names":["useNavigate","useParams","Link","Container","Row","Col","Button","Card","Form","Table","axios","useEffect","useState","PatientHistory","ip","jsxDEV","_jsxDEV","PatientFindings","patientId","appointmentId","doctorId","_s","_findings$historyOfPr","_findings$bloodPressu","_findings$bloodPressu2","_findings$skinConditi","_findings$allergy","fname","setFname","lname","setLname","age","setAge","email","setEmail","reason","setReason","findings","setFindings","bloodPressure","systole","diastole","respiratoryRate","pulseRate","temperature","weight","height","historyOfPresentIllness","chiefComplaint","currentSymptoms","bloodSugar","fasting","random","cholesterol","total","ldl","hdl","triglycerides","oxygenSaturation","generalCondition","lifestyle","smoking","alcoholConsumption","physicalActivity","familyHistory","relation","condition","socialHistory","employmentStatus","livingSituation","socialSupport","mentalHealth","mood","anxietyLevel","depressionLevel","skinCondition","allergy","neurologicalFindings","gastrointestinalSymptoms","cardiovascularSymptoms","reproductiveHealth","remarks","interpretation","recommendations","assessment","loading","setLoading","error","setError","navigate","get","address","then","res","data","catch","err","console","fetchPatientAndFindings","patientRes","thePatient","patient_firstName","patient_lastName","patient_age","patient_email","findingsRes","appointmnetRes","appointment","handleChange","e","name","value","type","checked","target","includes","prevState","handleSubmit","preventDefault","trim","alert","validSymptoms","filter","symptom","length","updatedSkinConditions","otherSkinCondition","map","updatedAllergies","otherAllergy","post","patient","doctor","children","fileName","_jsxFileName","lineNumber","columnNumber","fluid","className","md","Header","Body","Text","pid","Group","Label","Control","onChange","index","updatedSymptoms","xs","variant","onClick","_","i","onSubmit","as","Check","label","history","updatedFamilyHistory","updatedConditions","push","_c","$RefreshReg$"],"sources":["E:/School/School/Integrative Programming/medical-appointment/frontend/src/components/practitioner/patientinformation/findings/PatientFindings.jsx"],"sourcesContent":["import { useNavigate, useParams, Link } from \"react-router-dom\";\r\nimport { Container, Row, Col, Button, Card, Form, Table, } from 'react-bootstrap';\r\nimport axios from \"axios\";\r\nimport { useEffect, useState } from \"react\";\r\nimport './PatientFindings.css'; \r\nimport PatientHistory from \"./PatientHistory\";\r\nimport { ip } from \"../../../../ContentExport\";\r\nfunction PatientFindings({ patientId, appointmentId, doctorId }) {\r\n    const [fname, setFname] = useState('');\r\n    const [lname, setLname] = useState('');\r\n    const [age, setAge] = useState('');\r\n    const [email, setEmail] = useState('');\r\n \r\n    const [reason, setReason] = useState('');\r\n    const [findings, setFindings] = useState({\r\n        bloodPressure: { systole: '', diastole: '' },\r\n        respiratoryRate: '',\r\n        pulseRate: '',\r\n        temperature: '',\r\n        weight: '',\r\n        height: '',\r\n        historyOfPresentIllness: { chiefComplaint: '', currentSymptoms: [''] },\r\n        bloodSugar: { fasting: '', random: '' },\r\n        cholesterol: { total: '', ldl: '', hdl: '', triglycerides: '' },\r\n        oxygenSaturation: '',\r\n        generalCondition: 'Stable',\r\n        lifestyle: { smoking: false, alcoholConsumption: false, physicalActivity: '' },\r\n        familyHistory: [{ relation: '', condition: '' }],\r\n        socialHistory: { employmentStatus: '', livingSituation: '', socialSupport: true },\r\n        mentalHealth: { mood: '', anxietyLevel: '', depressionLevel: '' },\r\n        skinCondition: [],  // Ensure this is an array\r\n        allergy: [],        // Ensure this is an array\r\n        neurologicalFindings: '',\r\n        gastrointestinalSymptoms: '',\r\n        cardiovascularSymptoms: '',\r\n        reproductiveHealth: '',\r\n        remarks: '',\r\n        interpretation: '',\r\n        recommendations: '',\r\n        assessment: '',\r\n    });\r\n    \r\n;\r\n    const [loading, setLoading] = useState(true);  \r\n    const [error, setError] = useState(null);      \r\n\r\n    const navigate = useNavigate();\r\n    useEffect(() => {\r\n        axios.get(`${ip.address}/appointments/${appointmentId}`)\r\n            .then((res) => {                        \r\n                setReason(res.data.reason);\r\n            })\r\n            .catch((err) => {\r\n                console.error('Error fetching appointment:', err);\r\n                setError('Failed to load appointment data. Please try again later.');\r\n            });\r\n    }, [appointmentId]);\r\n\r\n\r\n    useEffect(() => {\r\n        const fetchPatientAndFindings = async () => {\r\n            setLoading(true);\r\n            try {\r\n                const patientRes = await axios.get(`${ip.address}/patient/api/onepatient/${patientId}`);\r\n                setFname(patientRes.data.thePatient.patient_firstName);\r\n                setLname(patientRes.data.thePatient.patient_lastName);\r\n                setAge(patientRes.data.thePatient.patient_age);\r\n                setEmail(patientRes.data.thePatient.patient_email);\r\n    \r\n                const findingsRes = await axios.get(`${ip.address}/getfindings/${appointmentId}`);\r\n    \r\n                if (findingsRes.data && findingsRes.data.findings) {\r\n                    setFindings(findingsRes.data.findings);\r\n                }\r\n\r\n                const appointmnetRes = await axios.get(`${ip.address}/appointments/${appointmentId}`);\r\n\r\n                if (appointmnetRes.data && appointmnetRes.data.appointment) { \r\n                   \r\n                    setReason(appointmnetRes.data);\r\n                }\r\n\r\n\r\n                \r\n    \r\n                setLoading(false);\r\n            } catch (err) {\r\n                console.error('Error fetching data:', err);\r\n                setError('Failed to load data. Please try again later.');\r\n                setLoading(false);\r\n            }\r\n        };\r\n    \r\n        fetchPatientAndFindings();\r\n    }, [patientId, appointmentId]);\r\n\r\n    const handleChange = (e) => {\r\n        const { name, value, type, checked } = e.target;\r\n        if (name.includes('systole') || name.includes('diastole')) {\r\n            setFindings((prevState) => ({\r\n                ...prevState,\r\n                bloodPressure: {\r\n                    ...prevState.bloodPressure,\r\n                    [name]: value\r\n                }\r\n            }));\r\n        } else if (name.includes('fasting') || name.includes('random')) {\r\n            setFindings((prevState) => ({\r\n                ...prevState,\r\n                bloodSugar: {\r\n                    ...prevState.bloodSugar,\r\n                    [name]: value\r\n                }\r\n            }));\r\n        } else if (name.includes('total') || name.includes('ldl') || name.includes('hdl') || name.includes('triglycerides')) {\r\n            setFindings((prevState) => ({\r\n                ...prevState,\r\n                cholesterol: {\r\n                    ...prevState.cholesterol,\r\n                    [name]: value\r\n                }\r\n            }));\r\n        } else if (name === 'smoking' || name === 'alcoholConsumption') {\r\n            setFindings((prevState) => ({\r\n                ...prevState,\r\n                lifestyle: {\r\n                    ...prevState.lifestyle,\r\n                    [name]: checked\r\n                }\r\n            }));\r\n        } else if (name === 'socialSupport') {\r\n            setFindings((prevState) => ({\r\n                ...prevState,\r\n                socialHistory: {\r\n                    ...prevState.socialHistory,\r\n                    [name]: checked\r\n                }\r\n            }));\r\n        } else {\r\n            setFindings((prevState) => ({\r\n                ...prevState,\r\n                [name]: value\r\n            }));\r\n        }\r\n    };\r\n\r\n    const handleSubmit = async (e) => {\r\n        e.preventDefault();\r\n    \r\n        // Validation for Chief Complaint and Current Symptoms\r\n        if (!findings.historyOfPresentIllness.chiefComplaint.trim()) {\r\n            alert('Chief Complaint is required.');\r\n            return;\r\n        }\r\n    \r\n        const validSymptoms = findings.historyOfPresentIllness.currentSymptoms.filter(\r\n            (symptom) => symptom.trim() !== ''\r\n        );\r\n        if (validSymptoms.length === 0) {\r\n            alert('At least one valid symptom is required.');\r\n            return;\r\n        }\r\n    \r\n        let updatedSkinConditions = findings.skinCondition || [];\r\n        if (updatedSkinConditions.includes('Other') && findings.otherSkinCondition) {\r\n            updatedSkinConditions = updatedSkinConditions.map(condition =>\r\n                condition === 'Other' ? findings.otherSkinCondition : condition\r\n            );\r\n        }\r\n        \r\n        let updatedAllergies = findings.allergy || [];\r\n        if (updatedAllergies.includes('Other') && findings.otherAllergy) {\r\n            updatedAllergies = updatedAllergies.map(allergy =>\r\n                allergy === 'Other' ? findings.otherAllergy : allergy\r\n            );\r\n        }\r\n        \r\n    \r\n        try {\r\n            await axios.post('${ip.address}/createfindings', {\r\n                ...findings,\r\n                skinCondition: updatedSkinConditions,\r\n                allergy: updatedAllergies,\r\n                patient: patientId,\r\n                appointment: appointmentId,\r\n                doctor: doctorId\r\n            });\r\n            alert('Findings saved successfully');\r\n        } catch (err) {\r\n            console.error('Error saving findings:', err);\r\n            alert('Error saving findings');\r\n        }\r\n    };\r\n    \r\n\r\n    if (loading) {\r\n        return <div>Loading...</div>;\r\n    }\r\n\r\n    if (error) {\r\n        return <div>{error}</div>;\r\n    }\r\n\r\n    return (\r\n        <Container fluid>\r\n            <Row className=\"mt-4\">\r\n                <Col md={4}>\r\n                    <Card className=\"mb-4\">\r\n                        <Card.Header>\r\n                            <h4 className=\"m-0 font-weight-bold text-gray\">Patient Details</h4>\r\n                        </Card.Header>\r\n                        <Card.Body>\r\n                            <Card.Text>\r\n                                <strong>Patient Name:</strong> {fname} {lname}\r\n                            </Card.Text>\r\n                            <Card.Text>\r\n                                <strong>Patient Age:</strong> {age}\r\n                            </Card.Text>\r\n                            <Card.Text>\r\n                                <strong>Patient Email:</strong> {email}\r\n                            </Card.Text>\r\n                            <Card.Text>\r\n                                <strong>Primary Concern:</strong> {reason}\r\n                            </Card.Text>\r\n                        </Card.Body>\r\n                    </Card>\r\n\r\n                    <PatientHistory pid={patientId}/>\r\n\r\n\r\n                    \r\n                </Col>\r\n\r\n                <Col md={8}>\r\n                    <Card className=\"mb-4\">\r\n                        <Card.Header className=\"d-flex align-items-center\">\r\n                            <h4 className=\"m-0 font-weight-bold text-gray\">Patient Findings</h4>\r\n                        </Card.Header>\r\n                        <Card.Body>\r\n                            <h4>History of Present Illness</h4>\r\n                            <hr/>\r\n                            {/* History of Present Illness */}\r\n                                <Form.Group className=\"mb-3\">\r\n                                <Form.Label>Chief Complaint:</Form.Label>\r\n                                    <Form.Control\r\n                                        type=\"text\"\r\n                                        name=\"chiefComplaint\"\r\n                                        value={findings?.historyOfPresentIllness?.chiefComplaint || ''}\r\n                                        onChange={(e) => {\r\n                                            setFindings({\r\n                                                ...findings,\r\n                                                historyOfPresentIllness: {\r\n                                                    ...findings.historyOfPresentIllness,\r\n                                                    chiefComplaint: e.target.value\r\n                                                }\r\n                                            });\r\n                                        }}\r\n                                    />\r\n                                </Form.Group>\r\n                           \r\n                                <Form.Group className=\"mb-3\">\r\n                                    <Form.Label>Current Symptoms: </Form.Label>\r\n                                    {findings.historyOfPresentIllness.currentSymptoms.map((symptom, index) => (\r\n                                        <Row key={index} className=\"mb-2 align-items-center\">\r\n                                            <Col>\r\n                                                <Form.Control\r\n                                                    type=\"text\"\r\n                                                    value={symptom || ''}\r\n                                                    onChange={(e) => {\r\n                                                        const updatedSymptoms = [...findings.historyOfPresentIllness.currentSymptoms];\r\n                                                        updatedSymptoms[index] = e.target.value;\r\n                                                        setFindings({\r\n                                                            ...findings,\r\n                                                            historyOfPresentIllness: {\r\n                                                                ...findings.historyOfPresentIllness,\r\n                                                                currentSymptoms: updatedSymptoms\r\n                                                            }\r\n                                                        });\r\n                                                    }}\r\n                                                />\r\n                                            </Col>\r\n                                            <Col xs=\"auto\">\r\n                                                <Button\r\n                                                    variant=\"danger\"\r\n                                                    onClick={() => {\r\n                                                        const updatedSymptoms = findings.historyOfPresentIllness.currentSymptoms.filter((_, i) => i !== index);\r\n                                                        setFindings({\r\n                                                            ...findings,\r\n                                                            historyOfPresentIllness: {\r\n                                                                ...findings.historyOfPresentIllness,\r\n                                                                currentSymptoms: updatedSymptoms\r\n                                                            }\r\n                                                        });\r\n                                                    }}\r\n                                                >\r\n                                                    X\r\n                                                </Button>\r\n                                            </Col>\r\n                                        </Row>\r\n                                    ))}\r\n\r\n                                    {/* Add Symptom Button */}\r\n                                    <Link className=\"margin-left\" variant=\"secondary\" onClick={() => {\r\n                                        setFindings({\r\n                                            ...findings,\r\n                                            historyOfPresentIllness: {\r\n                                                ...findings.historyOfPresentIllness,\r\n                                                currentSymptoms: [...findings.historyOfPresentIllness.currentSymptoms, '']\r\n                                            }\r\n                                        });\r\n                                    }}>\r\n                                        Add Symptom\r\n                                    </Link>\r\n                                </Form.Group>\r\n\r\n                                <hr/>\r\n\r\n                            <h4>Vitals</h4>\r\n                            <hr/>\r\n                            <Form onSubmit={handleSubmit}>\r\n                                {/* Vitals */}\r\n                                <Row className=\"mb-2\">\r\n                                    <Form.Group as={Col} className=\"mb-3\">\r\n                                        <Form.Label>Blood Pressure (Systole):</Form.Label>\r\n                                        <Form.Control\r\n                                            type=\"number\"\r\n                                            name=\"systole\"\r\n                                            value={findings?.bloodPressure?.systole || ''}\r\n                                            onChange={handleChange}\r\n                                        />\r\n                                    </Form.Group>\r\n                                    <Form.Group as={Col} className=\"mb-3\">\r\n                                        <Form.Label>Blood Pressure (Diastole):</Form.Label>\r\n                                        <Form.Control\r\n                                            type=\"number\"\r\n                                            name=\"diastole\"\r\n                                            value={findings?.bloodPressure?.diastole || ''}\r\n                                            onChange={handleChange}\r\n                                        />\r\n                                    </Form.Group>\r\n                                </Row>\r\n\r\n\r\n                             \r\n\r\n                                {/* Vitals */}\r\n                                <Row className=\"mb-2\">\r\n                                    <Form.Group as={Col} className=\"mb-3\">\r\n                                        <Form.Label>Respiratory Rate:</Form.Label>\r\n                                        <Form.Control\r\n                                            type=\"number\"\r\n                                            name=\"respiratoryRate\"\r\n                                            value={findings?.respiratoryRate || ''}\r\n                                            onChange={handleChange}\r\n                                        />\r\n                                    </Form.Group>\r\n                                    <Form.Group as={Col} className=\"mb-3\">\r\n                                        <Form.Label>Pulse Rate:</Form.Label>\r\n                                        <Form.Control\r\n                                            type=\"number\"\r\n                                            name=\"pulseRate\"\r\n                                            value={findings?.pulseRate || ''}\r\n                                            onChange={handleChange}\r\n                                        />\r\n                                    </Form.Group>\r\n                                    <Form.Group as={Col} className=\"mb-3\">\r\n                                        <Form.Label>Temperature (°C):</Form.Label>\r\n                                        <Form.Control\r\n                                            type=\"number\"\r\n                                            name=\"temperature\"\r\n                                            value={findings?.temperature || ''}\r\n                                            onChange={handleChange}\r\n                                        />\r\n                                    </Form.Group>\r\n                                </Row>\r\n\r\n                                <Row className=\"mb-2\">\r\n                                    <Form.Group as={Col} className=\"mb-3\">\r\n                                        <Form.Label>Weight (kg):</Form.Label>\r\n                                        <Form.Control\r\n                                            type=\"number\"\r\n                                            name=\"weight\"\r\n                                            value={findings?.weight || ''}\r\n                                            onChange={handleChange}\r\n                                        />\r\n                                    </Form.Group>\r\n                                    <Form.Group as={Col} className=\"mb-3\">\r\n                                        <Form.Label>Height (cm):</Form.Label>\r\n                                        <Form.Control\r\n                                            type=\"number\"\r\n                                            name=\"height\"\r\n                                            value={findings?.height || ''}\r\n                                            onChange={handleChange}\r\n                                        />\r\n                                    </Form.Group>\r\n                                </Row>\r\n\r\n                                <hr/>\r\n                                    <h4>Lifestyle</h4>\r\n                                <hr/>\r\n                                {/* Lifestyle */}\r\n                                <Row>\r\n                              \r\n                                <Form.Group className=\"mb-3\">\r\n                                    <Form.Check\r\n                                        type=\"checkbox\"\r\n                                        label=\"Smoking\"\r\n                                        name=\"smoking\"\r\n                                        checked={findings.lifestyle.smoking}\r\n                                        onChange={handleChange}\r\n                                    />\r\n                                    <Form.Check\r\n                                        type=\"checkbox\"\r\n                                        label=\"Alcohol Consumption\"\r\n                                        name=\"alcoholConsumption\"\r\n                                        checked={findings.lifestyle.alcoholConsumption}\r\n                                        onChange={handleChange}\r\n                                    />\r\n                                </Form.Group>\r\n                                </Row>\r\n                               \r\n\r\n                                {/* Family History */}\r\n                                <hr/>\r\n                                    <h4>Family History</h4>\r\n                                <hr/>\r\n\r\n                                <Form.Group className=\"mb-3\">\r\n                                <Form.Label>Family History (Relation/Condition):</Form.Label>\r\n                                {findings.familyHistory.map((history, index) => (\r\n                                    <Row key={index} className=\"mb-2\">\r\n                                        <Col>\r\n                                            <Form.Control\r\n                                                type=\"text\"\r\n                                                name={`relation-${index}`}\r\n                                                value={history.relation || ''}\r\n                                                onChange={(e) => {\r\n                                                    const updatedFamilyHistory = [...findings.familyHistory];\r\n                                                    updatedFamilyHistory[index].relation = e.target.value;\r\n                                                    setFindings({ ...findings, familyHistory: updatedFamilyHistory });\r\n                                                }}\r\n                                            />\r\n                                        </Col>\r\n                                        <Col>\r\n                                            <Form.Control\r\n                                                type=\"text\"\r\n                                                name={`condition-${index}`}\r\n                                                value={history.condition || ''}\r\n                                                onChange={(e) => {\r\n                                                    const updatedFamilyHistory = [...findings.familyHistory];\r\n                                                    updatedFamilyHistory[index].condition = e.target.value;\r\n                                                    setFindings({ ...findings, familyHistory: updatedFamilyHistory });\r\n                                                }}\r\n                                            />\r\n                                        </Col>\r\n                                    </Row>\r\n                                ))}\r\n                            </Form.Group>\r\n                            <Link variant=\"secondary\" onClick={() => {\r\n                                setFindings({\r\n                                    ...findings,\r\n                                    familyHistory: [...findings.familyHistory, { relation: '', condition: '' }]\r\n                                });\r\n                            }}>Add Family History</Link>\r\n\r\n                            {/* Skin Condition */}\r\n\r\n                            <hr/>\r\n                                    <h4>Skin Condition</h4>\r\n                            <hr/>\r\n                            <Form.Group className=\"mb-3\">\r\n                            <Form.Check\r\n                                type=\"checkbox\"\r\n                                label=\"Rash\"\r\n                                name=\"skinCondition\"\r\n                                value=\"Rash\"\r\n                                checked={(findings?.skinCondition || []).includes('Rash')}\r\n                                onChange={(e) => {\r\n                                    const { value, checked } = e.target;\r\n                                    let updatedConditions = findings.skinCondition || [];\r\n\r\n                                    if (checked) {\r\n                                        updatedConditions.push(value);\r\n                                    } else {\r\n                                        updatedConditions = updatedConditions.filter(condition => condition !== value);\r\n                                    }\r\n\r\n                                    setFindings({ ...findings, skinCondition: updatedConditions });\r\n                                }}\r\n                            />\r\n\r\n                            <Form.Check\r\n                                type=\"checkbox\"\r\n                                label=\"Jaundice\"\r\n                                name=\"skinCondition\"\r\n                                value=\"Jaundice\"\r\n                                checked={(findings?.skinCondition || []).includes('Jaundice')}\r\n                                onChange={(e) => {\r\n                                    const { value, checked } = e.target;\r\n                                    let updatedConditions = findings.skinCondition || [];\r\n\r\n                                    if (checked) {\r\n                                        updatedConditions.push(value);\r\n                                    } else {\r\n                                        updatedConditions = updatedConditions.filter(condition => condition !== value);\r\n                                    }\r\n\r\n                                    setFindings({ ...findings, skinCondition: updatedConditions });\r\n                                }}\r\n                            />\r\n                            <Form.Check\r\n                                type=\"checkbox\"\r\n                                label=\"Dry Skin\"\r\n                                name=\"skinCondition\"\r\n                                value=\"Dry Skin\"\r\n                                checked={(findings?.skinCondition || []).includes('Dry Skin')}\r\n                                onChange={(e) => {\r\n                                    const { value, checked } = e.target;\r\n                                    let updatedConditions = findings.skinCondition || [];\r\n\r\n                                    if (checked) {\r\n                                        updatedConditions.push(value);\r\n                                    } else {\r\n                                        updatedConditions = updatedConditions.filter(condition => condition !== value);\r\n                                    }\r\n\r\n                                    setFindings({ ...findings, skinCondition: updatedConditions });\r\n                                }}\r\n                            />\r\n\r\n                            {/* Checkbox for Other Condition */}\r\n                            <Form.Check\r\n                                type=\"checkbox\"\r\n                                label=\"Other\"\r\n                                name=\"skinCondition\"\r\n                                value=\"Other\"\r\n                                checked={(findings?.skinCondition || []).includes('Other')}\r\n                                onChange={(e) => {\r\n                                    const { value, checked } = e.target;\r\n                                    let updatedConditions = findings.skinCondition || [];\r\n\r\n                                    if (checked) {\r\n                                        updatedConditions.push(value);\r\n                                    } else {\r\n                                        updatedConditions = updatedConditions.filter(condition => condition !== value);\r\n                                    }\r\n\r\n                                    setFindings({ ...findings, skinCondition: updatedConditions });\r\n                                }}\r\n                            />\r\n\r\n                            {/* Text Input for Custom \"Other\" Skin Condition */}\r\n                            {findings?.skinCondition?.includes('Other') && (\r\n                                <Form.Group className=\"mt-2\">\r\n                                    <Form.Label>Specify Other Skin Condition:</Form.Label>\r\n                                    <Form.Control\r\n                                        type=\"text\"\r\n                                        name=\"otherSkinCondition\"\r\n                                        value={findings?.otherSkinCondition || ''}\r\n                                        onChange={(e) => setFindings({ ...findings, otherSkinCondition: e.target.value })}\r\n                                    />\r\n                                </Form.Group>\r\n                            )}\r\n                        </Form.Group>\r\n\r\n                        <hr/>\r\n                                    <h4>Allergies</h4>\r\n                                <hr/>\r\n                        <Form.Group className=\"mb-3\">\r\n            \r\n\r\n                            {/* Predefined Allergies */}\r\n                            <Form.Check\r\n                                type=\"checkbox\"\r\n                                label=\"Peanuts\"\r\n                                name=\"allergy\"\r\n                                value=\"Peanuts\"\r\n                                checked={(findings?.allergy || []).includes('Peanuts')}\r\n                                onChange={(e) => {\r\n                                    const { value, checked } = e.target;\r\n                                    let updatedAllergies = findings.allergy || [];\r\n\r\n                                    if (checked) {\r\n                                        updatedAllergies.push(value);\r\n                                    } else {\r\n                                        updatedAllergies = updatedAllergies.filter(allergy => allergy !== value);\r\n                                    }\r\n\r\n                                    setFindings({ ...findings, allergy: updatedAllergies });\r\n                                }}\r\n                            />\r\n\r\n                            <Form.Check\r\n                                type=\"checkbox\"\r\n                                label=\"Shellfish\"\r\n                                name=\"allergy\"\r\n                                value=\"Shellfish\"\r\n                                checked={(findings?.allergy || []).includes('Shellfish')}\r\n                                onChange={(e) => {\r\n                                    const { value, checked } = e.target;\r\n                                    let updatedAllergies = findings.allergy || [];\r\n\r\n                                    if (checked) {\r\n                                        updatedAllergies.push(value);\r\n                                    } else {\r\n                                        updatedAllergies = updatedAllergies.filter(allergy => allergy !== value);\r\n                                    }\r\n\r\n                                    setFindings({ ...findings, allergy: updatedAllergies });\r\n                                }}\r\n                            />\r\n                            <Form.Check\r\n                                type=\"checkbox\"\r\n                                label=\"Pollen\"\r\n                                name=\"allergy\"\r\n                                value=\"Pollen\"\r\n                                checked={(findings?.allergy || []).includes('Pollen')}\r\n                                onChange={(e) => {\r\n                                    const { value, checked } = e.target;\r\n                                    let updatedAllergies = findings.allergy || [];\r\n\r\n                                    if (checked) {\r\n                                        updatedAllergies.push(value);\r\n                                    } else {\r\n                                        updatedAllergies = updatedAllergies.filter(allergy => allergy !== value);\r\n                                    }\r\n\r\n                                    setFindings({ ...findings, allergy: updatedAllergies });\r\n                                }}\r\n                            />\r\n\r\n                            {/* Checkbox for Other Allergy */}\r\n                            <Form.Check\r\n                                type=\"checkbox\"\r\n                                label=\"Other\"\r\n                                name=\"allergy\"\r\n                                value=\"Other\"\r\n                                checked={(findings?.allergy || []).includes('Other')}\r\n                                onChange={(e) => {\r\n                                    const { value, checked } = e.target;\r\n                                    let updatedAllergies = findings.allergy || [];\r\n\r\n                                    if (checked) {\r\n                                        updatedAllergies.push(value);\r\n                                    } else {\r\n                                        updatedAllergies = updatedAllergies.filter(allergy => allergy !== value);\r\n                                    }\r\n\r\n                                    setFindings({ ...findings, allergy: updatedAllergies });\r\n                                }}\r\n                            />\r\n\r\n                            {/* Text Input for Custom \"Other\" Allergy */}\r\n                            {findings?.allergy?.includes('Other') && (\r\n                                <Form.Group className=\"mt-2\">\r\n                                    <Form.Label>Specify Other Allergy:</Form.Label>\r\n                                    <Form.Control\r\n                                        type=\"text\"\r\n                                        name=\"otherAllergy\"\r\n                                        value={findings?.otherAllergy || ''}\r\n                                        onChange={(e) => setFindings({ ...findings, otherAllergy: e.target.value })}\r\n                                    />\r\n                                </Form.Group>\r\n                            )}\r\n                        </Form.Group>\r\n\r\n                        <hr/>\r\n                                  \r\n\r\n                            <Form.Group className=\"mb-3\">\r\n                                    <Form.Label>Assessment:</Form.Label>\r\n                                    <Form.Control\r\n                                        type=\"text\"\r\n                                        name=\"assessment\"\r\n                                        value={findings.assessment || ''}\r\n                                        onChange={handleChange}\r\n                                    />\r\n                            </Form.Group>\r\n\r\n\r\n\r\n                            <Form.Group className=\"mb-3\">\r\n                                <Form.Label>Interpretation:</Form.Label>\r\n                                <Form.Control\r\n                                    type=\"text\"\r\n                                    name=\"interpretation\"\r\n                                    value={findings?.interpretation || ''}\r\n                                    onChange={handleChange}\r\n                                />\r\n                            </Form.Group>\r\n\r\n                            <Form.Group className=\"mb-3\">\r\n                                <Form.Label>Recommendations:</Form.Label>\r\n                                <Form.Control\r\n                                    type=\"text\"\r\n                                    name=\"recommendations\"\r\n                                    value={findings?.recommendations || ''}\r\n                                    onChange={handleChange}\r\n                                />\r\n                            </Form.Group>\r\n\r\n                       \r\n\r\n\r\n\r\n\r\n\r\n\r\n                                {/* Other Fields */}\r\n                                {/* <Form.Group className=\"mb-3\">\r\n                                    <Form.Label>General Condition:</Form.Label>\r\n                                    <Form.Control\r\n                                        as=\"select\"\r\n                                        name=\"generalCondition\"\r\n                                        value={findings.generalCondition}\r\n                                        onChange={handleChange}\r\n                                    >\r\n                                        <option value=\"Stable\">Stable</option>\r\n                                        <option value=\"Critical\">Critical</option>\r\n                                        <option value=\"Under Observation\">Under Observation</option>\r\n                                        <option value=\"Good\">Good</option>\r\n                                        <option value=\"Fair\">Fair</option>\r\n                                        <option value=\"Poor\">Poor</option>\r\n                                    </Form.Control>\r\n                                </Form.Group> */}\r\n\r\n                                <Form.Group className=\"mb-3\">\r\n                                    <Form.Label>Remarks:</Form.Label>\r\n                                    <Form.Control\r\n                                        type=\"text\"\r\n                                        name=\"remarks\"\r\n                                        value={findings.remarks || ''}\r\n                                        onChange={handleChange}\r\n                                    />\r\n                                </Form.Group>\r\n\r\n\r\n                                \r\n\r\n                                <Button type=\"submit\" variant=\"primary\">Save Findings</Button>\r\n                            </Form>\r\n                        </Card.Body>\r\n                    </Card>\r\n                </Col>\r\n            </Row>\r\n        </Container>\r\n    );\r\n}\r\n\r\nexport default PatientFindings;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}