{"ast":null,"code":"var _jsxFileName = \"E:\\\\School\\\\School\\\\Integrative Programming\\\\medical-appointment\\\\frontend\\\\src\\\\components\\\\practitioner\\\\dashboard\\\\EditPostModal.jsx\",\n  _s = $RefreshSig$();\nimport React, { useState } from \"react\";\nimport { Modal, Button, Form } from \"react-bootstrap\";\nimport ReactQuill from \"react-quill\";\nimport 'react-quill/dist/quill.snow.css';\nimport ImageUpload from \"./ImageUpload\"; // Import image upload component\nimport axios from \"axios\";\nimport { ip } from \"../../../ContentExport\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction EditPostModal({\n  show,\n  handleClose,\n  postContent,\n  setPostContent,\n  postImages,\n  setPostImages,\n  deletedImages,\n  setDeletedImages,\n  did,\n  postId,\n  updatePostInState\n}) {\n  _s();\n  const [loading, setLoading] = useState(false);\n\n  // Function to delete images, now correctly passed down to the ImageUpload component\n  const handleImageDelete = imageToDelete => {\n    setDeletedImages([...deletedImages, imageToDelete]);\n    setPostImages(postImages.filter(image => image !== imageToDelete));\n  };\n  const handleUpdate = async () => {\n    const formData = new FormData();\n    formData.append(\"content\", postContent);\n    postImages.forEach(image => {\n      formData.append(\"images\", image.file ? image.file : image);\n    });\n    formData.append(\"deletedImages\", JSON.stringify(deletedImages));\n    try {\n      setLoading(true);\n      const response = await axios.put(`${ip.address}/doctor/api/post/updatepost/${did}/${postId}`, formData, {\n        headers: {\n          \"Content-Type\": \"multipart/form-data\"\n        }\n      });\n      updatePostInState(postId, response.data.updatedPost);\n      handleClose();\n      setLoading(false);\n    } catch (error) {\n      console.error('Error updating post:', error);\n      setLoading(false);\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(Modal, {\n    show: show,\n    onHide: handleClose,\n    children: [/*#__PURE__*/_jsxDEV(Modal.Header, {\n      closeButton: true,\n      children: /*#__PURE__*/_jsxDEV(Modal.Title, {\n        children: \"Update Post\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 44,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 43,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Modal.Body, {\n      children: /*#__PURE__*/_jsxDEV(Form, {\n        children: [/*#__PURE__*/_jsxDEV(ReactQuill, {\n          value: postContent,\n          onChange: setPostContent\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 48,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(ImageUpload, {\n          postImages: postImages,\n          setPostImages: setPostImages,\n          handleImageDelete: handleImageDelete // Pass the delete function\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 51,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Button, {\n          variant: \"primary\",\n          onClick: handleUpdate,\n          disabled: loading,\n          children: loading ? 'Updating...' : 'Update'\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 57,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 47,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 46,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 42,\n    columnNumber: 5\n  }, this);\n}\n_s(EditPostModal, \"/Rjh5rPqCCqf0XYnTUk9ZNavw3Q=\");\n_c = EditPostModal;\nexport default EditPostModal;\nvar _c;\n$RefreshReg$(_c, \"EditPostModal\");","map":{"version":3,"names":["React","useState","Modal","Button","Form","ReactQuill","ImageUpload","axios","ip","jsxDEV","_jsxDEV","EditPostModal","show","handleClose","postContent","setPostContent","postImages","setPostImages","deletedImages","setDeletedImages","did","postId","updatePostInState","_s","loading","setLoading","handleImageDelete","imageToDelete","filter","image","handleUpdate","formData","FormData","append","forEach","file","JSON","stringify","response","put","address","headers","data","updatedPost","error","console","onHide","children","Header","closeButton","Title","fileName","_jsxFileName","lineNumber","columnNumber","Body","value","onChange","variant","onClick","disabled","_c","$RefreshReg$"],"sources":["E:/School/School/Integrative Programming/medical-appointment/frontend/src/components/practitioner/dashboard/EditPostModal.jsx"],"sourcesContent":["import React, { useState } from \"react\";\r\nimport { Modal, Button, Form } from \"react-bootstrap\";\r\nimport ReactQuill from \"react-quill\";\r\nimport 'react-quill/dist/quill.snow.css';\r\nimport ImageUpload from \"./ImageUpload\"; // Import image upload component\r\nimport axios from \"axios\";\r\nimport { ip } from \"../../../ContentExport\";\r\nfunction EditPostModal({ show, handleClose, postContent, setPostContent, postImages, setPostImages, deletedImages, setDeletedImages, did, postId, updatePostInState }) {\r\n  const [loading, setLoading] = useState(false);\r\n\r\n  // Function to delete images, now correctly passed down to the ImageUpload component\r\n  const handleImageDelete = (imageToDelete) => {\r\n    setDeletedImages([...deletedImages, imageToDelete]);\r\n    setPostImages(postImages.filter(image => image !== imageToDelete));\r\n  };\r\n\r\n  const handleUpdate = async () => {\r\n    const formData = new FormData();\r\n    formData.append(\"content\", postContent);\r\n    postImages.forEach((image) => {\r\n      formData.append(\"images\", image.file ? image.file : image);\r\n    });\r\n    formData.append(\"deletedImages\", JSON.stringify(deletedImages));\r\n\r\n    try {\r\n      setLoading(true);\r\n      const response = await axios.put(\r\n        `${ip.address}/doctor/api/post/updatepost/${did}/${postId}`,\r\n        formData,\r\n        { headers: { \"Content-Type\": \"multipart/form-data\" } }\r\n      );\r\n      updatePostInState(postId, response.data.updatedPost);\r\n      handleClose();\r\n      setLoading(false);\r\n    } catch (error) {\r\n      console.error('Error updating post:', error);\r\n      setLoading(false);\r\n    }\r\n  };\r\n\r\n  return (\r\n    <Modal show={show} onHide={handleClose}>\r\n      <Modal.Header closeButton>\r\n        <Modal.Title>Update Post</Modal.Title>\r\n      </Modal.Header>\r\n      <Modal.Body>\r\n        <Form>\r\n          <ReactQuill value={postContent} onChange={setPostContent} />\r\n\r\n          {/* ImageUpload component now correctly handles deletion */}\r\n          <ImageUpload\r\n            postImages={postImages}\r\n            setPostImages={setPostImages}\r\n            handleImageDelete={handleImageDelete} // Pass the delete function\r\n          />\r\n\r\n          <Button variant=\"primary\" onClick={handleUpdate} disabled={loading}>\r\n            {loading ? 'Updating...' : 'Update'}\r\n          </Button>\r\n        </Form>\r\n      </Modal.Body>\r\n    </Modal>\r\n  );\r\n}\r\n\r\nexport default EditPostModal;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}