{"ast":null,"code":"var _jsxFileName = \"E:\\\\School\\\\School\\\\Integrative Programming\\\\medical-appointment\\\\src\\\\components\\\\staffs\\\\medical secretary\\\\components\\\\Add Patient\\\\Forms\\\\CreatePatientForms.jsx\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from \"react\";\nimport axios from \"axios\";\nimport { Container, Form, Row, Col, Button, Card } from \"react-bootstrap\";\nimport { useNavigate } from \"react-router-dom\";\nimport \"./Styles.css\";\nimport { jsxDEV as _jsxDEV, Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst CreatePatientForms = () => {\n  _s();\n  const navigate = useNavigate();\n  const [ufirstName, setFirstName] = useState(\"\");\n  const [uLastName, setLastName] = useState(\"\");\n  const [uMiddleInitial, setMiddleInitial] = useState(\"\");\n  const [uBirth, setBirth] = useState(\"\");\n  const [uNumber, setNumber] = useState(\"\");\n  const [uGender, setGender] = useState(\"Male\");\n  const [uAge, setAge] = useState(0);\n  const [accountStatus, setAccountStatus] = useState('Unregistered');\n\n  // Address state fields\n  const [street, setStreet] = useState(\"\");\n  const [city, setCity] = useState(\"\");\n  const [state, setState] = useState(\"\");\n  const [zipCode, setZipCode] = useState(\"\");\n  const [country, setCountry] = useState(\"\");\n  const [errors, setErrors] = useState({});\n  const [formSubmitted, setFormSubmitted] = useState(false);\n\n  // Validation functions\n  const validateFirstName = name => !name ? \"First name is required\" : \"\";\n  const validateLastName = name => !name ? \"Last name is required\" : \"\";\n  const validateBirth = birth => !birth ? \"Date of birth is required\" : \"\";\n  const validateNumber = number => {\n    if (!number) return \"Contact number is required\";\n    if (!/^\\d{11}$/.test(number)) return \"Contact number must be exactly 11 digits\";\n    return \"\";\n  };\n  const validateMiddleInitial = initial => {\n    if (initial.length > 1) return \"Middle initial must be 1 character\";\n    return \"\";\n  };\n  const validateZipCode = zip => !zip ? \"Zip code is required\" : \"\";\n  const validateStreet = street => !street ? \"Street is required\" : \"\";\n  const validateCity = city => !city ? \"City is required\" : \"\";\n  const validateState = state => !state ? \"State is required\" : \"\";\n  const validateCountry = country => !country ? \"Country is required\" : \"\";\n\n  // Handle blur to validate fields\n  const handleBlur = (field, value) => {\n    let error = \"\";\n    switch (field) {\n      case \"firstName\":\n        error = validateFirstName(value);\n        break;\n      case \"lastName\":\n        error = validateLastName(value);\n        break;\n      case \"middleInitial\":\n        error = validateMiddleInitial(value);\n        break;\n      case \"birth\":\n        error = validateBirth(value);\n        break;\n      case \"number\":\n        error = validateNumber(value);\n        break;\n      case \"street\":\n        error = validateStreet(value);\n        break;\n      case \"city\":\n        error = validateCity(value);\n        break;\n      case \"state\":\n        error = validateState(value);\n        break;\n      case \"zipCode\":\n        error = validateZipCode(value);\n        break;\n      case \"country\":\n        error = validateCountry(value);\n        break;\n      default:\n        break;\n    }\n    setErrors(prevErrors => ({\n      ...prevErrors,\n      [field]: error\n    }));\n  };\n  const calculateAge = dob => {\n    const birthDate = new Date(dob);\n    const today = new Date();\n    let age = today.getFullYear() - birthDate.getFullYear();\n    const monthDifference = today.getMonth() - birthDate.getMonth();\n    if (monthDifference < 0 || monthDifference === 0 && today.getDate() < birthDate.getDate()) {\n      age--;\n    }\n    return age;\n  };\n  const registerPatient = () => {\n    const currentErrors = {\n      firstName: validateFirstName(ufirstName),\n      lastName: validateLastName(uLastName),\n      middleInitial: validateMiddleInitial(uMiddleInitial),\n      birth: validateBirth(uBirth),\n      number: validateNumber(uNumber),\n      street: validateStreet(street),\n      city: validateCity(city),\n      state: validateState(state),\n      zipCode: validateZipCode(zipCode),\n      country: validateCountry(country)\n    };\n    setErrors(currentErrors);\n    setFormSubmitted(true);\n\n    // If there are no validation errors, proceed to register the patient\n    if (Object.values(currentErrors).every(error => error === \"\")) {\n      const patientUser = {\n        patient_firstName: ufirstName,\n        patient_middleInitial: uMiddleInitial,\n        patient_lastName: uLastName,\n        patient_dob: uBirth,\n        patient_age: uAge,\n        patient_contactNumber: uNumber,\n        patient_gender: uGender,\n        accountStatus: accountStatus,\n        patient_address: {\n          street,\n          city,\n          state,\n          zipCode,\n          country\n        }\n      };\n      axios.post('http://localhost:8000/patient/api/unregistered', patientUser).then(response => {\n        console.log(response);\n        window.alert(\"Successfully registered Patient\");\n        window.location.reload();\n      }).catch(err => {\n        console.log(err);\n      });\n    }\n  };\n  useEffect(() => {\n    if (uBirth) {\n      const age = calculateAge(uBirth);\n      setAge(age);\n    }\n  }, [uBirth]);\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: /*#__PURE__*/_jsxDEV(Card, {\n      className: \"app-box\",\n      children: [/*#__PURE__*/_jsxDEV(Card.Header, {\n        className: \"app-boxtitle\",\n        children: \"Create Patient\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 157,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(Card.Body, {\n        children: /*#__PURE__*/_jsxDEV(Form, {\n          children: [/*#__PURE__*/_jsxDEV(Row, {\n            className: \"mb-3\",\n            children: [/*#__PURE__*/_jsxDEV(Form.Group, {\n              as: Col,\n              controlId: \"formFName\",\n              children: [/*#__PURE__*/_jsxDEV(Form.Label, {\n                children: \"First Name\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 162,\n                columnNumber: 33\n              }, this), /*#__PURE__*/_jsxDEV(Form.Control, {\n                type: \"text\",\n                placeholder: \"Enter First Name\",\n                onBlur: e => handleBlur(\"firstName\", e.target.value),\n                onChange: e => {\n                  setFirstName(e.target.value);\n                  if (formSubmitted) handleBlur(\"firstName\", e.target.value);\n                },\n                isValid: formSubmitted && errors.firstName === \"\" && ufirstName !== \"\",\n                isInvalid: formSubmitted && errors.firstName !== \"\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 163,\n                columnNumber: 33\n              }, this), /*#__PURE__*/_jsxDEV(Form.Control.Feedback, {\n                type: \"invalid\",\n                children: errors.firstName\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 174,\n                columnNumber: 33\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 161,\n              columnNumber: 29\n            }, this), /*#__PURE__*/_jsxDEV(Form.Group, {\n              as: Col,\n              controlId: \"formLName\",\n              children: [/*#__PURE__*/_jsxDEV(Form.Label, {\n                children: \"Last Name\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 177,\n                columnNumber: 33\n              }, this), /*#__PURE__*/_jsxDEV(Form.Control, {\n                type: \"text\",\n                placeholder: \"Enter Last Name\",\n                onBlur: e => handleBlur(\"lastName\", e.target.value),\n                onChange: e => {\n                  setLastName(e.target.value);\n                  if (formSubmitted) handleBlur(\"lastName\", e.target.value);\n                },\n                isValid: formSubmitted && errors.lastName === \"\" && uLastName !== \"\",\n                isInvalid: formSubmitted && errors.lastName !== \"\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 178,\n                columnNumber: 33\n              }, this), /*#__PURE__*/_jsxDEV(Form.Control.Feedback, {\n                type: \"invalid\",\n                children: errors.lastName\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 189,\n                columnNumber: 33\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 176,\n              columnNumber: 29\n            }, this), /*#__PURE__*/_jsxDEV(Form.Group, {\n              as: Col,\n              controlId: \"formMName\",\n              children: [/*#__PURE__*/_jsxDEV(Form.Label, {\n                children: \"Middle Initial\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 192,\n                columnNumber: 33\n              }, this), /*#__PURE__*/_jsxDEV(Form.Control, {\n                type: \"text\",\n                maxLength: 1 // Limit to 1 character\n                ,\n                placeholder: \"Enter Middle Initial\",\n                onBlur: e => handleBlur(\"middleInitial\", e.target.value),\n                onChange: e => {\n                  setMiddleInitial(e.target.value);\n                  if (formSubmitted) handleBlur(\"middleInitial\", e.target.value);\n                },\n                isValid: formSubmitted && errors.middleInitial === \"\" && uMiddleInitial !== \"\",\n                isInvalid: formSubmitted && errors.middleInitial !== \"\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 193,\n                columnNumber: 33\n              }, this), /*#__PURE__*/_jsxDEV(Form.Control.Feedback, {\n                type: \"invalid\",\n                children: errors.middleInitial\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 205,\n                columnNumber: 33\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 191,\n              columnNumber: 29\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 160,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(Row, {\n            children: [/*#__PURE__*/_jsxDEV(Form.Group, {\n              as: Col,\n              className: \"mb-3\",\n              controlId: \"formBirthDate\",\n              children: [/*#__PURE__*/_jsxDEV(Form.Label, {\n                children: \"Birthdate\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 210,\n                columnNumber: 33\n              }, this), /*#__PURE__*/_jsxDEV(Form.Control, {\n                type: \"date\",\n                placeholder: \"Enter Birthdate\",\n                onBlur: e => handleBlur(\"birth\", e.target.value),\n                onChange: e => {\n                  setBirth(e.target.value);\n                  if (formSubmitted) handleBlur(\"birth\", e.target.value);\n                },\n                isValid: formSubmitted && errors.birth === \"\" && uBirth !== \"\",\n                isInvalid: formSubmitted && errors.birth !== \"\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 211,\n                columnNumber: 33\n              }, this), /*#__PURE__*/_jsxDEV(Form.Control.Feedback, {\n                type: \"invalid\",\n                children: errors.birth\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 222,\n                columnNumber: 33\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 209,\n              columnNumber: 29\n            }, this), /*#__PURE__*/_jsxDEV(Form.Group, {\n              as: Col,\n              className: \"mb-3\",\n              controlId: \"formContactNumber\",\n              children: [/*#__PURE__*/_jsxDEV(Form.Label, {\n                children: \"Contact Number\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 225,\n                columnNumber: 33\n              }, this), /*#__PURE__*/_jsxDEV(Form.Control, {\n                type: \"text\",\n                maxLength: 11,\n                placeholder: \"Enter Contact Number\",\n                onBlur: e => handleBlur(\"number\", e.target.value),\n                onChange: e => {\n                  setNumber(e.target.value);\n                  if (formSubmitted) handleBlur(\"number\", e.target.value);\n                },\n                isValid: formSubmitted && errors.number === \"\" && uNumber !== \"\",\n                isInvalid: formSubmitted && errors.number !== \"\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 226,\n                columnNumber: 33\n              }, this), /*#__PURE__*/_jsxDEV(Form.Control.Feedback, {\n                type: \"invalid\",\n                children: errors.number\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 238,\n                columnNumber: 33\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 224,\n              columnNumber: 29\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 208,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(Row, {\n            children: /*#__PURE__*/_jsxDEV(Form.Group, {\n              as: Col,\n              controlId: \"formStreet\",\n              children: [/*#__PURE__*/_jsxDEV(Form.Label, {\n                children: \"Street\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 244,\n                columnNumber: 33\n              }, this), /*#__PURE__*/_jsxDEV(Form.Control, {\n                type: \"text\",\n                placeholder: \"Enter Street\",\n                onBlur: e => handleBlur(\"street\", e.target.value),\n                onChange: e => setStreet(e.target.value),\n                isValid: formSubmitted && errors.street === \"\" && street !== \"\",\n                isInvalid: formSubmitted && errors.street !== \"\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 245,\n                columnNumber: 33\n              }, this), /*#__PURE__*/_jsxDEV(Form.Control.Feedback, {\n                type: \"invalid\",\n                children: errors.street\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 253,\n                columnNumber: 33\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 243,\n              columnNumber: 29\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 242,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(Row, {\n            children: [/*#__PURE__*/_jsxDEV(Form.Group, {\n              as: Col,\n              controlId: \"formCity\",\n              children: [/*#__PURE__*/_jsxDEV(Form.Label, {\n                children: \"City\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 258,\n                columnNumber: 33\n              }, this), /*#__PURE__*/_jsxDEV(Form.Control, {\n                type: \"text\",\n                placeholder: \"Enter City\",\n                onBlur: e => handleBlur(\"city\", e.target.value),\n                onChange: e => setCity(e.target.value),\n                isValid: formSubmitted && errors.city === \"\" && city !== \"\",\n                isInvalid: formSubmitted && errors.city !== \"\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 259,\n                columnNumber: 33\n              }, this), /*#__PURE__*/_jsxDEV(Form.Control.Feedback, {\n                type: \"invalid\",\n                children: errors.city\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 267,\n                columnNumber: 33\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 257,\n              columnNumber: 29\n            }, this), /*#__PURE__*/_jsxDEV(Form.Group, {\n              as: Col,\n              controlId: \"formState\",\n              children: [/*#__PURE__*/_jsxDEV(Form.Label, {\n                children: \"State\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 271,\n                columnNumber: 33\n              }, this), /*#__PURE__*/_jsxDEV(Form.Control, {\n                type: \"text\",\n                placeholder: \"Enter State\",\n                onBlur: e => handleBlur(\"state\", e.target.value),\n                onChange: e => setState(e.target.value),\n                isValid: formSubmitted && errors.state === \"\" && state !== \"\",\n                isInvalid: formSubmitted && errors.state !== \"\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 272,\n                columnNumber: 33\n              }, this), /*#__PURE__*/_jsxDEV(Form.Control.Feedback, {\n                type: \"invalid\",\n                children: errors.state\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 280,\n                columnNumber: 33\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 270,\n              columnNumber: 29\n            }, this), /*#__PURE__*/_jsxDEV(Form.Group, {\n              as: Col,\n              controlId: \"formZipCode\",\n              children: [/*#__PURE__*/_jsxDEV(Form.Label, {\n                children: \"Zip Code\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 284,\n                columnNumber: 33\n              }, this), /*#__PURE__*/_jsxDEV(Form.Control, {\n                type: \"text\",\n                placeholder: \"Enter Zip Code\",\n                onBlur: e => handleBlur(\"zipCode\", e.target.value),\n                onChange: e => setZipCode(e.target.value),\n                isValid: formSubmitted && errors.zipCode === \"\" && zipCode !== \"\",\n                isInvalid: formSubmitted && errors.zipCode !== \"\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 285,\n                columnNumber: 33\n              }, this), /*#__PURE__*/_jsxDEV(Form.Control.Feedback, {\n                type: \"invalid\",\n                children: errors.zipCode\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 293,\n                columnNumber: 33\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 283,\n              columnNumber: 29\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 256,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(Row, {\n            children: /*#__PURE__*/_jsxDEV(Form.Group, {\n              as: Col,\n              controlId: \"formCountry\",\n              children: [/*#__PURE__*/_jsxDEV(Form.Label, {\n                children: \"Country\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 298,\n                columnNumber: 33\n              }, this), /*#__PURE__*/_jsxDEV(Form.Control, {\n                type: \"text\",\n                placeholder: \"Enter Country\",\n                onBlur: e => handleBlur(\"country\", e.target.value),\n                onChange: e => setCountry(e.target.value),\n                isValid: formSubmitted && errors.country === \"\" && country !== \"\",\n                isInvalid: formSubmitted && errors.country !== \"\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 299,\n                columnNumber: 33\n              }, this), /*#__PURE__*/_jsxDEV(Form.Control.Feedback, {\n                type: \"invalid\",\n                children: errors.country\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 307,\n                columnNumber: 33\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 297,\n              columnNumber: 29\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 296,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(Row, {\n            children: /*#__PURE__*/_jsxDEV(Form.Group, {\n              as: Col,\n              controlId: \"formChooseGender\",\n              children: [/*#__PURE__*/_jsxDEV(Form.Label, {\n                children: \"Gender:\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 312,\n                columnNumber: 33\n              }, this), /*#__PURE__*/_jsxDEV(Form.Select, {\n                onChange: e => setGender(e.target.value),\n                defaultValue: \"Male\",\n                children: [/*#__PURE__*/_jsxDEV(\"option\", {\n                  value: \"Male\",\n                  children: \"Male\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 314,\n                  columnNumber: 37\n                }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n                  value: \"Female\",\n                  children: \"Female\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 315,\n                  columnNumber: 37\n                }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n                  value: \"Other\",\n                  children: \"Other\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 316,\n                  columnNumber: 37\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 313,\n                columnNumber: 33\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 311,\n              columnNumber: 29\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 310,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"d-lg-flex justify-content-between align-items-center mt-3\",\n            children: [/*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"d-flex\",\n              children: /*#__PURE__*/_jsxDEV(Button, {\n                onClick: registerPatient,\n                variant: \"primary\",\n                type: \"button\",\n                children: \"Submit\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 322,\n                columnNumber: 33\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 321,\n              columnNumber: 29\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"mb-0\",\n              children: /*#__PURE__*/_jsxDEV(Button, {\n                variant: \"link\",\n                onClick: () => navigate(-1),\n                children: \"Back\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 327,\n                columnNumber: 33\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 326,\n              columnNumber: 29\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 320,\n            columnNumber: 25\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 159,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 158,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 156,\n      columnNumber: 13\n    }, this)\n  }, void 0, false);\n};\n_s(CreatePatientForms, \"ujMl2fBMR/ZIlmRDxotIl9BuV2E=\", false, function () {\n  return [useNavigate];\n});\n_c = CreatePatientForms;\nexport default CreatePatientForms;\nvar _c;\n$RefreshReg$(_c, \"CreatePatientForms\");","map":{"version":3,"names":["React","useState","useEffect","axios","Container","Form","Row","Col","Button","Card","useNavigate","jsxDEV","_jsxDEV","Fragment","_Fragment","CreatePatientForms","_s","navigate","ufirstName","setFirstName","uLastName","setLastName","uMiddleInitial","setMiddleInitial","uBirth","setBirth","uNumber","setNumber","uGender","setGender","uAge","setAge","accountStatus","setAccountStatus","street","setStreet","city","setCity","state","setState","zipCode","setZipCode","country","setCountry","errors","setErrors","formSubmitted","setFormSubmitted","validateFirstName","name","validateLastName","validateBirth","birth","validateNumber","number","test","validateMiddleInitial","initial","length","validateZipCode","zip","validateStreet","validateCity","validateState","validateCountry","handleBlur","field","value","error","prevErrors","calculateAge","dob","birthDate","Date","today","age","getFullYear","monthDifference","getMonth","getDate","registerPatient","currentErrors","firstName","lastName","middleInitial","Object","values","every","patientUser","patient_firstName","patient_middleInitial","patient_lastName","patient_dob","patient_age","patient_contactNumber","patient_gender","patient_address","post","then","response","console","log","window","alert","location","reload","catch","err","children","className","Header","fileName","_jsxFileName","lineNumber","columnNumber","Body","Group","as","controlId","Label","Control","type","placeholder","onBlur","e","target","onChange","isValid","isInvalid","Feedback","maxLength","Select","defaultValue","onClick","variant","_c","$RefreshReg$"],"sources":["E:/School/School/Integrative Programming/medical-appointment/src/components/staffs/medical secretary/components/Add Patient/Forms/CreatePatientForms.jsx"],"sourcesContent":["import React, { useState, useEffect } from \"react\";\r\nimport axios from \"axios\";\r\nimport { Container, Form, Row, Col, Button, Card } from \"react-bootstrap\";\r\nimport { useNavigate } from \"react-router-dom\";\r\nimport \"./Styles.css\";\r\n\r\nconst CreatePatientForms = () => {\r\n    const navigate = useNavigate();\r\n    const [ufirstName, setFirstName] = useState(\"\");\r\n    const [uLastName, setLastName] = useState(\"\");\r\n    const [uMiddleInitial, setMiddleInitial] = useState(\"\");\r\n    const [uBirth, setBirth] = useState(\"\");\r\n    const [uNumber, setNumber] = useState(\"\");\r\n    const [uGender, setGender] = useState(\"Male\");\r\n    const [uAge, setAge] = useState(0);\r\n    const [accountStatus, setAccountStatus] = useState('Unregistered');\r\n    \r\n    // Address state fields\r\n    const [street, setStreet] = useState(\"\");\r\n    const [city, setCity] = useState(\"\");\r\n    const [state, setState] = useState(\"\");\r\n    const [zipCode, setZipCode] = useState(\"\");\r\n    const [country, setCountry] = useState(\"\");\r\n    \r\n    const [errors, setErrors] = useState({});\r\n    const [formSubmitted, setFormSubmitted] = useState(false);\r\n\r\n    // Validation functions\r\n    const validateFirstName = (name) => !name ? \"First name is required\" : \"\";\r\n    const validateLastName = (name) => !name ? \"Last name is required\" : \"\";\r\n    const validateBirth = (birth) => !birth ? \"Date of birth is required\" : \"\";\r\n    const validateNumber = (number) => {\r\n        if (!number) return \"Contact number is required\";\r\n        if (!/^\\d{11}$/.test(number)) return \"Contact number must be exactly 11 digits\";\r\n        return \"\";\r\n    };\r\n    const validateMiddleInitial = (initial) => {\r\n        if (initial.length > 1) return \"Middle initial must be 1 character\";\r\n        return \"\";\r\n    };\r\n    const validateZipCode = (zip) => !zip ? \"Zip code is required\" : \"\";\r\n    const validateStreet = (street) => !street ? \"Street is required\" : \"\";\r\n    const validateCity = (city) => !city ? \"City is required\" : \"\";\r\n    const validateState = (state) => !state ? \"State is required\" : \"\";\r\n    const validateCountry = (country) => !country ? \"Country is required\" : \"\";\r\n\r\n    // Handle blur to validate fields\r\n    const handleBlur = (field, value) => {\r\n        let error = \"\";\r\n        switch (field) {\r\n            case \"firstName\":\r\n                error = validateFirstName(value);\r\n                break;\r\n            case \"lastName\":\r\n                error = validateLastName(value);\r\n                break;\r\n            case \"middleInitial\":\r\n                error = validateMiddleInitial(value);\r\n                break;\r\n            case \"birth\":\r\n                error = validateBirth(value);\r\n                break;\r\n            case \"number\":\r\n                error = validateNumber(value);\r\n                break;\r\n            case \"street\":\r\n                error = validateStreet(value);\r\n                break;\r\n            case \"city\":\r\n                error = validateCity(value);\r\n                break;\r\n            case \"state\":\r\n                error = validateState(value);\r\n                break;\r\n            case \"zipCode\":\r\n                error = validateZipCode(value);\r\n                break;\r\n            case \"country\":\r\n                error = validateCountry(value);\r\n                break;\r\n            default:\r\n                break;\r\n        }\r\n        setErrors((prevErrors) => ({ ...prevErrors, [field]: error }));\r\n    };\r\n\r\n    const calculateAge = (dob) => {\r\n        const birthDate = new Date(dob);\r\n        const today = new Date();\r\n        let age = today.getFullYear() - birthDate.getFullYear();\r\n        const monthDifference = today.getMonth() - birthDate.getMonth();\r\n        if (monthDifference < 0 || (monthDifference === 0 && today.getDate() < birthDate.getDate())) {\r\n            age--;\r\n        }\r\n        return age;\r\n    };\r\n\r\n    const registerPatient = () => {\r\n        const currentErrors = {\r\n            firstName: validateFirstName(ufirstName),\r\n            lastName: validateLastName(uLastName),\r\n            middleInitial: validateMiddleInitial(uMiddleInitial),\r\n            birth: validateBirth(uBirth),\r\n            number: validateNumber(uNumber),\r\n            street: validateStreet(street),\r\n            city: validateCity(city),\r\n            state: validateState(state),\r\n            zipCode: validateZipCode(zipCode),\r\n            country: validateCountry(country),\r\n        };\r\n\r\n        setErrors(currentErrors);\r\n        setFormSubmitted(true);\r\n\r\n        // If there are no validation errors, proceed to register the patient\r\n        if (Object.values(currentErrors).every((error) => error === \"\")) {\r\n            const patientUser = {\r\n                patient_firstName: ufirstName,\r\n                patient_middleInitial: uMiddleInitial,\r\n                patient_lastName: uLastName,\r\n                patient_dob: uBirth,\r\n                patient_age: uAge,\r\n                patient_contactNumber: uNumber,\r\n                patient_gender: uGender,\r\n                accountStatus: accountStatus,\r\n                patient_address: {\r\n                    street,\r\n                    city,\r\n                    state,\r\n                    zipCode,\r\n                    country\r\n                }\r\n            };\r\n\r\n            axios.post('http://localhost:8000/patient/api/unregistered', patientUser)\r\n                .then((response) => {\r\n                    console.log(response);\r\n                    window.alert(\"Successfully registered Patient\");\r\n                    window.location.reload();\r\n                })\r\n                .catch((err) => {\r\n                    console.log(err);\r\n                });\r\n        }\r\n    };\r\n\r\n    useEffect(() => {\r\n        if (uBirth) {\r\n            const age = calculateAge(uBirth);\r\n            setAge(age);\r\n        }\r\n    }, [uBirth]);\r\n\r\n    return (\r\n        <>\r\n            <Card className=\"app-box\">\r\n                <Card.Header className=\"app-boxtitle\">Create Patient</Card.Header>\r\n                <Card.Body>\r\n                    <Form>\r\n                        <Row className=\"mb-3\">\r\n                            <Form.Group as={Col} controlId=\"formFName\">\r\n                                <Form.Label>First Name</Form.Label>\r\n                                <Form.Control\r\n                                    type=\"text\"\r\n                                    placeholder=\"Enter First Name\"\r\n                                    onBlur={(e) => handleBlur(\"firstName\", e.target.value)}\r\n                                    onChange={(e) => {\r\n                                        setFirstName(e.target.value);\r\n                                        if (formSubmitted) handleBlur(\"firstName\", e.target.value);\r\n                                    }}\r\n                                    isValid={formSubmitted && errors.firstName === \"\" && ufirstName !== \"\"}\r\n                                    isInvalid={formSubmitted && errors.firstName !== \"\"}\r\n                                />\r\n                                <Form.Control.Feedback type=\"invalid\">{errors.firstName}</Form.Control.Feedback>\r\n                            </Form.Group>\r\n                            <Form.Group as={Col} controlId=\"formLName\">\r\n                                <Form.Label>Last Name</Form.Label>\r\n                                <Form.Control\r\n                                    type=\"text\"\r\n                                    placeholder=\"Enter Last Name\"\r\n                                    onBlur={(e) => handleBlur(\"lastName\", e.target.value)}\r\n                                    onChange={(e) => {\r\n                                        setLastName(e.target.value);\r\n                                        if (formSubmitted) handleBlur(\"lastName\", e.target.value);\r\n                                    }}\r\n                                    isValid={formSubmitted && errors.lastName === \"\" && uLastName !== \"\"}\r\n                                    isInvalid={formSubmitted && errors.lastName !== \"\"}\r\n                                />\r\n                                <Form.Control.Feedback type=\"invalid\">{errors.lastName}</Form.Control.Feedback>\r\n                            </Form.Group>\r\n                            <Form.Group as={Col} controlId=\"formMName\">\r\n                                <Form.Label>Middle Initial</Form.Label>\r\n                                <Form.Control\r\n                                    type=\"text\"\r\n                                    maxLength={1} // Limit to 1 character\r\n                                    placeholder=\"Enter Middle Initial\"\r\n                                    onBlur={(e) => handleBlur(\"middleInitial\", e.target.value)}\r\n                                    onChange={(e) => {\r\n                                        setMiddleInitial(e.target.value);\r\n                                        if (formSubmitted) handleBlur(\"middleInitial\", e.target.value);\r\n                                    }}\r\n                                    isValid={formSubmitted && errors.middleInitial === \"\" && uMiddleInitial !== \"\"}\r\n                                    isInvalid={formSubmitted && errors.middleInitial !== \"\"}\r\n                                />\r\n                                <Form.Control.Feedback type=\"invalid\">{errors.middleInitial}</Form.Control.Feedback>\r\n                            </Form.Group>\r\n                        </Row>\r\n                        <Row>\r\n                            <Form.Group as={Col} className=\"mb-3\" controlId=\"formBirthDate\">\r\n                                <Form.Label>Birthdate</Form.Label>\r\n                                <Form.Control\r\n                                    type=\"date\"\r\n                                    placeholder=\"Enter Birthdate\"\r\n                                    onBlur={(e) => handleBlur(\"birth\", e.target.value)}\r\n                                    onChange={(e) => {\r\n                                        setBirth(e.target.value);\r\n                                        if (formSubmitted) handleBlur(\"birth\", e.target.value);\r\n                                    }}\r\n                                    isValid={formSubmitted && errors.birth === \"\" && uBirth !== \"\"}\r\n                                    isInvalid={formSubmitted && errors.birth !== \"\"}\r\n                                />\r\n                                <Form.Control.Feedback type=\"invalid\">{errors.birth}</Form.Control.Feedback>\r\n                            </Form.Group>\r\n                            <Form.Group as={Col} className=\"mb-3\" controlId=\"formContactNumber\">\r\n                                <Form.Label>Contact Number</Form.Label>\r\n                                <Form.Control\r\n                                    type=\"text\"\r\n                                    maxLength={11}\r\n                                    placeholder=\"Enter Contact Number\"\r\n                                    onBlur={(e) => handleBlur(\"number\", e.target.value)}\r\n                                    onChange={(e) => {\r\n                                        setNumber(e.target.value);\r\n                                        if (formSubmitted) handleBlur(\"number\", e.target.value);\r\n                                    }}\r\n                                    isValid={formSubmitted && errors.number === \"\" && uNumber !== \"\"}\r\n                                    isInvalid={formSubmitted && errors.number !== \"\"}\r\n                                />\r\n                                <Form.Control.Feedback type=\"invalid\">{errors.number}</Form.Control.Feedback>\r\n                            </Form.Group>\r\n                        </Row>\r\n                        {/* Address Section */}\r\n                        <Row>\r\n                            <Form.Group as={Col} controlId=\"formStreet\">\r\n                                <Form.Label>Street</Form.Label>\r\n                                <Form.Control\r\n                                    type=\"text\"\r\n                                    placeholder=\"Enter Street\"\r\n                                    onBlur={(e) => handleBlur(\"street\", e.target.value)}\r\n                                    onChange={(e) => setStreet(e.target.value)}\r\n                                    isValid={formSubmitted && errors.street === \"\" && street !== \"\"}\r\n                                    isInvalid={formSubmitted && errors.street !== \"\"}\r\n                                />\r\n                                <Form.Control.Feedback type=\"invalid\">{errors.street}</Form.Control.Feedback>\r\n                            </Form.Group>\r\n                        </Row>\r\n                        <Row>\r\n                            <Form.Group as={Col} controlId=\"formCity\">\r\n                                <Form.Label>City</Form.Label>\r\n                                <Form.Control\r\n                                    type=\"text\"\r\n                                    placeholder=\"Enter City\"\r\n                                    onBlur={(e) => handleBlur(\"city\", e.target.value)}\r\n                                    onChange={(e) => setCity(e.target.value)}\r\n                                    isValid={formSubmitted && errors.city === \"\" && city !== \"\"}\r\n                                    isInvalid={formSubmitted && errors.city !== \"\"}\r\n                                />\r\n                                <Form.Control.Feedback type=\"invalid\">{errors.city}</Form.Control.Feedback>\r\n                            </Form.Group>\r\n\r\n                            <Form.Group as={Col} controlId=\"formState\">\r\n                                <Form.Label>State</Form.Label>\r\n                                <Form.Control\r\n                                    type=\"text\"\r\n                                    placeholder=\"Enter State\"\r\n                                    onBlur={(e) => handleBlur(\"state\", e.target.value)}\r\n                                    onChange={(e) => setState(e.target.value)}\r\n                                    isValid={formSubmitted && errors.state === \"\" && state !== \"\"}\r\n                                    isInvalid={formSubmitted && errors.state !== \"\"}\r\n                                />\r\n                                <Form.Control.Feedback type=\"invalid\">{errors.state}</Form.Control.Feedback>\r\n                            </Form.Group>\r\n\r\n                            <Form.Group as={Col} controlId=\"formZipCode\">\r\n                                <Form.Label>Zip Code</Form.Label>\r\n                                <Form.Control\r\n                                    type=\"text\"\r\n                                    placeholder=\"Enter Zip Code\"\r\n                                    onBlur={(e) => handleBlur(\"zipCode\", e.target.value)}\r\n                                    onChange={(e) => setZipCode(e.target.value)}\r\n                                    isValid={formSubmitted && errors.zipCode === \"\" && zipCode !== \"\"}\r\n                                    isInvalid={formSubmitted && errors.zipCode !== \"\"}\r\n                                />\r\n                                <Form.Control.Feedback type=\"invalid\">{errors.zipCode}</Form.Control.Feedback>\r\n                            </Form.Group>\r\n                        </Row>\r\n                        <Row>\r\n                            <Form.Group as={Col} controlId=\"formCountry\">\r\n                                <Form.Label>Country</Form.Label>\r\n                                <Form.Control\r\n                                    type=\"text\"\r\n                                    placeholder=\"Enter Country\"\r\n                                    onBlur={(e) => handleBlur(\"country\", e.target.value)}\r\n                                    onChange={(e) => setCountry(e.target.value)}\r\n                                    isValid={formSubmitted && errors.country === \"\" && country !== \"\"}\r\n                                    isInvalid={formSubmitted && errors.country !== \"\"}\r\n                                />\r\n                                <Form.Control.Feedback type=\"invalid\">{errors.country}</Form.Control.Feedback>\r\n                            </Form.Group>\r\n                        </Row>\r\n                        <Row>\r\n                            <Form.Group as={Col} controlId=\"formChooseGender\">\r\n                                <Form.Label>Gender:</Form.Label>\r\n                                <Form.Select onChange={(e) => setGender(e.target.value)} defaultValue=\"Male\">\r\n                                    <option value=\"Male\">Male</option>\r\n                                    <option value=\"Female\">Female</option>\r\n                                    <option value=\"Other\">Other</option>\r\n                                </Form.Select>\r\n                            </Form.Group>\r\n                        </Row>\r\n                        <div className=\"d-lg-flex justify-content-between align-items-center mt-3\">\r\n                            <div className=\"d-flex\">\r\n                                <Button onClick={registerPatient} variant=\"primary\" type=\"button\">\r\n                                    Submit\r\n                                </Button>\r\n                            </div>\r\n                            <div className=\"mb-0\">\r\n                                <Button variant=\"link\" onClick={() => navigate(-1)}>Back</Button>\r\n                            </div>\r\n                        </div>\r\n                    </Form>\r\n                </Card.Body>\r\n            </Card>\r\n        </>\r\n    );\r\n};\r\n\r\nexport default CreatePatientForms;\r\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,QAAQ,EAAEC,SAAS,QAAQ,OAAO;AAClD,OAAOC,KAAK,MAAM,OAAO;AACzB,SAASC,SAAS,EAAEC,IAAI,EAAEC,GAAG,EAAEC,GAAG,EAAEC,MAAM,EAAEC,IAAI,QAAQ,iBAAiB;AACzE,SAASC,WAAW,QAAQ,kBAAkB;AAC9C,OAAO,cAAc;AAAC,SAAAC,MAAA,IAAAC,OAAA,EAAAC,QAAA,IAAAC,SAAA;AAEtB,MAAMC,kBAAkB,GAAGA,CAAA,KAAM;EAAAC,EAAA;EAC7B,MAAMC,QAAQ,GAAGP,WAAW,CAAC,CAAC;EAC9B,MAAM,CAACQ,UAAU,EAAEC,YAAY,CAAC,GAAGlB,QAAQ,CAAC,EAAE,CAAC;EAC/C,MAAM,CAACmB,SAAS,EAAEC,WAAW,CAAC,GAAGpB,QAAQ,CAAC,EAAE,CAAC;EAC7C,MAAM,CAACqB,cAAc,EAAEC,gBAAgB,CAAC,GAAGtB,QAAQ,CAAC,EAAE,CAAC;EACvD,MAAM,CAACuB,MAAM,EAAEC,QAAQ,CAAC,GAAGxB,QAAQ,CAAC,EAAE,CAAC;EACvC,MAAM,CAACyB,OAAO,EAAEC,SAAS,CAAC,GAAG1B,QAAQ,CAAC,EAAE,CAAC;EACzC,MAAM,CAAC2B,OAAO,EAAEC,SAAS,CAAC,GAAG5B,QAAQ,CAAC,MAAM,CAAC;EAC7C,MAAM,CAAC6B,IAAI,EAAEC,MAAM,CAAC,GAAG9B,QAAQ,CAAC,CAAC,CAAC;EAClC,MAAM,CAAC+B,aAAa,EAAEC,gBAAgB,CAAC,GAAGhC,QAAQ,CAAC,cAAc,CAAC;;EAElE;EACA,MAAM,CAACiC,MAAM,EAAEC,SAAS,CAAC,GAAGlC,QAAQ,CAAC,EAAE,CAAC;EACxC,MAAM,CAACmC,IAAI,EAAEC,OAAO,CAAC,GAAGpC,QAAQ,CAAC,EAAE,CAAC;EACpC,MAAM,CAACqC,KAAK,EAAEC,QAAQ,CAAC,GAAGtC,QAAQ,CAAC,EAAE,CAAC;EACtC,MAAM,CAACuC,OAAO,EAAEC,UAAU,CAAC,GAAGxC,QAAQ,CAAC,EAAE,CAAC;EAC1C,MAAM,CAACyC,OAAO,EAAEC,UAAU,CAAC,GAAG1C,QAAQ,CAAC,EAAE,CAAC;EAE1C,MAAM,CAAC2C,MAAM,EAAEC,SAAS,CAAC,GAAG5C,QAAQ,CAAC,CAAC,CAAC,CAAC;EACxC,MAAM,CAAC6C,aAAa,EAAEC,gBAAgB,CAAC,GAAG9C,QAAQ,CAAC,KAAK,CAAC;;EAEzD;EACA,MAAM+C,iBAAiB,GAAIC,IAAI,IAAK,CAACA,IAAI,GAAG,wBAAwB,GAAG,EAAE;EACzE,MAAMC,gBAAgB,GAAID,IAAI,IAAK,CAACA,IAAI,GAAG,uBAAuB,GAAG,EAAE;EACvE,MAAME,aAAa,GAAIC,KAAK,IAAK,CAACA,KAAK,GAAG,2BAA2B,GAAG,EAAE;EAC1E,MAAMC,cAAc,GAAIC,MAAM,IAAK;IAC/B,IAAI,CAACA,MAAM,EAAE,OAAO,4BAA4B;IAChD,IAAI,CAAC,UAAU,CAACC,IAAI,CAACD,MAAM,CAAC,EAAE,OAAO,0CAA0C;IAC/E,OAAO,EAAE;EACb,CAAC;EACD,MAAME,qBAAqB,GAAIC,OAAO,IAAK;IACvC,IAAIA,OAAO,CAACC,MAAM,GAAG,CAAC,EAAE,OAAO,oCAAoC;IACnE,OAAO,EAAE;EACb,CAAC;EACD,MAAMC,eAAe,GAAIC,GAAG,IAAK,CAACA,GAAG,GAAG,sBAAsB,GAAG,EAAE;EACnE,MAAMC,cAAc,GAAI3B,MAAM,IAAK,CAACA,MAAM,GAAG,oBAAoB,GAAG,EAAE;EACtE,MAAM4B,YAAY,GAAI1B,IAAI,IAAK,CAACA,IAAI,GAAG,kBAAkB,GAAG,EAAE;EAC9D,MAAM2B,aAAa,GAAIzB,KAAK,IAAK,CAACA,KAAK,GAAG,mBAAmB,GAAG,EAAE;EAClE,MAAM0B,eAAe,GAAItB,OAAO,IAAK,CAACA,OAAO,GAAG,qBAAqB,GAAG,EAAE;;EAE1E;EACA,MAAMuB,UAAU,GAAGA,CAACC,KAAK,EAAEC,KAAK,KAAK;IACjC,IAAIC,KAAK,GAAG,EAAE;IACd,QAAQF,KAAK;MACT,KAAK,WAAW;QACZE,KAAK,GAAGpB,iBAAiB,CAACmB,KAAK,CAAC;QAChC;MACJ,KAAK,UAAU;QACXC,KAAK,GAAGlB,gBAAgB,CAACiB,KAAK,CAAC;QAC/B;MACJ,KAAK,eAAe;QAChBC,KAAK,GAAGZ,qBAAqB,CAACW,KAAK,CAAC;QACpC;MACJ,KAAK,OAAO;QACRC,KAAK,GAAGjB,aAAa,CAACgB,KAAK,CAAC;QAC5B;MACJ,KAAK,QAAQ;QACTC,KAAK,GAAGf,cAAc,CAACc,KAAK,CAAC;QAC7B;MACJ,KAAK,QAAQ;QACTC,KAAK,GAAGP,cAAc,CAACM,KAAK,CAAC;QAC7B;MACJ,KAAK,MAAM;QACPC,KAAK,GAAGN,YAAY,CAACK,KAAK,CAAC;QAC3B;MACJ,KAAK,OAAO;QACRC,KAAK,GAAGL,aAAa,CAACI,KAAK,CAAC;QAC5B;MACJ,KAAK,SAAS;QACVC,KAAK,GAAGT,eAAe,CAACQ,KAAK,CAAC;QAC9B;MACJ,KAAK,SAAS;QACVC,KAAK,GAAGJ,eAAe,CAACG,KAAK,CAAC;QAC9B;MACJ;QACI;IACR;IACAtB,SAAS,CAAEwB,UAAU,KAAM;MAAE,GAAGA,UAAU;MAAE,CAACH,KAAK,GAAGE;IAAM,CAAC,CAAC,CAAC;EAClE,CAAC;EAED,MAAME,YAAY,GAAIC,GAAG,IAAK;IAC1B,MAAMC,SAAS,GAAG,IAAIC,IAAI,CAACF,GAAG,CAAC;IAC/B,MAAMG,KAAK,GAAG,IAAID,IAAI,CAAC,CAAC;IACxB,IAAIE,GAAG,GAAGD,KAAK,CAACE,WAAW,CAAC,CAAC,GAAGJ,SAAS,CAACI,WAAW,CAAC,CAAC;IACvD,MAAMC,eAAe,GAAGH,KAAK,CAACI,QAAQ,CAAC,CAAC,GAAGN,SAAS,CAACM,QAAQ,CAAC,CAAC;IAC/D,IAAID,eAAe,GAAG,CAAC,IAAKA,eAAe,KAAK,CAAC,IAAIH,KAAK,CAACK,OAAO,CAAC,CAAC,GAAGP,SAAS,CAACO,OAAO,CAAC,CAAE,EAAE;MACzFJ,GAAG,EAAE;IACT;IACA,OAAOA,GAAG;EACd,CAAC;EAED,MAAMK,eAAe,GAAGA,CAAA,KAAM;IAC1B,MAAMC,aAAa,GAAG;MAClBC,SAAS,EAAElC,iBAAiB,CAAC9B,UAAU,CAAC;MACxCiE,QAAQ,EAAEjC,gBAAgB,CAAC9B,SAAS,CAAC;MACrCgE,aAAa,EAAE5B,qBAAqB,CAAClC,cAAc,CAAC;MACpD8B,KAAK,EAAED,aAAa,CAAC3B,MAAM,CAAC;MAC5B8B,MAAM,EAAED,cAAc,CAAC3B,OAAO,CAAC;MAC/BQ,MAAM,EAAE2B,cAAc,CAAC3B,MAAM,CAAC;MAC9BE,IAAI,EAAE0B,YAAY,CAAC1B,IAAI,CAAC;MACxBE,KAAK,EAAEyB,aAAa,CAACzB,KAAK,CAAC;MAC3BE,OAAO,EAAEmB,eAAe,CAACnB,OAAO,CAAC;MACjCE,OAAO,EAAEsB,eAAe,CAACtB,OAAO;IACpC,CAAC;IAEDG,SAAS,CAACoC,aAAa,CAAC;IACxBlC,gBAAgB,CAAC,IAAI,CAAC;;IAEtB;IACA,IAAIsC,MAAM,CAACC,MAAM,CAACL,aAAa,CAAC,CAACM,KAAK,CAAEnB,KAAK,IAAKA,KAAK,KAAK,EAAE,CAAC,EAAE;MAC7D,MAAMoB,WAAW,GAAG;QAChBC,iBAAiB,EAAEvE,UAAU;QAC7BwE,qBAAqB,EAAEpE,cAAc;QACrCqE,gBAAgB,EAAEvE,SAAS;QAC3BwE,WAAW,EAAEpE,MAAM;QACnBqE,WAAW,EAAE/D,IAAI;QACjBgE,qBAAqB,EAAEpE,OAAO;QAC9BqE,cAAc,EAAEnE,OAAO;QACvBI,aAAa,EAAEA,aAAa;QAC5BgE,eAAe,EAAE;UACb9D,MAAM;UACNE,IAAI;UACJE,KAAK;UACLE,OAAO;UACPE;QACJ;MACJ,CAAC;MAEDvC,KAAK,CAAC8F,IAAI,CAAC,gDAAgD,EAAET,WAAW,CAAC,CACpEU,IAAI,CAAEC,QAAQ,IAAK;QAChBC,OAAO,CAACC,GAAG,CAACF,QAAQ,CAAC;QACrBG,MAAM,CAACC,KAAK,CAAC,iCAAiC,CAAC;QAC/CD,MAAM,CAACE,QAAQ,CAACC,MAAM,CAAC,CAAC;MAC5B,CAAC,CAAC,CACDC,KAAK,CAAEC,GAAG,IAAK;QACZP,OAAO,CAACC,GAAG,CAACM,GAAG,CAAC;MACpB,CAAC,CAAC;IACV;EACJ,CAAC;EAEDzG,SAAS,CAAC,MAAM;IACZ,IAAIsB,MAAM,EAAE;MACR,MAAMmD,GAAG,GAAGL,YAAY,CAAC9C,MAAM,CAAC;MAChCO,MAAM,CAAC4C,GAAG,CAAC;IACf;EACJ,CAAC,EAAE,CAACnD,MAAM,CAAC,CAAC;EAEZ,oBACIZ,OAAA,CAAAE,SAAA;IAAA8F,QAAA,eACIhG,OAAA,CAACH,IAAI;MAACoG,SAAS,EAAC,SAAS;MAAAD,QAAA,gBACrBhG,OAAA,CAACH,IAAI,CAACqG,MAAM;QAACD,SAAS,EAAC,cAAc;QAAAD,QAAA,EAAC;MAAc;QAAAG,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAa,CAAC,eAClEtG,OAAA,CAACH,IAAI,CAAC0G,IAAI;QAAAP,QAAA,eACNhG,OAAA,CAACP,IAAI;UAAAuG,QAAA,gBACDhG,OAAA,CAACN,GAAG;YAACuG,SAAS,EAAC,MAAM;YAAAD,QAAA,gBACjBhG,OAAA,CAACP,IAAI,CAAC+G,KAAK;cAACC,EAAE,EAAE9G,GAAI;cAAC+G,SAAS,EAAC,WAAW;cAAAV,QAAA,gBACtChG,OAAA,CAACP,IAAI,CAACkH,KAAK;gBAAAX,QAAA,EAAC;cAAU;gBAAAG,QAAA,EAAAC,YAAA;gBAAAC,UAAA;gBAAAC,YAAA;cAAA,OAAY,CAAC,eACnCtG,OAAA,CAACP,IAAI,CAACmH,OAAO;gBACTC,IAAI,EAAC,MAAM;gBACXC,WAAW,EAAC,kBAAkB;gBAC9BC,MAAM,EAAGC,CAAC,IAAK3D,UAAU,CAAC,WAAW,EAAE2D,CAAC,CAACC,MAAM,CAAC1D,KAAK,CAAE;gBACvD2D,QAAQ,EAAGF,CAAC,IAAK;kBACbzG,YAAY,CAACyG,CAAC,CAACC,MAAM,CAAC1D,KAAK,CAAC;kBAC5B,IAAIrB,aAAa,EAAEmB,UAAU,CAAC,WAAW,EAAE2D,CAAC,CAACC,MAAM,CAAC1D,KAAK,CAAC;gBAC9D,CAAE;gBACF4D,OAAO,EAAEjF,aAAa,IAAIF,MAAM,CAACsC,SAAS,KAAK,EAAE,IAAIhE,UAAU,KAAK,EAAG;gBACvE8G,SAAS,EAAElF,aAAa,IAAIF,MAAM,CAACsC,SAAS,KAAK;cAAG;gBAAA6B,QAAA,EAAAC,YAAA;gBAAAC,UAAA;gBAAAC,YAAA;cAAA,OACvD,CAAC,eACFtG,OAAA,CAACP,IAAI,CAACmH,OAAO,CAACS,QAAQ;gBAACR,IAAI,EAAC,SAAS;gBAAAb,QAAA,EAAEhE,MAAM,CAACsC;cAAS;gBAAA6B,QAAA,EAAAC,YAAA;gBAAAC,UAAA;gBAAAC,YAAA;cAAA,OAAwB,CAAC;YAAA;cAAAH,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OACxE,CAAC,eACbtG,OAAA,CAACP,IAAI,CAAC+G,KAAK;cAACC,EAAE,EAAE9G,GAAI;cAAC+G,SAAS,EAAC,WAAW;cAAAV,QAAA,gBACtChG,OAAA,CAACP,IAAI,CAACkH,KAAK;gBAAAX,QAAA,EAAC;cAAS;gBAAAG,QAAA,EAAAC,YAAA;gBAAAC,UAAA;gBAAAC,YAAA;cAAA,OAAY,CAAC,eAClCtG,OAAA,CAACP,IAAI,CAACmH,OAAO;gBACTC,IAAI,EAAC,MAAM;gBACXC,WAAW,EAAC,iBAAiB;gBAC7BC,MAAM,EAAGC,CAAC,IAAK3D,UAAU,CAAC,UAAU,EAAE2D,CAAC,CAACC,MAAM,CAAC1D,KAAK,CAAE;gBACtD2D,QAAQ,EAAGF,CAAC,IAAK;kBACbvG,WAAW,CAACuG,CAAC,CAACC,MAAM,CAAC1D,KAAK,CAAC;kBAC3B,IAAIrB,aAAa,EAAEmB,UAAU,CAAC,UAAU,EAAE2D,CAAC,CAACC,MAAM,CAAC1D,KAAK,CAAC;gBAC7D,CAAE;gBACF4D,OAAO,EAAEjF,aAAa,IAAIF,MAAM,CAACuC,QAAQ,KAAK,EAAE,IAAI/D,SAAS,KAAK,EAAG;gBACrE4G,SAAS,EAAElF,aAAa,IAAIF,MAAM,CAACuC,QAAQ,KAAK;cAAG;gBAAA4B,QAAA,EAAAC,YAAA;gBAAAC,UAAA;gBAAAC,YAAA;cAAA,OACtD,CAAC,eACFtG,OAAA,CAACP,IAAI,CAACmH,OAAO,CAACS,QAAQ;gBAACR,IAAI,EAAC,SAAS;gBAAAb,QAAA,EAAEhE,MAAM,CAACuC;cAAQ;gBAAA4B,QAAA,EAAAC,YAAA;gBAAAC,UAAA;gBAAAC,YAAA;cAAA,OAAwB,CAAC;YAAA;cAAAH,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OACvE,CAAC,eACbtG,OAAA,CAACP,IAAI,CAAC+G,KAAK;cAACC,EAAE,EAAE9G,GAAI;cAAC+G,SAAS,EAAC,WAAW;cAAAV,QAAA,gBACtChG,OAAA,CAACP,IAAI,CAACkH,KAAK;gBAAAX,QAAA,EAAC;cAAc;gBAAAG,QAAA,EAAAC,YAAA;gBAAAC,UAAA;gBAAAC,YAAA;cAAA,OAAY,CAAC,eACvCtG,OAAA,CAACP,IAAI,CAACmH,OAAO;gBACTC,IAAI,EAAC,MAAM;gBACXS,SAAS,EAAE,CAAE,CAAC;gBAAA;gBACdR,WAAW,EAAC,sBAAsB;gBAClCC,MAAM,EAAGC,CAAC,IAAK3D,UAAU,CAAC,eAAe,EAAE2D,CAAC,CAACC,MAAM,CAAC1D,KAAK,CAAE;gBAC3D2D,QAAQ,EAAGF,CAAC,IAAK;kBACbrG,gBAAgB,CAACqG,CAAC,CAACC,MAAM,CAAC1D,KAAK,CAAC;kBAChC,IAAIrB,aAAa,EAAEmB,UAAU,CAAC,eAAe,EAAE2D,CAAC,CAACC,MAAM,CAAC1D,KAAK,CAAC;gBAClE,CAAE;gBACF4D,OAAO,EAAEjF,aAAa,IAAIF,MAAM,CAACwC,aAAa,KAAK,EAAE,IAAI9D,cAAc,KAAK,EAAG;gBAC/E0G,SAAS,EAAElF,aAAa,IAAIF,MAAM,CAACwC,aAAa,KAAK;cAAG;gBAAA2B,QAAA,EAAAC,YAAA;gBAAAC,UAAA;gBAAAC,YAAA;cAAA,OAC3D,CAAC,eACFtG,OAAA,CAACP,IAAI,CAACmH,OAAO,CAACS,QAAQ;gBAACR,IAAI,EAAC,SAAS;gBAAAb,QAAA,EAAEhE,MAAM,CAACwC;cAAa;gBAAA2B,QAAA,EAAAC,YAAA;gBAAAC,UAAA;gBAAAC,YAAA;cAAA,OAAwB,CAAC;YAAA;cAAAH,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OAC5E,CAAC;UAAA;YAAAH,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OACZ,CAAC,eACNtG,OAAA,CAACN,GAAG;YAAAsG,QAAA,gBACAhG,OAAA,CAACP,IAAI,CAAC+G,KAAK;cAACC,EAAE,EAAE9G,GAAI;cAACsG,SAAS,EAAC,MAAM;cAACS,SAAS,EAAC,eAAe;cAAAV,QAAA,gBAC3DhG,OAAA,CAACP,IAAI,CAACkH,KAAK;gBAAAX,QAAA,EAAC;cAAS;gBAAAG,QAAA,EAAAC,YAAA;gBAAAC,UAAA;gBAAAC,YAAA;cAAA,OAAY,CAAC,eAClCtG,OAAA,CAACP,IAAI,CAACmH,OAAO;gBACTC,IAAI,EAAC,MAAM;gBACXC,WAAW,EAAC,iBAAiB;gBAC7BC,MAAM,EAAGC,CAAC,IAAK3D,UAAU,CAAC,OAAO,EAAE2D,CAAC,CAACC,MAAM,CAAC1D,KAAK,CAAE;gBACnD2D,QAAQ,EAAGF,CAAC,IAAK;kBACbnG,QAAQ,CAACmG,CAAC,CAACC,MAAM,CAAC1D,KAAK,CAAC;kBACxB,IAAIrB,aAAa,EAAEmB,UAAU,CAAC,OAAO,EAAE2D,CAAC,CAACC,MAAM,CAAC1D,KAAK,CAAC;gBAC1D,CAAE;gBACF4D,OAAO,EAAEjF,aAAa,IAAIF,MAAM,CAACQ,KAAK,KAAK,EAAE,IAAI5B,MAAM,KAAK,EAAG;gBAC/DwG,SAAS,EAAElF,aAAa,IAAIF,MAAM,CAACQ,KAAK,KAAK;cAAG;gBAAA2D,QAAA,EAAAC,YAAA;gBAAAC,UAAA;gBAAAC,YAAA;cAAA,OACnD,CAAC,eACFtG,OAAA,CAACP,IAAI,CAACmH,OAAO,CAACS,QAAQ;gBAACR,IAAI,EAAC,SAAS;gBAAAb,QAAA,EAAEhE,MAAM,CAACQ;cAAK;gBAAA2D,QAAA,EAAAC,YAAA;gBAAAC,UAAA;gBAAAC,YAAA;cAAA,OAAwB,CAAC;YAAA;cAAAH,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OACpE,CAAC,eACbtG,OAAA,CAACP,IAAI,CAAC+G,KAAK;cAACC,EAAE,EAAE9G,GAAI;cAACsG,SAAS,EAAC,MAAM;cAACS,SAAS,EAAC,mBAAmB;cAAAV,QAAA,gBAC/DhG,OAAA,CAACP,IAAI,CAACkH,KAAK;gBAAAX,QAAA,EAAC;cAAc;gBAAAG,QAAA,EAAAC,YAAA;gBAAAC,UAAA;gBAAAC,YAAA;cAAA,OAAY,CAAC,eACvCtG,OAAA,CAACP,IAAI,CAACmH,OAAO;gBACTC,IAAI,EAAC,MAAM;gBACXS,SAAS,EAAE,EAAG;gBACdR,WAAW,EAAC,sBAAsB;gBAClCC,MAAM,EAAGC,CAAC,IAAK3D,UAAU,CAAC,QAAQ,EAAE2D,CAAC,CAACC,MAAM,CAAC1D,KAAK,CAAE;gBACpD2D,QAAQ,EAAGF,CAAC,IAAK;kBACbjG,SAAS,CAACiG,CAAC,CAACC,MAAM,CAAC1D,KAAK,CAAC;kBACzB,IAAIrB,aAAa,EAAEmB,UAAU,CAAC,QAAQ,EAAE2D,CAAC,CAACC,MAAM,CAAC1D,KAAK,CAAC;gBAC3D,CAAE;gBACF4D,OAAO,EAAEjF,aAAa,IAAIF,MAAM,CAACU,MAAM,KAAK,EAAE,IAAI5B,OAAO,KAAK,EAAG;gBACjEsG,SAAS,EAAElF,aAAa,IAAIF,MAAM,CAACU,MAAM,KAAK;cAAG;gBAAAyD,QAAA,EAAAC,YAAA;gBAAAC,UAAA;gBAAAC,YAAA;cAAA,OACpD,CAAC,eACFtG,OAAA,CAACP,IAAI,CAACmH,OAAO,CAACS,QAAQ;gBAACR,IAAI,EAAC,SAAS;gBAAAb,QAAA,EAAEhE,MAAM,CAACU;cAAM;gBAAAyD,QAAA,EAAAC,YAAA;gBAAAC,UAAA;gBAAAC,YAAA;cAAA,OAAwB,CAAC;YAAA;cAAAH,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OACrE,CAAC;UAAA;YAAAH,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OACZ,CAAC,eAENtG,OAAA,CAACN,GAAG;YAAAsG,QAAA,eACAhG,OAAA,CAACP,IAAI,CAAC+G,KAAK;cAACC,EAAE,EAAE9G,GAAI;cAAC+G,SAAS,EAAC,YAAY;cAAAV,QAAA,gBACvChG,OAAA,CAACP,IAAI,CAACkH,KAAK;gBAAAX,QAAA,EAAC;cAAM;gBAAAG,QAAA,EAAAC,YAAA;gBAAAC,UAAA;gBAAAC,YAAA;cAAA,OAAY,CAAC,eAC/BtG,OAAA,CAACP,IAAI,CAACmH,OAAO;gBACTC,IAAI,EAAC,MAAM;gBACXC,WAAW,EAAC,cAAc;gBAC1BC,MAAM,EAAGC,CAAC,IAAK3D,UAAU,CAAC,QAAQ,EAAE2D,CAAC,CAACC,MAAM,CAAC1D,KAAK,CAAE;gBACpD2D,QAAQ,EAAGF,CAAC,IAAKzF,SAAS,CAACyF,CAAC,CAACC,MAAM,CAAC1D,KAAK,CAAE;gBAC3C4D,OAAO,EAAEjF,aAAa,IAAIF,MAAM,CAACV,MAAM,KAAK,EAAE,IAAIA,MAAM,KAAK,EAAG;gBAChE8F,SAAS,EAAElF,aAAa,IAAIF,MAAM,CAACV,MAAM,KAAK;cAAG;gBAAA6E,QAAA,EAAAC,YAAA;gBAAAC,UAAA;gBAAAC,YAAA;cAAA,OACpD,CAAC,eACFtG,OAAA,CAACP,IAAI,CAACmH,OAAO,CAACS,QAAQ;gBAACR,IAAI,EAAC,SAAS;gBAAAb,QAAA,EAAEhE,MAAM,CAACV;cAAM;gBAAA6E,QAAA,EAAAC,YAAA;gBAAAC,UAAA;gBAAAC,YAAA;cAAA,OAAwB,CAAC;YAAA;cAAAH,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OACrE;UAAC;YAAAH,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OACZ,CAAC,eACNtG,OAAA,CAACN,GAAG;YAAAsG,QAAA,gBACAhG,OAAA,CAACP,IAAI,CAAC+G,KAAK;cAACC,EAAE,EAAE9G,GAAI;cAAC+G,SAAS,EAAC,UAAU;cAAAV,QAAA,gBACrChG,OAAA,CAACP,IAAI,CAACkH,KAAK;gBAAAX,QAAA,EAAC;cAAI;gBAAAG,QAAA,EAAAC,YAAA;gBAAAC,UAAA;gBAAAC,YAAA;cAAA,OAAY,CAAC,eAC7BtG,OAAA,CAACP,IAAI,CAACmH,OAAO;gBACTC,IAAI,EAAC,MAAM;gBACXC,WAAW,EAAC,YAAY;gBACxBC,MAAM,EAAGC,CAAC,IAAK3D,UAAU,CAAC,MAAM,EAAE2D,CAAC,CAACC,MAAM,CAAC1D,KAAK,CAAE;gBAClD2D,QAAQ,EAAGF,CAAC,IAAKvF,OAAO,CAACuF,CAAC,CAACC,MAAM,CAAC1D,KAAK,CAAE;gBACzC4D,OAAO,EAAEjF,aAAa,IAAIF,MAAM,CAACR,IAAI,KAAK,EAAE,IAAIA,IAAI,KAAK,EAAG;gBAC5D4F,SAAS,EAAElF,aAAa,IAAIF,MAAM,CAACR,IAAI,KAAK;cAAG;gBAAA2E,QAAA,EAAAC,YAAA;gBAAAC,UAAA;gBAAAC,YAAA;cAAA,OAClD,CAAC,eACFtG,OAAA,CAACP,IAAI,CAACmH,OAAO,CAACS,QAAQ;gBAACR,IAAI,EAAC,SAAS;gBAAAb,QAAA,EAAEhE,MAAM,CAACR;cAAI;gBAAA2E,QAAA,EAAAC,YAAA;gBAAAC,UAAA;gBAAAC,YAAA;cAAA,OAAwB,CAAC;YAAA;cAAAH,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OACnE,CAAC,eAEbtG,OAAA,CAACP,IAAI,CAAC+G,KAAK;cAACC,EAAE,EAAE9G,GAAI;cAAC+G,SAAS,EAAC,WAAW;cAAAV,QAAA,gBACtChG,OAAA,CAACP,IAAI,CAACkH,KAAK;gBAAAX,QAAA,EAAC;cAAK;gBAAAG,QAAA,EAAAC,YAAA;gBAAAC,UAAA;gBAAAC,YAAA;cAAA,OAAY,CAAC,eAC9BtG,OAAA,CAACP,IAAI,CAACmH,OAAO;gBACTC,IAAI,EAAC,MAAM;gBACXC,WAAW,EAAC,aAAa;gBACzBC,MAAM,EAAGC,CAAC,IAAK3D,UAAU,CAAC,OAAO,EAAE2D,CAAC,CAACC,MAAM,CAAC1D,KAAK,CAAE;gBACnD2D,QAAQ,EAAGF,CAAC,IAAKrF,QAAQ,CAACqF,CAAC,CAACC,MAAM,CAAC1D,KAAK,CAAE;gBAC1C4D,OAAO,EAAEjF,aAAa,IAAIF,MAAM,CAACN,KAAK,KAAK,EAAE,IAAIA,KAAK,KAAK,EAAG;gBAC9D0F,SAAS,EAAElF,aAAa,IAAIF,MAAM,CAACN,KAAK,KAAK;cAAG;gBAAAyE,QAAA,EAAAC,YAAA;gBAAAC,UAAA;gBAAAC,YAAA;cAAA,OACnD,CAAC,eACFtG,OAAA,CAACP,IAAI,CAACmH,OAAO,CAACS,QAAQ;gBAACR,IAAI,EAAC,SAAS;gBAAAb,QAAA,EAAEhE,MAAM,CAACN;cAAK;gBAAAyE,QAAA,EAAAC,YAAA;gBAAAC,UAAA;gBAAAC,YAAA;cAAA,OAAwB,CAAC;YAAA;cAAAH,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OACpE,CAAC,eAEbtG,OAAA,CAACP,IAAI,CAAC+G,KAAK;cAACC,EAAE,EAAE9G,GAAI;cAAC+G,SAAS,EAAC,aAAa;cAAAV,QAAA,gBACxChG,OAAA,CAACP,IAAI,CAACkH,KAAK;gBAAAX,QAAA,EAAC;cAAQ;gBAAAG,QAAA,EAAAC,YAAA;gBAAAC,UAAA;gBAAAC,YAAA;cAAA,OAAY,CAAC,eACjCtG,OAAA,CAACP,IAAI,CAACmH,OAAO;gBACTC,IAAI,EAAC,MAAM;gBACXC,WAAW,EAAC,gBAAgB;gBAC5BC,MAAM,EAAGC,CAAC,IAAK3D,UAAU,CAAC,SAAS,EAAE2D,CAAC,CAACC,MAAM,CAAC1D,KAAK,CAAE;gBACrD2D,QAAQ,EAAGF,CAAC,IAAKnF,UAAU,CAACmF,CAAC,CAACC,MAAM,CAAC1D,KAAK,CAAE;gBAC5C4D,OAAO,EAAEjF,aAAa,IAAIF,MAAM,CAACJ,OAAO,KAAK,EAAE,IAAIA,OAAO,KAAK,EAAG;gBAClEwF,SAAS,EAAElF,aAAa,IAAIF,MAAM,CAACJ,OAAO,KAAK;cAAG;gBAAAuE,QAAA,EAAAC,YAAA;gBAAAC,UAAA;gBAAAC,YAAA;cAAA,OACrD,CAAC,eACFtG,OAAA,CAACP,IAAI,CAACmH,OAAO,CAACS,QAAQ;gBAACR,IAAI,EAAC,SAAS;gBAAAb,QAAA,EAAEhE,MAAM,CAACJ;cAAO;gBAAAuE,QAAA,EAAAC,YAAA;gBAAAC,UAAA;gBAAAC,YAAA;cAAA,OAAwB,CAAC;YAAA;cAAAH,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OACtE,CAAC;UAAA;YAAAH,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OACZ,CAAC,eACNtG,OAAA,CAACN,GAAG;YAAAsG,QAAA,eACAhG,OAAA,CAACP,IAAI,CAAC+G,KAAK;cAACC,EAAE,EAAE9G,GAAI;cAAC+G,SAAS,EAAC,aAAa;cAAAV,QAAA,gBACxChG,OAAA,CAACP,IAAI,CAACkH,KAAK;gBAAAX,QAAA,EAAC;cAAO;gBAAAG,QAAA,EAAAC,YAAA;gBAAAC,UAAA;gBAAAC,YAAA;cAAA,OAAY,CAAC,eAChCtG,OAAA,CAACP,IAAI,CAACmH,OAAO;gBACTC,IAAI,EAAC,MAAM;gBACXC,WAAW,EAAC,eAAe;gBAC3BC,MAAM,EAAGC,CAAC,IAAK3D,UAAU,CAAC,SAAS,EAAE2D,CAAC,CAACC,MAAM,CAAC1D,KAAK,CAAE;gBACrD2D,QAAQ,EAAGF,CAAC,IAAKjF,UAAU,CAACiF,CAAC,CAACC,MAAM,CAAC1D,KAAK,CAAE;gBAC5C4D,OAAO,EAAEjF,aAAa,IAAIF,MAAM,CAACF,OAAO,KAAK,EAAE,IAAIA,OAAO,KAAK,EAAG;gBAClEsF,SAAS,EAAElF,aAAa,IAAIF,MAAM,CAACF,OAAO,KAAK;cAAG;gBAAAqE,QAAA,EAAAC,YAAA;gBAAAC,UAAA;gBAAAC,YAAA;cAAA,OACrD,CAAC,eACFtG,OAAA,CAACP,IAAI,CAACmH,OAAO,CAACS,QAAQ;gBAACR,IAAI,EAAC,SAAS;gBAAAb,QAAA,EAAEhE,MAAM,CAACF;cAAO;gBAAAqE,QAAA,EAAAC,YAAA;gBAAAC,UAAA;gBAAAC,YAAA;cAAA,OAAwB,CAAC;YAAA;cAAAH,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OACtE;UAAC;YAAAH,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OACZ,CAAC,eACNtG,OAAA,CAACN,GAAG;YAAAsG,QAAA,eACAhG,OAAA,CAACP,IAAI,CAAC+G,KAAK;cAACC,EAAE,EAAE9G,GAAI;cAAC+G,SAAS,EAAC,kBAAkB;cAAAV,QAAA,gBAC7ChG,OAAA,CAACP,IAAI,CAACkH,KAAK;gBAAAX,QAAA,EAAC;cAAO;gBAAAG,QAAA,EAAAC,YAAA;gBAAAC,UAAA;gBAAAC,YAAA;cAAA,OAAY,CAAC,eAChCtG,OAAA,CAACP,IAAI,CAAC8H,MAAM;gBAACL,QAAQ,EAAGF,CAAC,IAAK/F,SAAS,CAAC+F,CAAC,CAACC,MAAM,CAAC1D,KAAK,CAAE;gBAACiE,YAAY,EAAC,MAAM;gBAAAxB,QAAA,gBACxEhG,OAAA;kBAAQuD,KAAK,EAAC,MAAM;kBAAAyC,QAAA,EAAC;gBAAI;kBAAAG,QAAA,EAAAC,YAAA;kBAAAC,UAAA;kBAAAC,YAAA;gBAAA,OAAQ,CAAC,eAClCtG,OAAA;kBAAQuD,KAAK,EAAC,QAAQ;kBAAAyC,QAAA,EAAC;gBAAM;kBAAAG,QAAA,EAAAC,YAAA;kBAAAC,UAAA;kBAAAC,YAAA;gBAAA,OAAQ,CAAC,eACtCtG,OAAA;kBAAQuD,KAAK,EAAC,OAAO;kBAAAyC,QAAA,EAAC;gBAAK;kBAAAG,QAAA,EAAAC,YAAA;kBAAAC,UAAA;kBAAAC,YAAA;gBAAA,OAAQ,CAAC;cAAA;gBAAAH,QAAA,EAAAC,YAAA;gBAAAC,UAAA;gBAAAC,YAAA;cAAA,OAC3B,CAAC;YAAA;cAAAH,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OACN;UAAC;YAAAH,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OACZ,CAAC,eACNtG,OAAA;YAAKiG,SAAS,EAAC,2DAA2D;YAAAD,QAAA,gBACtEhG,OAAA;cAAKiG,SAAS,EAAC,QAAQ;cAAAD,QAAA,eACnBhG,OAAA,CAACJ,MAAM;gBAAC6H,OAAO,EAAErD,eAAgB;gBAACsD,OAAO,EAAC,SAAS;gBAACb,IAAI,EAAC,QAAQ;gBAAAb,QAAA,EAAC;cAElE;gBAAAG,QAAA,EAAAC,YAAA;gBAAAC,UAAA;gBAAAC,YAAA;cAAA,OAAQ;YAAC;cAAAH,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OACR,CAAC,eACNtG,OAAA;cAAKiG,SAAS,EAAC,MAAM;cAAAD,QAAA,eACjBhG,OAAA,CAACJ,MAAM;gBAAC8H,OAAO,EAAC,MAAM;gBAACD,OAAO,EAAEA,CAAA,KAAMpH,QAAQ,CAAC,CAAC,CAAC,CAAE;gBAAA2F,QAAA,EAAC;cAAI;gBAAAG,QAAA,EAAAC,YAAA;gBAAAC,UAAA;gBAAAC,YAAA;cAAA,OAAQ;YAAC;cAAAH,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OAChE,CAAC;UAAA;YAAAH,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OACL,CAAC;QAAA;UAAAH,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OACJ;MAAC;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACA,CAAC;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACV;EAAC,gBACT,CAAC;AAEX,CAAC;AAAClG,EAAA,CAxUID,kBAAkB;EAAA,QACHL,WAAW;AAAA;AAAA6H,EAAA,GAD1BxH,kBAAkB;AA0UxB,eAAeA,kBAAkB;AAAC,IAAAwH,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}