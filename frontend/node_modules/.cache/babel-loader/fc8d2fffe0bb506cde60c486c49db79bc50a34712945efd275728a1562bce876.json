{"ast":null,"code":"var _jsxFileName = \"E:\\\\School\\\\School\\\\Integrative Programming\\\\medical-appointment\\\\src\\\\components\\\\patient\\\\patientinformation\\\\PatientInformation\\\\UpdatePatientInfoModal.jsx\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from \"react\";\nimport { Modal, Button, Form } from \"react-bootstrap\";\nimport axios from \"axios\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst UpdatePatientInfoModal = ({\n  show,\n  handleClose,\n  thePatient,\n  pid\n}) => {\n  _s();\n  // Define state variables for patient information\n  const [firstName, setFirstName] = useState(\"\");\n  const [lastName, setLastName] = useState(\"\");\n  const [middleInitial, setMiddleInitial] = useState(\"\");\n  const [contactNumber, setContactNumber] = useState(\"\");\n\n  // Use useEffect to populate the form with the existing patient info when the modal opens\n  useEffect(() => {\n    if (thePatient) {\n      setFirstName(thePatient.patient_firstName || \"\");\n      setLastName(thePatient.patient_lastName || \"\");\n      setMiddleInitial(thePatient.patient_middleInitial || \"\");\n      setContactNumber(thePatient.patient_contactNumber || \"\");\n    }\n  }, [thePatient, show]); // Trigger useEffect when the modal is shown or patient data is passed\n\n  const handleSaveChanges = async () => {\n    try {\n      const response = await axios.put(`http://localhost:8000/patient/api/updateinfo/${pid}`, {\n        patient_firstName: firstName,\n        patient_lastName: lastName,\n        patient_middleInitial: middleInitial,\n        patient_contactNumber: contactNumber\n      });\n      if (response.data.success) {\n        alert(\"Information updated successfully!\");\n        handleClose(); // Close modal after successful update\n      } else {\n        alert(\"Failed to update information.\");\n      }\n    } catch (error) {\n      console.error(error);\n      alert(\"Error updating information.\");\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(Modal, {\n    show: show,\n    onHide: handleClose,\n    children: [/*#__PURE__*/_jsxDEV(Modal.Header, {\n      closeButton: true,\n      children: /*#__PURE__*/_jsxDEV(Modal.Title, {\n        children: \"Edit Information\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 46,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 45,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(Modal.Body, {\n      children: /*#__PURE__*/_jsxDEV(Form, {\n        children: [/*#__PURE__*/_jsxDEV(Form.Group, {\n          controlId: \"firstName\",\n          children: [/*#__PURE__*/_jsxDEV(Form.Label, {\n            children: \"First Name:\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 51,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(Form.Control, {\n            type: \"text\",\n            value: firstName,\n            onChange: e => setFirstName(e.target.value)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 52,\n            columnNumber: 25\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 50,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(Form.Group, {\n          controlId: \"lastName\",\n          children: [/*#__PURE__*/_jsxDEV(Form.Label, {\n            children: \"Last Name:\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 59,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(Form.Control, {\n            type: \"text\",\n            value: lastName,\n            onChange: e => setLastName(e.target.value)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 60,\n            columnNumber: 25\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 58,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(Form.Group, {\n          controlId: \"middleInitial\",\n          children: [/*#__PURE__*/_jsxDEV(Form.Label, {\n            children: \"Middle Initial:\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 67,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(Form.Control, {\n            type: \"text\",\n            value: middleInitial,\n            onChange: e => setMiddleInitial(e.target.value)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 68,\n            columnNumber: 25\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 66,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(Form.Group, {\n          controlId: \"contactNumber\",\n          children: [/*#__PURE__*/_jsxDEV(Form.Label, {\n            children: \"Contact Number:\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 75,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(Form.Control, {\n            type: \"text\",\n            value: contactNumber,\n            onChange: e => setContactNumber(e.target.value)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 76,\n            columnNumber: 25\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 74,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 49,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 48,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(Modal.Footer, {\n      children: [/*#__PURE__*/_jsxDEV(Button, {\n        variant: \"secondary\",\n        onClick: handleClose,\n        children: \"Close\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 85,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(Button, {\n        variant: \"primary\",\n        onClick: handleSaveChanges,\n        children: \"Save Changes\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 88,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 84,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 44,\n    columnNumber: 9\n  }, this);\n};\n_s(UpdatePatientInfoModal, \"/g9eM6PPuls/hkuwD8flZrxlsPw=\");\n_c = UpdatePatientInfoModal;\nexport default UpdatePatientInfoModal;\nvar _c;\n$RefreshReg$(_c, \"UpdatePatientInfoModal\");","map":{"version":3,"names":["React","useState","useEffect","Modal","Button","Form","axios","jsxDEV","_jsxDEV","UpdatePatientInfoModal","show","handleClose","thePatient","pid","_s","firstName","setFirstName","lastName","setLastName","middleInitial","setMiddleInitial","contactNumber","setContactNumber","patient_firstName","patient_lastName","patient_middleInitial","patient_contactNumber","handleSaveChanges","response","put","data","success","alert","error","console","onHide","children","Header","closeButton","Title","fileName","_jsxFileName","lineNumber","columnNumber","Body","Group","controlId","Label","Control","type","value","onChange","e","target","Footer","variant","onClick","_c","$RefreshReg$"],"sources":["E:/School/School/Integrative Programming/medical-appointment/src/components/patient/patientinformation/PatientInformation/UpdatePatientInfoModal.jsx"],"sourcesContent":["import React, { useState, useEffect } from \"react\";\r\nimport { Modal, Button, Form } from \"react-bootstrap\";\r\nimport axios from \"axios\";\r\n\r\nconst UpdatePatientInfoModal = ({ show, handleClose, thePatient, pid }) => {\r\n    // Define state variables for patient information\r\n    const [firstName, setFirstName] = useState(\"\");\r\n    const [lastName, setLastName] = useState(\"\");\r\n    const [middleInitial, setMiddleInitial] = useState(\"\");\r\n    const [contactNumber, setContactNumber] = useState(\"\");\r\n\r\n    // Use useEffect to populate the form with the existing patient info when the modal opens\r\n    useEffect(() => {\r\n        if (thePatient) {\r\n            setFirstName(thePatient.patient_firstName || \"\");\r\n            setLastName(thePatient.patient_lastName || \"\");\r\n            setMiddleInitial(thePatient.patient_middleInitial || \"\");\r\n            setContactNumber(thePatient.patient_contactNumber || \"\");\r\n        }\r\n    }, [thePatient, show]); // Trigger useEffect when the modal is shown or patient data is passed\r\n\r\n    const handleSaveChanges = async () => {\r\n        try {\r\n            const response = await axios.put(`http://localhost:8000/patient/api/updateinfo/${pid}`, {\r\n                patient_firstName: firstName,\r\n                patient_lastName: lastName,\r\n                patient_middleInitial: middleInitial,\r\n                patient_contactNumber: contactNumber,\r\n            });\r\n\r\n            if (response.data.success) {\r\n                alert(\"Information updated successfully!\");\r\n                handleClose(); // Close modal after successful update\r\n            } else {\r\n                alert(\"Failed to update information.\");\r\n            }\r\n        } catch (error) {\r\n            console.error(error);\r\n            alert(\"Error updating information.\");\r\n        }\r\n    };\r\n\r\n    return (\r\n        <Modal show={show} onHide={handleClose}>\r\n            <Modal.Header closeButton>\r\n                <Modal.Title>Edit Information</Modal.Title>\r\n            </Modal.Header>\r\n            <Modal.Body>\r\n                <Form>\r\n                    <Form.Group controlId=\"firstName\">\r\n                        <Form.Label>First Name:</Form.Label>\r\n                        <Form.Control\r\n                            type=\"text\"\r\n                            value={firstName}\r\n                            onChange={(e) => setFirstName(e.target.value)}\r\n                        />\r\n                    </Form.Group>\r\n                    <Form.Group controlId=\"lastName\">\r\n                        <Form.Label>Last Name:</Form.Label>\r\n                        <Form.Control\r\n                            type=\"text\"\r\n                            value={lastName}\r\n                            onChange={(e) => setLastName(e.target.value)}\r\n                        />\r\n                    </Form.Group>\r\n                    <Form.Group controlId=\"middleInitial\">\r\n                        <Form.Label>Middle Initial:</Form.Label>\r\n                        <Form.Control\r\n                            type=\"text\"\r\n                            value={middleInitial}\r\n                            onChange={(e) => setMiddleInitial(e.target.value)}\r\n                        />\r\n                    </Form.Group>\r\n                    <Form.Group controlId=\"contactNumber\">\r\n                        <Form.Label>Contact Number:</Form.Label>\r\n                        <Form.Control\r\n                            type=\"text\"\r\n                            value={contactNumber}\r\n                            onChange={(e) => setContactNumber(e.target.value)}\r\n                        />\r\n                    </Form.Group>\r\n                </Form>\r\n            </Modal.Body>\r\n            <Modal.Footer>\r\n                <Button variant=\"secondary\" onClick={handleClose}>\r\n                    Close\r\n                </Button>\r\n                <Button variant=\"primary\" onClick={handleSaveChanges}>\r\n                    Save Changes\r\n                </Button>\r\n            </Modal.Footer>\r\n        </Modal>\r\n    );\r\n};\r\n\r\nexport default UpdatePatientInfoModal;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}