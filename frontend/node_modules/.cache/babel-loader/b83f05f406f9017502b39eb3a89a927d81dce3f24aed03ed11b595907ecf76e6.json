{"ast":null,"code":"var _jsxFileName = \"E:\\\\School\\\\School\\\\Integrative Programming\\\\medical-appointment\\\\src\\\\components\\\\staffs\\\\admin\\\\dashboard\\\\Charts\\\\LineCompletedAppointments.jsx\",\n  _s = $RefreshSig$();\nimport React, { useEffect, useRef, useState } from 'react';\nimport { Container, Card } from 'react-bootstrap';\nimport Chart from 'chart.js/auto';\nimport axios from 'axios';\nimport { ip } from '../../../../../ContentExport';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction LineCompletedAppointments() {\n  _s();\n  const chartRef = useRef(null);\n  const chartInstanceRef = useRef(null);\n  const [chartData, setChartData] = useState({\n    labels: [],\n    data: []\n  });\n  useEffect(() => {\n    // Fetch appointment stats from the backend\n    axios.get(`${ip.address}/admin/api/appointments/completed-by-month`).then(response => {\n      const data = response.data;\n      const labels = [];\n      const counts = [];\n      data.forEach(item => {\n        const monthName = new Date(item.year, item.month - 1).toLocaleString('default', {\n          month: 'long'\n        });\n        labels.push(`${monthName} ${item.year}`);\n        counts.push(item.count);\n      });\n      setChartData({\n        labels,\n        data: counts\n      });\n    }).catch(error => console.error('Error fetching appointment stats:', error));\n  }, []);\n  useEffect(() => {\n    if (chartInstanceRef.current) {\n      chartInstanceRef.current.destroy();\n    }\n    const ctx = chartRef.current.getContext('2d');\n    chartInstanceRef.current = new Chart(ctx, {\n      type: 'line',\n      data: {\n        labels: chartData.labels,\n        // ['January 2023', 'February 2023', ...]\n        datasets: [{\n          label: 'Completed Appointments',\n          borderColor: \"#4e73df\",\n          pointBackgroundColor: \"#4e73df\",\n          pointBorderColor: \"#4e73df\",\n          fill: false,\n          data: chartData.data // Data points corresponding to each month\n        }]\n      },\n      options: {\n        maintainAspectRatio: false,\n        layout: {\n          padding: {\n            left: 10,\n            right: 25,\n            top: 25,\n            bottom: 0\n          }\n        },\n        scales: {\n          x: {\n            grid: {\n              display: false,\n              drawBorder: false\n            },\n            ticks: {\n              maxTicksLimit: 12\n            }\n          },\n          y: {\n            ticks: {\n              min: 0,\n              maxTicksLimit: 5,\n              padding: 10,\n              callback: function (value) {\n                return value; // Just display the number\n              }\n            },\n            grid: {\n              color: \"rgb(234, 236, 244)\",\n              zeroLineColor: \"rgb(234, 236, 244)\",\n              drawBorder: false,\n              borderDash: [2],\n              zeroLineBorderDash: [2]\n            }\n          }\n        },\n        plugins: {\n          legend: {\n            display: true\n          },\n          tooltip: {\n            titleMarginBottom: 10,\n            titleFont: {\n              size: 14,\n              family: 'Nunito, -apple-system, system-ui, BlinkMacSystemFont, \"Segoe UI\", Roboto, \"Helvetica Neue\", Arial, sans-serif'\n            },\n            backgroundColor: \"rgb(255,255,255)\",\n            bodyColor: \"#858796\",\n            borderColor: '#dddfeb',\n            borderWidth: 1,\n            xPadding: 15,\n            yPadding: 15,\n            displayColors: false,\n            caretPadding: 10,\n            callbacks: {\n              label: function (tooltipItem) {\n                const label = chartData.labels[tooltipItem.dataIndex]; // Get the correct label\n                return label + ': ' + tooltipItem.raw;\n              }\n            }\n          }\n        }\n      }\n    });\n    return () => {\n      if (chartInstanceRef.current) {\n        chartInstanceRef.current.destroy();\n      }\n    };\n  }, [chartData]);\n  return /*#__PURE__*/_jsxDEV(Card, {\n    className: \"card-line-chart shadow mb-4\",\n    children: [/*#__PURE__*/_jsxDEV(Card.Header, {\n      className: \"py-3\",\n      children: /*#__PURE__*/_jsxDEV(\"h6\", {\n        className: \"m-0 font-weight-bold text-primary\",\n        children: \"Completed Appointments by Month\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 128,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 127,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Card.Body, {\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"chart-line\",\n        children: /*#__PURE__*/_jsxDEV(\"canvas\", {\n          id: \"myLineChart\",\n          ref: chartRef\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 132,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 131,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 130,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 126,\n    columnNumber: 5\n  }, this);\n}\n_s(LineCompletedAppointments, \"BwV9Cqmv3VsO/wrKon1qjJ1Mk5I=\");\n_c = LineCompletedAppointments;\nexport default LineCompletedAppointments;\nvar _c;\n$RefreshReg$(_c, \"LineCompletedAppointments\");","map":{"version":3,"names":["React","useEffect","useRef","useState","Container","Card","Chart","axios","ip","jsxDEV","_jsxDEV","LineCompletedAppointments","_s","chartRef","chartInstanceRef","chartData","setChartData","labels","data","get","address","then","response","counts","forEach","item","monthName","Date","year","month","toLocaleString","push","count","catch","error","console","current","destroy","ctx","getContext","type","datasets","label","borderColor","pointBackgroundColor","pointBorderColor","fill","options","maintainAspectRatio","layout","padding","left","right","top","bottom","scales","x","grid","display","drawBorder","ticks","maxTicksLimit","y","min","callback","value","color","zeroLineColor","borderDash","zeroLineBorderDash","plugins","legend","tooltip","titleMarginBottom","titleFont","size","family","backgroundColor","bodyColor","borderWidth","xPadding","yPadding","displayColors","caretPadding","callbacks","tooltipItem","dataIndex","raw","className","children","Header","fileName","_jsxFileName","lineNumber","columnNumber","Body","id","ref","_c","$RefreshReg$"],"sources":["E:/School/School/Integrative Programming/medical-appointment/src/components/staffs/admin/dashboard/Charts/LineCompletedAppointments.jsx"],"sourcesContent":["import React, { useEffect, useRef, useState } from 'react';\r\nimport { Container, Card } from 'react-bootstrap';\r\nimport Chart from 'chart.js/auto';\r\nimport axios from 'axios';\r\nimport { ip } from '../../../../../ContentExport';\r\n\r\nfunction LineCompletedAppointments() {\r\n  const chartRef = useRef(null);\r\n  const chartInstanceRef = useRef(null);\r\n  const [chartData, setChartData] = useState({ labels: [], data: [] });\r\n\r\n  useEffect(() => {\r\n    // Fetch appointment stats from the backend\r\n    axios.get(`${ip.address}/admin/api/appointments/completed-by-month`)\r\n      .then(response => {\r\n        const data = response.data;\r\n\r\n        const labels = [];\r\n        const counts = [];\r\n\r\n        data.forEach(item => {\r\n          const monthName = new Date(item.year, item.month - 1).toLocaleString('default', { month: 'long' });\r\n          labels.push(`${monthName} ${item.year}`);\r\n          counts.push(item.count);\r\n        });\r\n\r\n        setChartData({ labels, data: counts });\r\n      })\r\n      .catch(error => console.error('Error fetching appointment stats:', error));\r\n  }, []);\r\n\r\n  useEffect(() => {\r\n    if (chartInstanceRef.current) {\r\n      chartInstanceRef.current.destroy();\r\n    }\r\n\r\n    const ctx = chartRef.current.getContext('2d');\r\n    chartInstanceRef.current = new Chart(ctx, {\r\n      type: 'line',\r\n      data: {\r\n        labels: chartData.labels, // ['January 2023', 'February 2023', ...]\r\n        datasets: [{\r\n          label: 'Completed Appointments',\r\n          borderColor: \"#4e73df\",\r\n          pointBackgroundColor: \"#4e73df\",\r\n          pointBorderColor: \"#4e73df\",\r\n          fill: false,\r\n          data: chartData.data, // Data points corresponding to each month\r\n        }],\r\n      },\r\n      options: {\r\n        maintainAspectRatio: false,\r\n        layout: {\r\n          padding: {\r\n            left: 10,\r\n            right: 25,\r\n            top: 25,\r\n            bottom: 0\r\n          }\r\n        },\r\n        scales: {\r\n          x: {\r\n            grid: {\r\n              display: false,\r\n              drawBorder: false\r\n            },\r\n            ticks: {\r\n              maxTicksLimit: 12\r\n            },\r\n          },\r\n          y: {\r\n            ticks: {\r\n              min: 0,\r\n              maxTicksLimit: 5,\r\n              padding: 10,\r\n              callback: function(value) {\r\n                return value; // Just display the number\r\n              }\r\n            },\r\n            grid: {\r\n              color: \"rgb(234, 236, 244)\",\r\n              zeroLineColor: \"rgb(234, 236, 244)\",\r\n              drawBorder: false,\r\n              borderDash: [2],\r\n              zeroLineBorderDash: [2]\r\n            }\r\n          },\r\n        },\r\n        plugins: {\r\n          legend: {\r\n            display: true\r\n          },\r\n          tooltip: {\r\n            titleMarginBottom: 10,\r\n            titleFont: {\r\n              size: 14,\r\n              family: 'Nunito, -apple-system, system-ui, BlinkMacSystemFont, \"Segoe UI\", Roboto, \"Helvetica Neue\", Arial, sans-serif',\r\n            },\r\n            backgroundColor: \"rgb(255,255,255)\",\r\n            bodyColor: \"#858796\",\r\n            borderColor: '#dddfeb',\r\n            borderWidth: 1,\r\n            xPadding: 15,\r\n            yPadding: 15,\r\n            displayColors: false,\r\n            caretPadding: 10,\r\n            callbacks: {\r\n              label: function(tooltipItem) {\r\n                const label = chartData.labels[tooltipItem.dataIndex]; // Get the correct label\r\n                return label + ': ' + tooltipItem.raw;\r\n              }\r\n            }\r\n          },\r\n        }\r\n      }\r\n    });\r\n\r\n    return () => {\r\n      if (chartInstanceRef.current) {\r\n        chartInstanceRef.current.destroy();\r\n      }\r\n    };\r\n  }, [chartData]);\r\n\r\n  return (\r\n    <Card className=\"card-line-chart shadow mb-4\">\r\n      <Card.Header className=\"py-3\">\r\n        <h6 className=\"m-0 font-weight-bold text-primary\">Completed Appointments by Month</h6>\r\n      </Card.Header>\r\n      <Card.Body>\r\n        <div className=\"chart-line\">\r\n          <canvas id=\"myLineChart\" ref={chartRef}></canvas>\r\n        </div>\r\n      </Card.Body>\r\n    </Card>\r\n  );\r\n}\r\n\r\nexport default LineCompletedAppointments;\r\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,SAAS,EAAEC,MAAM,EAAEC,QAAQ,QAAQ,OAAO;AAC1D,SAASC,SAAS,EAAEC,IAAI,QAAQ,iBAAiB;AACjD,OAAOC,KAAK,MAAM,eAAe;AACjC,OAAOC,KAAK,MAAM,OAAO;AACzB,SAASC,EAAE,QAAQ,8BAA8B;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAElD,SAASC,yBAAyBA,CAAA,EAAG;EAAAC,EAAA;EACnC,MAAMC,QAAQ,GAAGX,MAAM,CAAC,IAAI,CAAC;EAC7B,MAAMY,gBAAgB,GAAGZ,MAAM,CAAC,IAAI,CAAC;EACrC,MAAM,CAACa,SAAS,EAAEC,YAAY,CAAC,GAAGb,QAAQ,CAAC;IAAEc,MAAM,EAAE,EAAE;IAAEC,IAAI,EAAE;EAAG,CAAC,CAAC;EAEpEjB,SAAS,CAAC,MAAM;IACd;IACAM,KAAK,CAACY,GAAG,CAAC,GAAGX,EAAE,CAACY,OAAO,4CAA4C,CAAC,CACjEC,IAAI,CAACC,QAAQ,IAAI;MAChB,MAAMJ,IAAI,GAAGI,QAAQ,CAACJ,IAAI;MAE1B,MAAMD,MAAM,GAAG,EAAE;MACjB,MAAMM,MAAM,GAAG,EAAE;MAEjBL,IAAI,CAACM,OAAO,CAACC,IAAI,IAAI;QACnB,MAAMC,SAAS,GAAG,IAAIC,IAAI,CAACF,IAAI,CAACG,IAAI,EAAEH,IAAI,CAACI,KAAK,GAAG,CAAC,CAAC,CAACC,cAAc,CAAC,SAAS,EAAE;UAAED,KAAK,EAAE;QAAO,CAAC,CAAC;QAClGZ,MAAM,CAACc,IAAI,CAAC,GAAGL,SAAS,IAAID,IAAI,CAACG,IAAI,EAAE,CAAC;QACxCL,MAAM,CAACQ,IAAI,CAACN,IAAI,CAACO,KAAK,CAAC;MACzB,CAAC,CAAC;MAEFhB,YAAY,CAAC;QAAEC,MAAM;QAAEC,IAAI,EAAEK;MAAO,CAAC,CAAC;IACxC,CAAC,CAAC,CACDU,KAAK,CAACC,KAAK,IAAIC,OAAO,CAACD,KAAK,CAAC,mCAAmC,EAAEA,KAAK,CAAC,CAAC;EAC9E,CAAC,EAAE,EAAE,CAAC;EAENjC,SAAS,CAAC,MAAM;IACd,IAAIa,gBAAgB,CAACsB,OAAO,EAAE;MAC5BtB,gBAAgB,CAACsB,OAAO,CAACC,OAAO,CAAC,CAAC;IACpC;IAEA,MAAMC,GAAG,GAAGzB,QAAQ,CAACuB,OAAO,CAACG,UAAU,CAAC,IAAI,CAAC;IAC7CzB,gBAAgB,CAACsB,OAAO,GAAG,IAAI9B,KAAK,CAACgC,GAAG,EAAE;MACxCE,IAAI,EAAE,MAAM;MACZtB,IAAI,EAAE;QACJD,MAAM,EAAEF,SAAS,CAACE,MAAM;QAAE;QAC1BwB,QAAQ,EAAE,CAAC;UACTC,KAAK,EAAE,wBAAwB;UAC/BC,WAAW,EAAE,SAAS;UACtBC,oBAAoB,EAAE,SAAS;UAC/BC,gBAAgB,EAAE,SAAS;UAC3BC,IAAI,EAAE,KAAK;UACX5B,IAAI,EAAEH,SAAS,CAACG,IAAI,CAAE;QACxB,CAAC;MACH,CAAC;MACD6B,OAAO,EAAE;QACPC,mBAAmB,EAAE,KAAK;QAC1BC,MAAM,EAAE;UACNC,OAAO,EAAE;YACPC,IAAI,EAAE,EAAE;YACRC,KAAK,EAAE,EAAE;YACTC,GAAG,EAAE,EAAE;YACPC,MAAM,EAAE;UACV;QACF,CAAC;QACDC,MAAM,EAAE;UACNC,CAAC,EAAE;YACDC,IAAI,EAAE;cACJC,OAAO,EAAE,KAAK;cACdC,UAAU,EAAE;YACd,CAAC;YACDC,KAAK,EAAE;cACLC,aAAa,EAAE;YACjB;UACF,CAAC;UACDC,CAAC,EAAE;YACDF,KAAK,EAAE;cACLG,GAAG,EAAE,CAAC;cACNF,aAAa,EAAE,CAAC;cAChBX,OAAO,EAAE,EAAE;cACXc,QAAQ,EAAE,SAAAA,CAASC,KAAK,EAAE;gBACxB,OAAOA,KAAK,CAAC,CAAC;cAChB;YACF,CAAC;YACDR,IAAI,EAAE;cACJS,KAAK,EAAE,oBAAoB;cAC3BC,aAAa,EAAE,oBAAoB;cACnCR,UAAU,EAAE,KAAK;cACjBS,UAAU,EAAE,CAAC,CAAC,CAAC;cACfC,kBAAkB,EAAE,CAAC,CAAC;YACxB;UACF;QACF,CAAC;QACDC,OAAO,EAAE;UACPC,MAAM,EAAE;YACNb,OAAO,EAAE;UACX,CAAC;UACDc,OAAO,EAAE;YACPC,iBAAiB,EAAE,EAAE;YACrBC,SAAS,EAAE;cACTC,IAAI,EAAE,EAAE;cACRC,MAAM,EAAE;YACV,CAAC;YACDC,eAAe,EAAE,kBAAkB;YACnCC,SAAS,EAAE,SAAS;YACpBnC,WAAW,EAAE,SAAS;YACtBoC,WAAW,EAAE,CAAC;YACdC,QAAQ,EAAE,EAAE;YACZC,QAAQ,EAAE,EAAE;YACZC,aAAa,EAAE,KAAK;YACpBC,YAAY,EAAE,EAAE;YAChBC,SAAS,EAAE;cACT1C,KAAK,EAAE,SAAAA,CAAS2C,WAAW,EAAE;gBAC3B,MAAM3C,KAAK,GAAG3B,SAAS,CAACE,MAAM,CAACoE,WAAW,CAACC,SAAS,CAAC,CAAC,CAAC;gBACvD,OAAO5C,KAAK,GAAG,IAAI,GAAG2C,WAAW,CAACE,GAAG;cACvC;YACF;UACF;QACF;MACF;IACF,CAAC,CAAC;IAEF,OAAO,MAAM;MACX,IAAIzE,gBAAgB,CAACsB,OAAO,EAAE;QAC5BtB,gBAAgB,CAACsB,OAAO,CAACC,OAAO,CAAC,CAAC;MACpC;IACF,CAAC;EACH,CAAC,EAAE,CAACtB,SAAS,CAAC,CAAC;EAEf,oBACEL,OAAA,CAACL,IAAI;IAACmF,SAAS,EAAC,6BAA6B;IAAAC,QAAA,gBAC3C/E,OAAA,CAACL,IAAI,CAACqF,MAAM;MAACF,SAAS,EAAC,MAAM;MAAAC,QAAA,eAC3B/E,OAAA;QAAI8E,SAAS,EAAC,mCAAmC;QAAAC,QAAA,EAAC;MAA+B;QAAAE,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAI;IAAC;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAC3E,CAAC,eACdpF,OAAA,CAACL,IAAI,CAAC0F,IAAI;MAAAN,QAAA,eACR/E,OAAA;QAAK8E,SAAS,EAAC,YAAY;QAAAC,QAAA,eACzB/E,OAAA;UAAQsF,EAAE,EAAC,aAAa;UAACC,GAAG,EAAEpF;QAAS;UAAA8E,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAS;MAAC;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAC9C;IAAC;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACG,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACR,CAAC;AAEX;AAAClF,EAAA,CAlIQD,yBAAyB;AAAAuF,EAAA,GAAzBvF,yBAAyB;AAoIlC,eAAeA,yBAAyB;AAAC,IAAAuF,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}