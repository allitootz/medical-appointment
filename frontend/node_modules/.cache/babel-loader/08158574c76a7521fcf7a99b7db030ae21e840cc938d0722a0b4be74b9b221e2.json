{"ast":null,"code":"var _jsxFileName = \"E:\\\\School\\\\School\\\\Integrative Programming\\\\medical-appointment\\\\src\\\\components\\\\staffs\\\\medical secretary\\\\components\\\\Appointments\\\\AssignAppointmentModal.jsx\";\nimport React, { useState } from 'react';\nimport { Modal, Button, Form } from 'react-bootstrap';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst AssignAppointmentModal = ({\n  show,\n  handleClose,\n  alldoctors,\n  selectedDoctor,\n  setSelectedDoctor,\n  selectedDate,\n  setSelectedDate,\n  selectedTime,\n  setSelectedTime,\n  handleSaveDetails,\n  error\n}) => {\n  // Function to convert time to 12-hour format with AM/PM\n  const convertTo12HourFormat = time24 => {\n    const [hour, minute] = time24.split(':');\n    const period = +hour < 12 ? 'AM' : 'PM';\n    const hour12 = +hour % 12 || 12;\n    return `${hour12}:${minute} ${period}`;\n  };\n  const handleTimeChange = e => {\n    const time24 = e.target.value;\n    const time12 = convertTo12HourFormat(time24);\n    setSelectedTime(time12); // Save in 12-hour format\n  };\n  return /*#__PURE__*/_jsxDEV(Modal, {\n    show: show,\n    onHide: handleClose,\n    children: [/*#__PURE__*/_jsxDEV(Modal.Header, {\n      closeButton: true,\n      children: /*#__PURE__*/_jsxDEV(Modal.Title, {\n        children: \"Assign Appointment Details\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 23,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 22,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Modal.Body, {\n      children: [error && /*#__PURE__*/_jsxDEV(\"p\", {\n        style: {\n          color: 'red'\n        },\n        children: error\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 26,\n        columnNumber: 19\n      }, this), /*#__PURE__*/_jsxDEV(Form.Group, {\n        controlId: \"formAssignDoctor\",\n        children: [/*#__PURE__*/_jsxDEV(Form.Label, {\n          children: \"Assign Doctor\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 28,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Form.Control, {\n          as: \"select\",\n          value: selectedDoctor,\n          onChange: e => setSelectedDoctor(e.target.value),\n          children: [/*#__PURE__*/_jsxDEV(\"option\", {\n            value: \"\",\n            children: \"Select Doctor\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 34,\n            columnNumber: 13\n          }, this), alldoctors.map(doctor => /*#__PURE__*/_jsxDEV(\"option\", {\n            value: doctor._id,\n            children: `${doctor.dr_firstName} ${doctor.dr_middleInitial}. ${doctor.dr_lastName}`\n          }, doctor._id, false, {\n            fileName: _jsxFileName,\n            lineNumber: 36,\n            columnNumber: 15\n          }, this))]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 29,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 27,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Form.Group, {\n        controlId: \"formAssignDate\",\n        children: [/*#__PURE__*/_jsxDEV(Form.Label, {\n          children: \"Assign Date\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 44,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Form.Control, {\n          type: \"date\",\n          value: selectedDate,\n          onChange: e => setSelectedDate(e.target.value)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 45,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 43,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Form.Group, {\n        controlId: \"formAssignTime\",\n        children: [/*#__PURE__*/_jsxDEV(Form.Label, {\n          children: \"Assign Time (AM/PM)\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 53,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Form.Control, {\n          type: \"time\",\n          value: selectedTime,\n          onChange: handleTimeChange\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 54,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 52,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 25,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Modal.Footer, {\n      children: [/*#__PURE__*/_jsxDEV(Button, {\n        variant: \"secondary\",\n        onClick: handleClose,\n        children: \"Cancel\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 62,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Button, {\n        variant: \"primary\",\n        onClick: handleSaveDetails,\n        children: \"Save\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 65,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 61,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 21,\n    columnNumber: 5\n  }, this);\n};\n_c = AssignAppointmentModal;\nexport default AssignAppointmentModal;\nvar _c;\n$RefreshReg$(_c, \"AssignAppointmentModal\");","map":{"version":3,"names":["React","useState","Modal","Button","Form","jsxDEV","_jsxDEV","AssignAppointmentModal","show","handleClose","alldoctors","selectedDoctor","setSelectedDoctor","selectedDate","setSelectedDate","selectedTime","setSelectedTime","handleSaveDetails","error","convertTo12HourFormat","time24","hour","minute","split","period","hour12","handleTimeChange","e","target","value","time12","onHide","children","Header","closeButton","Title","fileName","_jsxFileName","lineNumber","columnNumber","Body","style","color","Group","controlId","Label","Control","as","onChange","map","doctor","_id","dr_firstName","dr_middleInitial","dr_lastName","type","Footer","variant","onClick","_c","$RefreshReg$"],"sources":["E:/School/School/Integrative Programming/medical-appointment/src/components/staffs/medical secretary/components/Appointments/AssignAppointmentModal.jsx"],"sourcesContent":["import React, { useState } from 'react';\r\nimport { Modal, Button, Form } from 'react-bootstrap';\r\n\r\nconst AssignAppointmentModal = ({ show, handleClose, alldoctors, selectedDoctor, setSelectedDoctor, selectedDate, setSelectedDate, selectedTime, setSelectedTime, handleSaveDetails, error }) => {\r\n  \r\n  // Function to convert time to 12-hour format with AM/PM\r\n  const convertTo12HourFormat = (time24) => {\r\n    const [hour, minute] = time24.split(':');\r\n    const period = +hour < 12 ? 'AM' : 'PM';\r\n    const hour12 = +hour % 12 || 12;\r\n    return `${hour12}:${minute} ${period}`;\r\n  };\r\n\r\n  const handleTimeChange = (e) => {\r\n    const time24 = e.target.value;\r\n    const time12 = convertTo12HourFormat(time24);\r\n    setSelectedTime(time12); // Save in 12-hour format\r\n  };\r\n\r\n  return (\r\n    <Modal show={show} onHide={handleClose}>\r\n      <Modal.Header closeButton>\r\n        <Modal.Title>Assign Appointment Details</Modal.Title>\r\n      </Modal.Header>\r\n      <Modal.Body>\r\n        {error && <p style={{ color: 'red' }}>{error}</p>}\r\n        <Form.Group controlId=\"formAssignDoctor\">\r\n          <Form.Label>Assign Doctor</Form.Label>\r\n          <Form.Control\r\n            as=\"select\"\r\n            value={selectedDoctor}\r\n            onChange={(e) => setSelectedDoctor(e.target.value)}\r\n          >\r\n            <option value=\"\">Select Doctor</option>\r\n            {alldoctors.map(doctor => (\r\n              <option key={doctor._id} value={doctor._id}>\r\n                {`${doctor.dr_firstName} ${doctor.dr_middleInitial}. ${doctor.dr_lastName}`}\r\n              </option>\r\n            ))}\r\n          </Form.Control>\r\n        </Form.Group>\r\n\r\n        <Form.Group controlId=\"formAssignDate\">\r\n          <Form.Label>Assign Date</Form.Label>\r\n          <Form.Control\r\n            type=\"date\"\r\n            value={selectedDate}\r\n            onChange={(e) => setSelectedDate(e.target.value)}\r\n          />\r\n        </Form.Group>\r\n\r\n        <Form.Group controlId=\"formAssignTime\">\r\n          <Form.Label>Assign Time (AM/PM)</Form.Label>\r\n          <Form.Control\r\n            type=\"time\"\r\n            value={selectedTime}\r\n            onChange={handleTimeChange}\r\n          />\r\n        </Form.Group>\r\n      </Modal.Body>\r\n      <Modal.Footer>\r\n        <Button variant=\"secondary\" onClick={handleClose}>\r\n          Cancel\r\n        </Button>\r\n        <Button variant=\"primary\" onClick={handleSaveDetails}>\r\n          Save\r\n        </Button>\r\n      </Modal.Footer>\r\n    </Modal>\r\n  );\r\n};\r\n\r\nexport default AssignAppointmentModal;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}