{"ast":null,"code":"var _jsxFileName = \"E:\\\\School\\\\School\\\\Integrative Programming\\\\medical-appointment\\\\src\\\\components\\\\staffs\\\\medical secretary\\\\components\\\\Appointments\\\\AssignAppointmentModal.jsx\",\n  _s = $RefreshSig$();\nimport axios from \"axios\";\nimport { useState, useEffect } from \"react\";\nimport { Button, Form, Modal } from 'react-bootstrap';\nimport Select from 'react-select'; // Import react-select\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction AssignAppointmentModal({\n  show,\n  handleClose,\n  pid\n}) {\n  _s();\n  const [doctors, setDoctors] = useState([]);\n  const [selectedDoctor, setSelectedDoctor] = useState(null);\n  const [date, setDate] = useState(\"\");\n  const [time, setTime] = useState(\"\");\n  const [availableTimes, setAvailableTimes] = useState([]);\n  const [availability, setAvailability] = useState({});\n  const [activeAppointmentStatus, setActiveAppointmentStatus] = useState(true);\n\n  // Fetch all doctors\n  useEffect(() => {\n    axios.get(`http://localhost:8000/doctor/api/alldoctor`).then(response => {\n      const doctorOptions = response.data.theDoctor.map(doctor => ({\n        value: doctor._id,\n        // This must be a valid MongoDB ObjectId\n        label: `${doctor.dr_firstName} ${doctor.dr_middleInitial}. ${doctor.dr_lastName}`\n      }));\n      setDoctors(doctorOptions);\n    }).catch(err => {\n      console.log(err);\n    });\n  }, []);\n\n  // Fetch doctor's availability based on the selected doctor\n  useEffect(() => {\n    if (selectedDoctor) {\n      axios.get(`http://localhost:8000/doctor/${selectedDoctor.value}`).then(response => {\n        const doctor = response.data.doctor;\n        setAvailability(doctor.availability || {});\n        setActiveAppointmentStatus(doctor.activeAppointmentStatus);\n      }).catch(err => {\n        console.log(err);\n      });\n    } else {\n      setAvailability({});\n      setAvailableTimes([]);\n    }\n  }, [selectedDoctor]);\n  const createAppointment = () => {\n    console.log('Selected Doctor:', selectedDoctor);\n    console.log('PID:', pid);\n    if (!date || !time) {\n      window.alert(\"Please select a valid date and time.\");\n      return;\n    }\n    const formData = {\n      doctor: selectedDoctor ? selectedDoctor.value : null,\n      // Ensure it's a valid ObjectId\n      pid,\n      // Make sure this is a valid ObjectId\n      date,\n      time\n    };\n    console.log('Form Data:', formData);\n    axios.post(`http://localhost:8000/patient/api/${pid}/createappointment`, formData).then(() => {\n      window.alert(\"Created an appointment!\");\n      window.location.reload();\n    }).catch(err => {\n      if (err.response) {\n        console.log(err.response.data);\n        window.alert(`Error: ${err.response.data.message}`);\n      } else {\n        console.log(err);\n        window.alert('An error occurred while creating the appointment.');\n      }\n    });\n  };\n  return /*#__PURE__*/_jsxDEV(Modal, {\n    show: show,\n    onHide: handleClose,\n    children: [/*#__PURE__*/_jsxDEV(Modal.Header, {\n      closeButton: true,\n      children: /*#__PURE__*/_jsxDEV(Modal.Title, {\n        children: \"Assign Appointment\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 85,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 84,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(Modal.Body, {\n      children: [/*#__PURE__*/_jsxDEV(Form.Group, {\n        children: [/*#__PURE__*/_jsxDEV(Form.Label, {\n          children: \"Select Doctor\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 89,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(Select, {\n          options: doctors,\n          value: selectedDoctor,\n          onChange: selected => setSelectedDoctor(selected),\n          placeholder: \"Search for a doctor\",\n          isClearable: true\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 90,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 88,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(Form.Group, {\n        children: [/*#__PURE__*/_jsxDEV(Form.Label, {\n          children: \"Date\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 100,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(Form.Control, {\n          type: \"date\",\n          value: date,\n          onChange: e => setDate(e.target.value)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 101,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 99,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(Form.Group, {\n        children: [/*#__PURE__*/_jsxDEV(Form.Label, {\n          children: \"Time\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 109,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(Form.Control, {\n          type: \"time\",\n          value: time,\n          onChange: e => setTime(e.target.value)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 110,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 108,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 87,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(Modal.Footer, {\n      children: [/*#__PURE__*/_jsxDEV(Button, {\n        variant: \"secondary\",\n        onClick: handleClose,\n        children: \"Close\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 118,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(Button, {\n        variant: \"primary\",\n        onClick: createAppointment,\n        children: \"Submit\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 121,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 117,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 83,\n    columnNumber: 9\n  }, this);\n}\n_s(AssignAppointmentModal, \"LSdQGpQcPMvTpx6Z8BTwoBe010I=\");\n_c = AssignAppointmentModal;\nexport default AssignAppointmentModal;\nvar _c;\n$RefreshReg$(_c, \"AssignAppointmentModal\");","map":{"version":3,"names":["axios","useState","useEffect","Button","Form","Modal","Select","jsxDEV","_jsxDEV","AssignAppointmentModal","show","handleClose","pid","_s","doctors","setDoctors","selectedDoctor","setSelectedDoctor","date","setDate","time","setTime","availableTimes","setAvailableTimes","availability","setAvailability","activeAppointmentStatus","setActiveAppointmentStatus","get","then","response","doctorOptions","data","theDoctor","map","doctor","value","_id","label","dr_firstName","dr_middleInitial","dr_lastName","catch","err","console","log","createAppointment","window","alert","formData","post","location","reload","message","onHide","children","Header","closeButton","Title","fileName","_jsxFileName","lineNumber","columnNumber","Body","Group","Label","options","onChange","selected","placeholder","isClearable","Control","type","e","target","Footer","variant","onClick","_c","$RefreshReg$"],"sources":["E:/School/School/Integrative Programming/medical-appointment/src/components/staffs/medical secretary/components/Appointments/AssignAppointmentModal.jsx"],"sourcesContent":["import axios from \"axios\";\r\nimport { useState, useEffect } from \"react\";\r\nimport { Button, Form, Modal } from 'react-bootstrap';\r\nimport Select from 'react-select'; // Import react-select\r\n\r\nfunction AssignAppointmentModal({ show, handleClose, pid }) {\r\n    const [doctors, setDoctors] = useState([]);\r\n    const [selectedDoctor, setSelectedDoctor] = useState(null);\r\n    const [date, setDate] = useState(\"\");\r\n    const [time, setTime] = useState(\"\");\r\n    const [availableTimes, setAvailableTimes] = useState([]);\r\n    const [availability, setAvailability] = useState({});\r\n    const [activeAppointmentStatus, setActiveAppointmentStatus] = useState(true);\r\n\r\n    // Fetch all doctors\r\n    useEffect(() => {\r\n        axios.get(`http://localhost:8000/doctor/api/alldoctor`)\r\n            .then((response) => {\r\n                const doctorOptions = response.data.theDoctor.map((doctor) => ({\r\n                    value: doctor._id, // This must be a valid MongoDB ObjectId\r\n                    label: `${doctor.dr_firstName} ${doctor.dr_middleInitial}. ${doctor.dr_lastName}`,\r\n                }));\r\n                setDoctors(doctorOptions);\r\n            })\r\n            .catch((err) => {\r\n                console.log(err);\r\n            });\r\n    }, []);\r\n\r\n    // Fetch doctor's availability based on the selected doctor\r\n    useEffect(() => {\r\n        if (selectedDoctor) {\r\n            axios.get(`http://localhost:8000/doctor/${selectedDoctor.value}`)\r\n                .then((response) => {\r\n                    const doctor = response.data.doctor;\r\n                    setAvailability(doctor.availability || {});\r\n                    setActiveAppointmentStatus(doctor.activeAppointmentStatus);\r\n                })\r\n                .catch((err) => {\r\n                    console.log(err);\r\n                });\r\n        } else {\r\n            setAvailability({});\r\n            setAvailableTimes([]);\r\n        }\r\n    }, [selectedDoctor]);\r\n\r\n    const createAppointment = () => {\r\n        console.log('Selected Doctor:', selectedDoctor);\r\n        console.log('PID:', pid);\r\n\r\n        if (!date || !time) {\r\n            window.alert(\"Please select a valid date and time.\");\r\n            return;\r\n        }\r\n\r\n        const formData = {\r\n            doctor: selectedDoctor ? selectedDoctor.value : null, // Ensure it's a valid ObjectId\r\n            pid, // Make sure this is a valid ObjectId\r\n            date,\r\n            time,\r\n        };\r\n\r\n        console.log('Form Data:', formData);\r\n\r\n        axios.post(`http://localhost:8000/patient/api/${pid}/createappointment`, formData)\r\n            .then(() => {\r\n                window.alert(\"Created an appointment!\");\r\n                window.location.reload();\r\n            })\r\n            .catch((err) => {\r\n                if (err.response) {\r\n                    console.log(err.response.data);\r\n                    window.alert(`Error: ${err.response.data.message}`);\r\n                } else {\r\n                    console.log(err);\r\n                    window.alert('An error occurred while creating the appointment.');\r\n                }\r\n            });\r\n    };\r\n\r\n    return (\r\n        <Modal show={show} onHide={handleClose}>\r\n            <Modal.Header closeButton>\r\n                <Modal.Title>Assign Appointment</Modal.Title>\r\n            </Modal.Header>\r\n            <Modal.Body>\r\n                <Form.Group>\r\n                    <Form.Label>Select Doctor</Form.Label>\r\n                    <Select\r\n                        options={doctors}\r\n                        value={selectedDoctor}\r\n                        onChange={(selected) => setSelectedDoctor(selected)}\r\n                        placeholder=\"Search for a doctor\"\r\n                        isClearable={true}\r\n                    />\r\n                </Form.Group>\r\n\r\n                <Form.Group>\r\n                    <Form.Label>Date</Form.Label>\r\n                    <Form.Control\r\n                        type=\"date\"\r\n                        value={date}\r\n                        onChange={(e) => setDate(e.target.value)}\r\n                    />\r\n                </Form.Group>\r\n\r\n                <Form.Group>\r\n                    <Form.Label>Time</Form.Label>\r\n                    <Form.Control\r\n                        type=\"time\"\r\n                        value={time}\r\n                        onChange={(e) => setTime(e.target.value)}\r\n                    />\r\n                </Form.Group>\r\n            </Modal.Body>\r\n            <Modal.Footer>\r\n                <Button variant=\"secondary\" onClick={handleClose}>\r\n                    Close\r\n                </Button>\r\n                <Button variant=\"primary\" onClick={createAppointment}>\r\n                    Submit\r\n                </Button>\r\n            </Modal.Footer>\r\n        </Modal>\r\n    );\r\n}\r\n\r\nexport default AssignAppointmentModal;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}