{"ast":null,"code":"var _jsxFileName = \"E:\\\\School\\\\School\\\\Integrative Programming\\\\medical-appointment\\\\src\\\\components\\\\login\\\\NewSignUp.js\",\n  _s = $RefreshSig$();\nimport axios from \"axios\";\nimport { useEffect, useState } from \"react\";\nimport { Link, useNavigate } from \"react-router-dom\";\nimport { Row, Col, Button, Form, Container, Card } from \"react-bootstrap\";\nimport PasswordValidation from \"./PasswordValidation\";\nimport \"./SignUp.css\";\nimport NavigationalBar from '../landpage/navbar';\nimport { jsxDEV as _jsxDEV, Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst NewSignUp = () => {\n  _s();\n  const navigate = useNavigate();\n  const [ufirstName, setfirstName] = useState(\"\");\n  const [uLastName, setLastName] = useState(\"\");\n  const [uAge, setAge] = useState(0);\n  const [uMiddleInitial, setMiddleInitial] = useState(\"\");\n  const [uemail, setemail] = useState(\"\");\n  const [uBirth, setBirth] = useState(\"\");\n  const [upassword, setPass] = useState(\"\");\n  const [confirmPassword, setConfirmPassword] = useState(\"\");\n  const [uNumber, setNumber] = useState(\"\");\n  const [uGender, setGender] = useState(\"\");\n  const [urole, setURole] = useState(\"\");\n  const [accountStatus, setAccountStatus] = useState('Registered');\n\n  // Practitioner-specific fields\n  const [dr_licenseNo, setLicenseNo] = useState(\"\");\n\n  // Patient-specific fields\n  const [patientAddress, setPatientAddress] = useState({\n    street: \"\",\n    city: \"\",\n    state: \"\",\n    zipCode: \"\",\n    country: \"\"\n  });\n  const [patientNationality, setPatientNationality] = useState(\"\");\n  const [patientCivilStatus, setPatientCivilStatus] = useState(\"\");\n  const [errors, setErrors] = useState({\n    firstName: \"\",\n    lastName: \"\",\n    email: \"\",\n    password: \"\",\n    confirmPassword: \"\",\n    birth: \"\",\n    number: \"\",\n    gender: \"\",\n    role: \"\"\n  });\n\n  // Validation function\n  const validateForm = () => {\n    const newErrors = {};\n    if (!ufirstName) newErrors.firstName = \"First Name is required\";\n    if (!uLastName) newErrors.lastName = \"Last Name is required\";\n    if (!uemail || !/^[\\w-\\.]+@([\\w-]+\\.)+[\\w-]{2,4}$/.test(uemail)) newErrors.email = \"Valid Email is required\";\n    if (!upassword) newErrors.password = \"Password is required\";\n    if (upassword !== confirmPassword) newErrors.confirmPassword = \"Passwords do not match\";\n    if (!uBirth) newErrors.birth = \"Birthdate is required\";\n    if (!uNumber) newErrors.number = \"Contact Number is required\";\n    if (!uGender) newErrors.gender = \"Gender is required\";\n    if (!urole) newErrors.role = \"Role is required\";\n    setErrors(newErrors);\n    return Object.keys(newErrors).length === 0; // Returns true if no errors\n  };\n\n  // Field Blur Handler (for validation on blur)\n  const handleBlur = (field, value) => {\n    let error = \"\";\n    switch (field) {\n      case \"firstName\":\n        error = !value ? \"First Name is required\" : \"\";\n        break;\n      case \"lastName\":\n        error = !value ? \"Last Name is required\" : \"\";\n        break;\n      case \"email\":\n        error = !value || !/^[\\w-\\.]+@([\\w-]+\\.)+[\\w-]{2,4}$/.test(value) ? \"Valid Email is required\" : \"\";\n        break;\n      case \"password\":\n        error = !value ? \"Password is required\" : \"\";\n        break;\n      case \"confirmPassword\":\n        error = value !== upassword ? \"Passwords do not match\" : \"\";\n        break;\n      case \"birth\":\n        error = !value ? \"Birthdate is required\" : \"\";\n        break;\n      case \"number\":\n        error = !value ? \"Contact Number is required\" : \"\";\n        break;\n      case \"gender\":\n        error = !value ? \"Gender is required\" : \"\";\n        break;\n      case \"role\":\n        error = !value ? \"Role is required\" : \"\";\n        break;\n      default:\n        break;\n    }\n    setErrors(prevErrors => ({\n      ...prevErrors,\n      [field]: error\n    }));\n  };\n  const registerUser = () => {\n    if (!validateForm()) {\n      return;\n    }\n    if (urole === \"Practitioner\") {\n      const doctorUser = {\n        dr_firstName: ufirstName,\n        dr_lastName: uLastName,\n        dr_middleInitial: uMiddleInitial,\n        dr_email: uemail,\n        dr_password: upassword,\n        dr_dob: uBirth,\n        dr_age: uAge,\n        dr_contactNumber: uNumber,\n        dr_gender: uGender,\n        dr_licenseNo: dr_licenseNo // Practitioner-specific field\n      };\n      axios.post('http://localhost:8000/doctor/api/signup', doctorUser).then(response => {\n        console.log(response);\n        window.alert(\"Successfully registered Practitioner\");\n        navigate('/medapp/login');\n      }).catch(err => {\n        console.log(err);\n      });\n    } else if (urole === \"Patient\") {\n      const patientUser = {\n        patient_firstName: ufirstName,\n        patient_middleInitial: uMiddleInitial,\n        patient_lastName: uLastName,\n        patient_email: uemail,\n        patient_password: upassword,\n        patient_dob: uBirth,\n        patient_age: uAge,\n        patient_contactNumber: uNumber,\n        patient_gender: uGender,\n        accountStatus: accountStatus,\n        patient_address: patientAddress,\n        // Patient-specific field\n        patient_nationality: patientNationality,\n        patient_civilstatus: patientCivilStatus\n      };\n      console.log(patientUser);\n      axios.post('http://localhost:8000/patient/api/signup', patientUser).then(response => {\n        console.log(response);\n        window.alert(\"Successfully registered Patient\");\n        navigate('/medapp/login');\n      }).catch(err => {\n        console.log(err);\n      });\n    }\n  };\n  const calculateAge = dob => {\n    const birthDate = new Date(dob);\n    const today = new Date();\n    let age = today.getFullYear() - birthDate.getFullYear();\n    const monthDifference = today.getMonth() - birthDate.getMonth();\n    if (monthDifference < 0 || monthDifference === 0 && today.getDate() < birthDate.getDate()) {\n      age--;\n    }\n    return age;\n  };\n  useEffect(() => {\n    if (uBirth) {\n      const age = calculateAge(uBirth);\n      setAge(age);\n    }\n  }, [uBirth]);\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(NavigationalBar, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 180,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(Container, {\n      className: \"d-flex justify-content-center align-items-center vh-100\",\n      children: /*#__PURE__*/_jsxDEV(Card, {\n        className: \"container\",\n        children: /*#__PURE__*/_jsxDEV(Card.Body, {\n          children: /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"container\",\n            children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n              children: \"Sign Up\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 185,\n              columnNumber: 29\n            }, this), /*#__PURE__*/_jsxDEV(\"hr\", {}, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 186,\n              columnNumber: 29\n            }, this), /*#__PURE__*/_jsxDEV(Form, {\n              children: [/*#__PURE__*/_jsxDEV(Row, {\n                className: \"mb-3\",\n                children: [/*#__PURE__*/_jsxDEV(Form.Group, {\n                  as: Col,\n                  controlId: \"formFName\",\n                  children: [/*#__PURE__*/_jsxDEV(Form.Label, {\n                    children: \"First Name\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 191,\n                    columnNumber: 41\n                  }, this), /*#__PURE__*/_jsxDEV(Form.Control, {\n                    type: \"text\",\n                    placeholder: \"Enter First Name\",\n                    onBlur: e => handleBlur(\"firstName\", e.target.value),\n                    onChange: e => setfirstName(e.target.value)\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 192,\n                    columnNumber: 41\n                  }, this)]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 190,\n                  columnNumber: 37\n                }, this), /*#__PURE__*/_jsxDEV(Form.Group, {\n                  as: Col,\n                  controlId: \"formLName\",\n                  children: [/*#__PURE__*/_jsxDEV(Form.Label, {\n                    children: \"Last Name\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 201,\n                    columnNumber: 41\n                  }, this), /*#__PURE__*/_jsxDEV(Form.Control, {\n                    type: \"text\",\n                    placeholder: \"Enter Last Name\",\n                    onBlur: e => handleBlur(\"lastName\", e.target.value),\n                    onChange: e => setLastName(e.target.value)\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 202,\n                    columnNumber: 41\n                  }, this)]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 200,\n                  columnNumber: 37\n                }, this), /*#__PURE__*/_jsxDEV(Form.Group, {\n                  as: Col,\n                  controlId: \"formMName\",\n                  children: [/*#__PURE__*/_jsxDEV(Form.Label, {\n                    children: \"Middle Initial\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 211,\n                    columnNumber: 41\n                  }, this), /*#__PURE__*/_jsxDEV(Form.Control, {\n                    type: \"text\",\n                    placeholder: \"Enter Middle Initial\",\n                    onChange: e => setMiddleInitial(e.target.value)\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 212,\n                    columnNumber: 41\n                  }, this)]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 210,\n                  columnNumber: 37\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 189,\n                columnNumber: 33\n              }, this), /*#__PURE__*/_jsxDEV(Row, {\n                children: [/*#__PURE__*/_jsxDEV(Form.Group, {\n                  as: Col,\n                  className: \"mb-3\",\n                  controlId: \"formBirthDate\",\n                  children: [/*#__PURE__*/_jsxDEV(Form.Label, {\n                    children: \"Birthdate\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 222,\n                    columnNumber: 41\n                  }, this), /*#__PURE__*/_jsxDEV(Form.Control, {\n                    type: \"date\",\n                    placeholder: \"Enter Birthdate\",\n                    onBlur: e => handleBlur(\"birth\", e.target.value),\n                    onChange: e => setBirth(e.target.value)\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 223,\n                    columnNumber: 41\n                  }, this)]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 221,\n                  columnNumber: 37\n                }, this), /*#__PURE__*/_jsxDEV(Form.Group, {\n                  as: Col,\n                  className: \"mb-3\",\n                  controlId: \"formContactNumber\",\n                  children: [/*#__PURE__*/_jsxDEV(Form.Label, {\n                    children: \"Contact Number\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 232,\n                    columnNumber: 41\n                  }, this), /*#__PURE__*/_jsxDEV(Form.Control, {\n                    type: \"text\",\n                    placeholder: \"Enter Contact Number (e.g., 09123456789)\",\n                    onBlur: e => handleBlur(\"number\", e.target.value),\n                    onChange: e => setNumber(e.target.value),\n                    maxLength: 11\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 233,\n                    columnNumber: 41\n                  }, this)]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 231,\n                  columnNumber: 37\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 220,\n                columnNumber: 33\n              }, this), /*#__PURE__*/_jsxDEV(Row, {\n                children: /*#__PURE__*/_jsxDEV(Form.Group, {\n                  as: Col,\n                  className: \"mb-3\",\n                  controlId: \"formEmail\",\n                  children: [/*#__PURE__*/_jsxDEV(Form.Label, {\n                    children: \"Email\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 245,\n                    columnNumber: 41\n                  }, this), /*#__PURE__*/_jsxDEV(Form.Control, {\n                    type: \"email\",\n                    placeholder: \"Enter Email Address\",\n                    onBlur: e => handleBlur(\"email\", e.target.value),\n                    onChange: e => setemail(e.target.value)\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 246,\n                    columnNumber: 41\n                  }, this)]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 244,\n                  columnNumber: 37\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 243,\n                columnNumber: 33\n              }, this), /*#__PURE__*/_jsxDEV(Row, {\n                children: /*#__PURE__*/_jsxDEV(Form.Group, {\n                  className: \"mb-3\",\n                  controlId: \"formPassword\",\n                  children: [/*#__PURE__*/_jsxDEV(Form.Label, {\n                    children: \"Password\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 257,\n                    columnNumber: 41\n                  }, this), /*#__PURE__*/_jsxDEV(Form.Control, {\n                    type: \"password\",\n                    placeholder: \"Enter Password\",\n                    onBlur: e => handleBlur(\"password\", e.target.value),\n                    onChange: e => setPass(e.target.value)\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 258,\n                    columnNumber: 41\n                  }, this)]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 256,\n                  columnNumber: 37\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 255,\n                columnNumber: 33\n              }, this), /*#__PURE__*/_jsxDEV(Row, {\n                children: /*#__PURE__*/_jsxDEV(Form.Group, {\n                  className: \"mb-3\",\n                  controlId: \"formConfirmPassword\",\n                  children: [/*#__PURE__*/_jsxDEV(Form.Label, {\n                    children: \"Confirm Password\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 269,\n                    columnNumber: 41\n                  }, this), /*#__PURE__*/_jsxDEV(Form.Control, {\n                    type: \"password\",\n                    placeholder: \"Confirm Password\",\n                    onBlur: e => handleBlur(\"confirmPassword\", e.target.value),\n                    onChange: e => setConfirmPassword(e.target.value)\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 270,\n                    columnNumber: 41\n                  }, this)]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 268,\n                  columnNumber: 37\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 267,\n                columnNumber: 33\n              }, this), /*#__PURE__*/_jsxDEV(PasswordValidation, {\n                password: upassword\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 280,\n                columnNumber: 33\n              }, this), urole === \"Patient\" && /*#__PURE__*/_jsxDEV(_Fragment, {\n                children: [/*#__PURE__*/_jsxDEV(Row, {\n                  children: [/*#__PURE__*/_jsxDEV(Form.Group, {\n                    as: Col,\n                    controlId: \"formStreet\",\n                    children: [/*#__PURE__*/_jsxDEV(Form.Label, {\n                      children: \"Street\"\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 285,\n                      columnNumber: 49\n                    }, this), /*#__PURE__*/_jsxDEV(Form.Control, {\n                      type: \"text\",\n                      placeholder: \"Enter Street\",\n                      onChange: e => setPatientAddress({\n                        ...patientAddress,\n                        street: e.target.value\n                      })\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 286,\n                      columnNumber: 49\n                    }, this)]\n                  }, void 0, true, {\n                    fileName: _jsxFileName,\n                    lineNumber: 284,\n                    columnNumber: 45\n                  }, this), /*#__PURE__*/_jsxDEV(Form.Group, {\n                    as: Col,\n                    controlId: \"formCity\",\n                    children: [/*#__PURE__*/_jsxDEV(Form.Label, {\n                      children: \"City\"\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 293,\n                      columnNumber: 49\n                    }, this), /*#__PURE__*/_jsxDEV(Form.Control, {\n                      type: \"text\",\n                      placeholder: \"Enter City\",\n                      onChange: e => setPatientAddress({\n                        ...patientAddress,\n                        city: e.target.value\n                      })\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 294,\n                      columnNumber: 49\n                    }, this)]\n                  }, void 0, true, {\n                    fileName: _jsxFileName,\n                    lineNumber: 292,\n                    columnNumber: 45\n                  }, this)]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 283,\n                  columnNumber: 41\n                }, this), /*#__PURE__*/_jsxDEV(Row, {\n                  children: [/*#__PURE__*/_jsxDEV(Form.Group, {\n                    as: Col,\n                    controlId: \"formNationality\",\n                    children: [/*#__PURE__*/_jsxDEV(Form.Label, {\n                      children: \"Nationality\"\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 304,\n                      columnNumber: 49\n                    }, this), /*#__PURE__*/_jsxDEV(Form.Control, {\n                      type: \"text\",\n                      placeholder: \"Enter Nationality\",\n                      onChange: e => setPatientNationality(e.target.value)\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 305,\n                      columnNumber: 49\n                    }, this)]\n                  }, void 0, true, {\n                    fileName: _jsxFileName,\n                    lineNumber: 303,\n                    columnNumber: 45\n                  }, this), /*#__PURE__*/_jsxDEV(Form.Group, {\n                    as: Col,\n                    controlId: \"formCivilStatus\",\n                    children: [/*#__PURE__*/_jsxDEV(Form.Label, {\n                      children: \"Civil Status\"\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 312,\n                      columnNumber: 49\n                    }, this), /*#__PURE__*/_jsxDEV(Form.Control, {\n                      type: \"text\",\n                      placeholder: \"Enter Civil Status\",\n                      onChange: e => setPatientCivilStatus(e.target.value)\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 313,\n                      columnNumber: 49\n                    }, this)]\n                  }, void 0, true, {\n                    fileName: _jsxFileName,\n                    lineNumber: 311,\n                    columnNumber: 45\n                  }, this)]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 302,\n                  columnNumber: 41\n                }, this)]\n              }, void 0, true), urole === \"Practitioner\" && /*#__PURE__*/_jsxDEV(Row, {\n                children: /*#__PURE__*/_jsxDEV(Form.Group, {\n                  as: Col,\n                  controlId: \"formLicenseNo\",\n                  children: [/*#__PURE__*/_jsxDEV(Form.Label, {\n                    children: \"License Number\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 326,\n                    columnNumber: 45\n                  }, this), /*#__PURE__*/_jsxDEV(Form.Control, {\n                    type: \"text\",\n                    placeholder: \"Enter License Number\",\n                    onChange: e => setLicenseNo(e.target.value)\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 327,\n                    columnNumber: 45\n                  }, this)]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 325,\n                  columnNumber: 41\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 324,\n                columnNumber: 37\n              }, this), /*#__PURE__*/_jsxDEV(Row, {\n                children: [/*#__PURE__*/_jsxDEV(Form.Group, {\n                  as: Col,\n                  controlId: \"formChooseGender\",\n                  children: [/*#__PURE__*/_jsxDEV(Form.Label, {\n                    children: \"Gender:\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 338,\n                    columnNumber: 41\n                  }, this), /*#__PURE__*/_jsxDEV(Form.Select, {\n                    onBlur: e => handleBlur(\"gender\", e.target.value),\n                    onChange: e => setGender(e.target.value),\n                    defaultValue: \"\",\n                    children: [/*#__PURE__*/_jsxDEV(\"option\", {\n                      value: \"\",\n                      disabled: true,\n                      children: \"Select Gender\"\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 344,\n                      columnNumber: 45\n                    }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n                      value: \"Male\",\n                      children: \"Male\"\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 345,\n                      columnNumber: 45\n                    }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n                      value: \"Female\",\n                      children: \"Female\"\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 346,\n                      columnNumber: 45\n                    }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n                      value: \"Other\",\n                      children: \"Other\"\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 347,\n                      columnNumber: 45\n                    }, this)]\n                  }, void 0, true, {\n                    fileName: _jsxFileName,\n                    lineNumber: 339,\n                    columnNumber: 41\n                  }, this)]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 337,\n                  columnNumber: 37\n                }, this), /*#__PURE__*/_jsxDEV(Form.Group, {\n                  as: Col,\n                  controlId: \"formChoose\",\n                  children: [/*#__PURE__*/_jsxDEV(Form.Label, {\n                    children: \"Choose what to register:\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 352,\n                    columnNumber: 41\n                  }, this), /*#__PURE__*/_jsxDEV(Form.Select, {\n                    onBlur: e => handleBlur(\"role\", e.target.value),\n                    onChange: e => setURole(e.target.value),\n                    defaultValue: \"\",\n                    children: [/*#__PURE__*/_jsxDEV(\"option\", {\n                      value: \"\",\n                      disabled: true,\n                      children: \"Choose...\"\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 358,\n                      columnNumber: 45\n                    }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n                      value: \"Patient\",\n                      children: \"Patient\"\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 359,\n                      columnNumber: 45\n                    }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n                      value: \"Practitioner\",\n                      children: \"Practitioner\"\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 360,\n                      columnNumber: 45\n                    }, this)]\n                  }, void 0, true, {\n                    fileName: _jsxFileName,\n                    lineNumber: 353,\n                    columnNumber: 41\n                  }, this)]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 351,\n                  columnNumber: 37\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 336,\n                columnNumber: 33\n              }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"d-lg-flex justify-content-between align-items-center mt-3\",\n                children: [/*#__PURE__*/_jsxDEV(Button, {\n                  onClick: registerUser,\n                  variant: \"primary\",\n                  type: \"button\",\n                  children: \"Submit\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 371,\n                  columnNumber: 37\n                }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                  className: \"mb-0\",\n                  children: /*#__PURE__*/_jsxDEV(Link, {\n                    to: \"/medapp/login\",\n                    children: \"Already have an account?\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 375,\n                    columnNumber: 41\n                  }, this)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 374,\n                  columnNumber: 37\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 370,\n                columnNumber: 33\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 187,\n              columnNumber: 29\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 184,\n            columnNumber: 25\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 183,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 182,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 181,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true);\n};\n_s(NewSignUp, \"Py8naLZh8m1QVRJuvL9rczqcG9k=\", false, function () {\n  return [useNavigate];\n});\n_c = NewSignUp;\nexport default NewSignUp;\nvar _c;\n$RefreshReg$(_c, \"NewSignUp\");","map":{"version":3,"names":["axios","useEffect","useState","Link","useNavigate","Row","Col","Button","Form","Container","Card","PasswordValidation","NavigationalBar","jsxDEV","_jsxDEV","Fragment","_Fragment","NewSignUp","_s","navigate","ufirstName","setfirstName","uLastName","setLastName","uAge","setAge","uMiddleInitial","setMiddleInitial","uemail","setemail","uBirth","setBirth","upassword","setPass","confirmPassword","setConfirmPassword","uNumber","setNumber","uGender","setGender","urole","setURole","accountStatus","setAccountStatus","dr_licenseNo","setLicenseNo","patientAddress","setPatientAddress","street","city","state","zipCode","country","patientNationality","setPatientNationality","patientCivilStatus","setPatientCivilStatus","errors","setErrors","firstName","lastName","email","password","birth","number","gender","role","validateForm","newErrors","test","Object","keys","length","handleBlur","field","value","error","prevErrors","registerUser","doctorUser","dr_firstName","dr_lastName","dr_middleInitial","dr_email","dr_password","dr_dob","dr_age","dr_contactNumber","dr_gender","post","then","response","console","log","window","alert","catch","err","patientUser","patient_firstName","patient_middleInitial","patient_lastName","patient_email","patient_password","patient_dob","patient_age","patient_contactNumber","patient_gender","patient_address","patient_nationality","patient_civilstatus","calculateAge","dob","birthDate","Date","today","age","getFullYear","monthDifference","getMonth","getDate","children","fileName","_jsxFileName","lineNumber","columnNumber","className","Body","Group","as","controlId","Label","Control","type","placeholder","onBlur","e","target","onChange","maxLength","Select","defaultValue","disabled","onClick","variant","to","_c","$RefreshReg$"],"sources":["E:/School/School/Integrative Programming/medical-appointment/src/components/login/NewSignUp.js"],"sourcesContent":["import axios from \"axios\";\r\nimport { useEffect, useState } from \"react\";\r\nimport { Link, useNavigate } from \"react-router-dom\";\r\nimport { Row, Col, Button, Form, Container, Card } from \"react-bootstrap\";\r\nimport PasswordValidation from \"./PasswordValidation\";\r\nimport \"./SignUp.css\";\r\nimport NavigationalBar from '../landpage/navbar';\r\n\r\nconst NewSignUp = () => {\r\n    const navigate = useNavigate();\r\n    const [ufirstName, setfirstName] = useState(\"\");\r\n    const [uLastName, setLastName] = useState(\"\");\r\n    const [uAge, setAge] = useState(0);\r\n    const [uMiddleInitial, setMiddleInitial] = useState(\"\");\r\n    const [uemail, setemail] = useState(\"\");\r\n    const [uBirth, setBirth] = useState(\"\");\r\n    const [upassword, setPass] = useState(\"\");\r\n    const [confirmPassword, setConfirmPassword] = useState(\"\");\r\n    const [uNumber, setNumber] = useState(\"\");\r\n    const [uGender, setGender] = useState(\"\");\r\n    const [urole, setURole] = useState(\"\");\r\n    const [accountStatus, setAccountStatus] = useState('Registered');\r\n\r\n    // Practitioner-specific fields\r\n    const [dr_licenseNo, setLicenseNo] = useState(\"\");\r\n\r\n    // Patient-specific fields\r\n    const [patientAddress, setPatientAddress] = useState({\r\n        street: \"\",\r\n        city: \"\",\r\n        state: \"\",\r\n        zipCode: \"\",\r\n        country: \"\",\r\n    });\r\n    const [patientNationality, setPatientNationality] = useState(\"\");\r\n    const [patientCivilStatus, setPatientCivilStatus] = useState(\"\");\r\n\r\n    const [errors, setErrors] = useState({\r\n        firstName: \"\",\r\n        lastName: \"\",\r\n        email: \"\",\r\n        password: \"\",\r\n        confirmPassword: \"\",\r\n        birth: \"\",\r\n        number: \"\",\r\n        gender: \"\",\r\n        role: \"\",\r\n    });\r\n\r\n    // Validation function\r\n    const validateForm = () => {\r\n        const newErrors = {};\r\n        if (!ufirstName) newErrors.firstName = \"First Name is required\";\r\n        if (!uLastName) newErrors.lastName = \"Last Name is required\";\r\n        if (!uemail || !/^[\\w-\\.]+@([\\w-]+\\.)+[\\w-]{2,4}$/.test(uemail)) newErrors.email = \"Valid Email is required\";\r\n        if (!upassword) newErrors.password = \"Password is required\";\r\n        if (upassword !== confirmPassword) newErrors.confirmPassword = \"Passwords do not match\";\r\n        if (!uBirth) newErrors.birth = \"Birthdate is required\";\r\n        if (!uNumber) newErrors.number = \"Contact Number is required\";\r\n        if (!uGender) newErrors.gender = \"Gender is required\";\r\n        if (!urole) newErrors.role = \"Role is required\";\r\n\r\n        setErrors(newErrors);\r\n        return Object.keys(newErrors).length === 0; // Returns true if no errors\r\n    };\r\n\r\n    // Field Blur Handler (for validation on blur)\r\n    const handleBlur = (field, value) => {\r\n        let error = \"\";\r\n        switch (field) {\r\n            case \"firstName\":\r\n                error = !value ? \"First Name is required\" : \"\";\r\n                break;\r\n            case \"lastName\":\r\n                error = !value ? \"Last Name is required\" : \"\";\r\n                break;\r\n            case \"email\":\r\n                error = !value || !/^[\\w-\\.]+@([\\w-]+\\.)+[\\w-]{2,4}$/.test(value) ? \"Valid Email is required\" : \"\";\r\n                break;\r\n            case \"password\":\r\n                error = !value ? \"Password is required\" : \"\";\r\n                break;\r\n            case \"confirmPassword\":\r\n                error = value !== upassword ? \"Passwords do not match\" : \"\";\r\n                break;\r\n            case \"birth\":\r\n                error = !value ? \"Birthdate is required\" : \"\";\r\n                break;\r\n            case \"number\":\r\n                error = !value ? \"Contact Number is required\" : \"\";\r\n                break;\r\n            case \"gender\":\r\n                error = !value ? \"Gender is required\" : \"\";\r\n                break;\r\n            case \"role\":\r\n                error = !value ? \"Role is required\" : \"\";\r\n                break;\r\n            default:\r\n                break;\r\n        }\r\n        setErrors((prevErrors) => ({ ...prevErrors, [field]: error }));\r\n    };\r\n\r\n    const registerUser = () => {\r\n        if (!validateForm()) {\r\n            return;\r\n        }\r\n\r\n        if (urole === \"Practitioner\") {\r\n            const doctorUser = {\r\n                dr_firstName: ufirstName,\r\n                dr_lastName: uLastName,\r\n                dr_middleInitial: uMiddleInitial,\r\n                dr_email: uemail,\r\n                dr_password: upassword,\r\n                dr_dob: uBirth,\r\n                dr_age: uAge,\r\n                dr_contactNumber: uNumber,\r\n                dr_gender: uGender,\r\n                dr_licenseNo: dr_licenseNo,  // Practitioner-specific field\r\n            };\r\n            axios.post('http://localhost:8000/doctor/api/signup', doctorUser)\r\n                .then((response) => {\r\n                    console.log(response);\r\n                    window.alert(\"Successfully registered Practitioner\");\r\n                    navigate('/medapp/login');\r\n                })\r\n                .catch((err) => {\r\n                    console.log(err);\r\n                });\r\n        } else if (urole === \"Patient\") {\r\n            const patientUser = {\r\n                patient_firstName: ufirstName,\r\n                patient_middleInitial: uMiddleInitial,\r\n                patient_lastName: uLastName,\r\n                patient_email: uemail,\r\n                patient_password: upassword,\r\n                patient_dob: uBirth,\r\n                patient_age: uAge,\r\n                patient_contactNumber: uNumber,\r\n                patient_gender: uGender,\r\n                accountStatus: accountStatus,\r\n                patient_address: patientAddress,  // Patient-specific field\r\n                patient_nationality: patientNationality,\r\n                patient_civilstatus: patientCivilStatus,\r\n            };\r\n            console.log(patientUser);\r\n            axios.post('http://localhost:8000/patient/api/signup', patientUser)\r\n                .then((response) => {\r\n                    console.log(response);\r\n                    window.alert(\"Successfully registered Patient\");\r\n                    navigate('/medapp/login');\r\n                })\r\n                .catch((err) => {\r\n                    console.log(err);\r\n                });\r\n        }\r\n    };\r\n\r\n    const calculateAge = (dob) => {\r\n        const birthDate = new Date(dob);\r\n        const today = new Date();\r\n        let age = today.getFullYear() - birthDate.getFullYear();\r\n        const monthDifference = today.getMonth() - birthDate.getMonth();\r\n        if (monthDifference < 0 || (monthDifference === 0 && today.getDate() < birthDate.getDate())) {\r\n            age--;\r\n        }\r\n        return age;\r\n    };\r\n\r\n    useEffect(() => {\r\n        if (uBirth) {\r\n            const age = calculateAge(uBirth);\r\n            setAge(age);\r\n        }\r\n    }, [uBirth]);\r\n\r\n    return (\r\n        <>\r\n            <NavigationalBar />\r\n            <Container className=\"d-flex justify-content-center align-items-center vh-100\">\r\n                <Card className=\"container\">\r\n                    <Card.Body>\r\n                        <div className=\"container\">\r\n                            <h1>Sign Up</h1>\r\n                            <hr />\r\n                            <Form>\r\n                                {/* Fields for name, email, password, etc. */}\r\n                                <Row className=\"mb-3\">\r\n                                    <Form.Group as={Col} controlId=\"formFName\">\r\n                                        <Form.Label>First Name</Form.Label>\r\n                                        <Form.Control\r\n                                            type=\"text\"\r\n                                            placeholder=\"Enter First Name\"\r\n                                            onBlur={(e) => handleBlur(\"firstName\", e.target.value)}\r\n                                            onChange={(e) => setfirstName(e.target.value)}\r\n                                        />\r\n                                    </Form.Group>\r\n\r\n                                    <Form.Group as={Col} controlId=\"formLName\">\r\n                                        <Form.Label>Last Name</Form.Label>\r\n                                        <Form.Control\r\n                                            type=\"text\"\r\n                                            placeholder=\"Enter Last Name\"\r\n                                            onBlur={(e) => handleBlur(\"lastName\", e.target.value)}\r\n                                            onChange={(e) => setLastName(e.target.value)}\r\n                                        />\r\n                                    </Form.Group>\r\n                                    \r\n                                    <Form.Group as={Col} controlId=\"formMName\">\r\n                                        <Form.Label>Middle Initial</Form.Label>\r\n                                        <Form.Control\r\n                                            type=\"text\"\r\n                                            placeholder=\"Enter Middle Initial\"\r\n                                            onChange={(e) => setMiddleInitial(e.target.value)}\r\n                                        />\r\n                                    </Form.Group>\r\n                                </Row>\r\n\r\n                                <Row>\r\n                                    <Form.Group as={Col} className=\"mb-3\" controlId=\"formBirthDate\">\r\n                                        <Form.Label>Birthdate</Form.Label>\r\n                                        <Form.Control\r\n                                            type=\"date\"\r\n                                            placeholder=\"Enter Birthdate\"\r\n                                            onBlur={(e) => handleBlur(\"birth\", e.target.value)}\r\n                                            onChange={(e) => setBirth(e.target.value)}\r\n                                        />\r\n                                    </Form.Group>\r\n\r\n                                    <Form.Group as={Col} className=\"mb-3\" controlId=\"formContactNumber\">\r\n                                        <Form.Label>Contact Number</Form.Label>\r\n                                        <Form.Control\r\n                                            type=\"text\"\r\n                                            placeholder=\"Enter Contact Number (e.g., 09123456789)\"\r\n                                            onBlur={(e) => handleBlur(\"number\", e.target.value)}\r\n                                            onChange={(e) => setNumber(e.target.value)}\r\n                                            maxLength={11}\r\n                                        />\r\n                                    </Form.Group>\r\n                                </Row>\r\n\r\n                                <Row>\r\n                                    <Form.Group as={Col} className=\"mb-3\" controlId=\"formEmail\">\r\n                                        <Form.Label>Email</Form.Label>\r\n                                        <Form.Control\r\n                                            type=\"email\"\r\n                                            placeholder=\"Enter Email Address\"\r\n                                            onBlur={(e) => handleBlur(\"email\", e.target.value)}\r\n                                            onChange={(e) => setemail(e.target.value)}\r\n                                        />\r\n                                    </Form.Group>\r\n                                </Row>\r\n\r\n                                <Row>\r\n                                    <Form.Group className=\"mb-3\" controlId=\"formPassword\">\r\n                                        <Form.Label>Password</Form.Label>\r\n                                        <Form.Control\r\n                                            type=\"password\"\r\n                                            placeholder=\"Enter Password\"\r\n                                            onBlur={(e) => handleBlur(\"password\", e.target.value)}\r\n                                            onChange={(e) => setPass(e.target.value)}\r\n                                        />\r\n                                    </Form.Group>\r\n                                </Row>\r\n\r\n                                <Row>\r\n                                    <Form.Group className=\"mb-3\" controlId=\"formConfirmPassword\">\r\n                                        <Form.Label>Confirm Password</Form.Label>\r\n                                        <Form.Control\r\n                                            type=\"password\"\r\n                                            placeholder=\"Confirm Password\"\r\n                                            onBlur={(e) => handleBlur(\"confirmPassword\", e.target.value)}\r\n                                            onChange={(e) => setConfirmPassword(e.target.value)}\r\n                                        />\r\n                                    </Form.Group>\r\n                                </Row>\r\n\r\n\r\n                                <PasswordValidation password={upassword} />\r\n                                {urole === \"Patient\" && (\r\n                                    <>\r\n                                        <Row>\r\n                                            <Form.Group as={Col} controlId=\"formStreet\">\r\n                                                <Form.Label>Street</Form.Label>\r\n                                                <Form.Control\r\n                                                    type=\"text\"\r\n                                                    placeholder=\"Enter Street\"\r\n                                                    onChange={(e) => setPatientAddress({ ...patientAddress, street: e.target.value })}\r\n                                                />\r\n                                            </Form.Group>\r\n                                            <Form.Group as={Col} controlId=\"formCity\">\r\n                                                <Form.Label>City</Form.Label>\r\n                                                <Form.Control\r\n                                                    type=\"text\"\r\n                                                    placeholder=\"Enter City\"\r\n                                                    onChange={(e) => setPatientAddress({ ...patientAddress, city: e.target.value })}\r\n                                                />\r\n                                            </Form.Group>\r\n                                        </Row>\r\n                                        {/* Additional fields for patient address */}\r\n                                        <Row>\r\n                                            <Form.Group as={Col} controlId=\"formNationality\">\r\n                                                <Form.Label>Nationality</Form.Label>\r\n                                                <Form.Control\r\n                                                    type=\"text\"\r\n                                                    placeholder=\"Enter Nationality\"\r\n                                                    onChange={(e) => setPatientNationality(e.target.value)}\r\n                                                />\r\n                                            </Form.Group>\r\n                                            <Form.Group as={Col} controlId=\"formCivilStatus\">\r\n                                                <Form.Label>Civil Status</Form.Label>\r\n                                                <Form.Control\r\n                                                    type=\"text\"\r\n                                                    placeholder=\"Enter Civil Status\"\r\n                                                    onChange={(e) => setPatientCivilStatus(e.target.value)}\r\n                                                />\r\n                                            </Form.Group>\r\n                                        </Row>\r\n                                    </>\r\n                                )}\r\n\r\n                                {urole === \"Practitioner\" && (\r\n                                    <Row>\r\n                                        <Form.Group as={Col} controlId=\"formLicenseNo\">\r\n                                            <Form.Label>License Number</Form.Label>\r\n                                            <Form.Control\r\n                                                type=\"text\"\r\n                                                placeholder=\"Enter License Number\"\r\n                                                onChange={(e) => setLicenseNo(e.target.value)}\r\n                                            />\r\n                                        </Form.Group>\r\n                                    </Row>\r\n                                )}\r\n\r\n                                <Row>\r\n                                    <Form.Group as={Col} controlId=\"formChooseGender\">\r\n                                        <Form.Label>Gender:</Form.Label>\r\n                                        <Form.Select\r\n                                            onBlur={(e) => handleBlur(\"gender\", e.target.value)}\r\n                                            onChange={(e) => setGender(e.target.value)}\r\n                                            defaultValue=\"\"\r\n                                        >\r\n                                            <option value=\"\" disabled>Select Gender</option>\r\n                                            <option value=\"Male\">Male</option>\r\n                                            <option value=\"Female\">Female</option>\r\n                                            <option value=\"Other\">Other</option>\r\n                                        </Form.Select>\r\n                                    </Form.Group>\r\n\r\n                                    <Form.Group as={Col} controlId=\"formChoose\">\r\n                                        <Form.Label>Choose what to register:</Form.Label>\r\n                                        <Form.Select\r\n                                            onBlur={(e) => handleBlur(\"role\", e.target.value)}\r\n                                            onChange={(e) => setURole(e.target.value)}\r\n                                            defaultValue=\"\"\r\n                                        >\r\n                                            <option value=\"\" disabled>Choose...</option>\r\n                                            <option value=\"Patient\">Patient</option>\r\n                                            <option value=\"Practitioner\">Practitioner</option>\r\n                                        </Form.Select>\r\n                                    </Form.Group>\r\n                                </Row>\r\n\r\n                                {/* Role-specific Conditional Fields */}\r\n                                \r\n\r\n                                \r\n                                {/* Submit button */}\r\n                                <div className=\"d-lg-flex justify-content-between align-items-center mt-3\">\r\n                                    <Button onClick={registerUser} variant=\"primary\" type=\"button\">\r\n                                        Submit\r\n                                    </Button>\r\n                                    <div className=\"mb-0\">\r\n                                        <Link to=\"/medapp/login\">Already have an account?</Link>\r\n                                    </div>\r\n                                </div>\r\n                            </Form>\r\n                        </div>\r\n                    </Card.Body>\r\n                </Card>\r\n            </Container>\r\n        </>\r\n    );\r\n};\r\n\r\nexport default NewSignUp;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}