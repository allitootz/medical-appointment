{"ast":null,"code":"var _jsxFileName = \"E:\\\\School\\\\School\\\\Integrative Programming\\\\medical-appointment\\\\src\\\\components\\\\practitioner\\\\DoctorContext.jsx\",\n  _s = $RefreshSig$(),\n  _s2 = $RefreshSig$();\nimport React, { createContext, useContext, useState, useEffect } from 'react';\n\n// Create the DoctorContext\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst DoctorContext = /*#__PURE__*/createContext();\n\n// Hook to use the DoctorContext\nexport const useDoctor = () => {\n  _s();\n  return useContext(DoctorContext);\n};\n\n// DoctorProvider to wrap around components that need access to doctor data\n_s(useDoctor, \"gDsCjeeItUuvgOWf1v4qoK9RF6k=\");\nexport const DoctorProvider = ({\n  children\n}) => {\n  _s2();\n  // Load initial state from localStorage\n  const [doctor, setDoctor] = useState(() => {\n    const savedDoctor = localStorage.getItem('doctor');\n    return savedDoctor ? JSON.parse(savedDoctor) : null;\n  });\n  useEffect(() => {\n    // Update localStorage whenever doctor state changes\n    if (doctor) {\n      localStorage.setItem('doctor', JSON.stringify(doctor));\n    } else {\n      localStorage.removeItem('doctor');\n    }\n  }, [doctor]);\n  return /*#__PURE__*/_jsxDEV(DoctorContext.Provider, {\n    value: {\n      doctor,\n      setDoctor\n    },\n    children: children\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 27,\n    columnNumber: 9\n  }, this);\n};\n_s2(DoctorProvider, \"yIC6UQ4DQ78TLWdbtm/hwFFxG+o=\");\n_c = DoctorProvider;\nvar _c;\n$RefreshReg$(_c, \"DoctorProvider\");","map":{"version":3,"names":["React","createContext","useContext","useState","useEffect","jsxDEV","_jsxDEV","DoctorContext","useDoctor","_s","DoctorProvider","children","_s2","doctor","setDoctor","savedDoctor","localStorage","getItem","JSON","parse","setItem","stringify","removeItem","Provider","value","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["E:/School/School/Integrative Programming/medical-appointment/src/components/practitioner/DoctorContext.jsx"],"sourcesContent":["import React, { createContext, useContext, useState, useEffect } from 'react';\r\n\r\n// Create the DoctorContext\r\nconst DoctorContext = createContext();\r\n\r\n// Hook to use the DoctorContext\r\nexport const useDoctor = () => useContext(DoctorContext);\r\n\r\n// DoctorProvider to wrap around components that need access to doctor data\r\nexport const DoctorProvider = ({ children }) => {\r\n    // Load initial state from localStorage\r\n    const [doctor, setDoctor] = useState(() => {\r\n        const savedDoctor = localStorage.getItem('doctor');\r\n        return savedDoctor ? JSON.parse(savedDoctor) : null;\r\n    });\r\n\r\n    useEffect(() => {\r\n        // Update localStorage whenever doctor state changes\r\n        if (doctor) {\r\n            localStorage.setItem('doctor', JSON.stringify(doctor));\r\n        } else {\r\n            localStorage.removeItem('doctor');\r\n        }\r\n    }, [doctor]);\r\n\r\n    return (\r\n        <DoctorContext.Provider value={{ doctor, setDoctor }}>\r\n            {children}\r\n        </DoctorContext.Provider>\r\n    );\r\n};\r\n"],"mappings":";;;AAAA,OAAOA,KAAK,IAAIC,aAAa,EAAEC,UAAU,EAAEC,QAAQ,EAAEC,SAAS,QAAQ,OAAO;;AAE7E;AAAA,SAAAC,MAAA,IAAAC,OAAA;AACA,MAAMC,aAAa,gBAAGN,aAAa,CAAC,CAAC;;AAErC;AACA,OAAO,MAAMO,SAAS,GAAGA,CAAA;EAAAC,EAAA;EAAA,OAAMP,UAAU,CAACK,aAAa,CAAC;AAAA;;AAExD;AAAAE,EAAA,CAFaD,SAAS;AAGtB,OAAO,MAAME,cAAc,GAAGA,CAAC;EAAEC;AAAS,CAAC,KAAK;EAAAC,GAAA;EAC5C;EACA,MAAM,CAACC,MAAM,EAAEC,SAAS,CAAC,GAAGX,QAAQ,CAAC,MAAM;IACvC,MAAMY,WAAW,GAAGC,YAAY,CAACC,OAAO,CAAC,QAAQ,CAAC;IAClD,OAAOF,WAAW,GAAGG,IAAI,CAACC,KAAK,CAACJ,WAAW,CAAC,GAAG,IAAI;EACvD,CAAC,CAAC;EAEFX,SAAS,CAAC,MAAM;IACZ;IACA,IAAIS,MAAM,EAAE;MACRG,YAAY,CAACI,OAAO,CAAC,QAAQ,EAAEF,IAAI,CAACG,SAAS,CAACR,MAAM,CAAC,CAAC;IAC1D,CAAC,MAAM;MACHG,YAAY,CAACM,UAAU,CAAC,QAAQ,CAAC;IACrC;EACJ,CAAC,EAAE,CAACT,MAAM,CAAC,CAAC;EAEZ,oBACIP,OAAA,CAACC,aAAa,CAACgB,QAAQ;IAACC,KAAK,EAAE;MAAEX,MAAM;MAAEC;IAAU,CAAE;IAAAH,QAAA,EAChDA;EAAQ;IAAAc,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACW,CAAC;AAEjC,CAAC;AAAChB,GAAA,CArBWF,cAAc;AAAAmB,EAAA,GAAdnB,cAAc;AAAA,IAAAmB,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}