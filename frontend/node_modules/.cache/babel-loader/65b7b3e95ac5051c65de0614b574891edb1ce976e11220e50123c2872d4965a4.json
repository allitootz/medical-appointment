{"ast":null,"code":"var _jsxFileName = \"E:\\\\School\\\\School\\\\Integrative Programming\\\\medical-appointment\\\\src\\\\components\\\\practitioner\\\\accountinfo\\\\DoctorManageServices.jsx\",\n  _s = $RefreshSig$();\nimport axios from \"axios\";\nimport { useEffect, useState } from \"react\";\nimport { Button, ListGroup } from \"react-bootstrap\";\nimport { jsxDEV as _jsxDEV, Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nfunction DoctorManageServices({\n  doctorId\n}) {\n  _s();\n  const [availableServices, setAvailableServices] = useState([]);\n  const [doctorServices, setDoctorServices] = useState([]);\n  useEffect(() => {\n    console.log(\"Available Services:\", availableServices);\n    console.log(\"Doctor Services:\", doctorServices); // Log this after fetching doctor services\n  }, [availableServices, doctorServices]);\n\n  // Fetch all services and the doctor's current services\n  useEffect(() => {\n    // Fetch all services\n    axios.get('http://localhost:8000/admin/getall/services').then(res => {\n      setAvailableServices(res.data);\n    }).catch(err => {\n      console.log(err);\n    });\n\n    // Fetch the doctor's current services\n    axios.get(`http://localhost:8000/doctor/${doctorId}/services-status`).then(res => {\n      console.log(\"Doctor services response:\", res.data);\n      if (res.data && res.data.dr_services) {\n        setDoctorServices(res.data.dr_services);\n      } else {\n        setDoctorServices([]);\n      }\n    }).catch(err => {\n      console.log(err);\n    });\n  }, [doctorId]);\n\n  // Check if a service is in the doctor's current services\n  const isServiceSelected = serviceId => {\n    return doctorServices.some(service => service && String(service._id) === String(serviceId)); // Compare IDs as strings\n  };\n\n  // Add a service to the doctor\n  const addService = serviceId => {\n    axios.post(`http://localhost:8000/doctor/${doctorId}/add-service/${serviceId}`).then(res => {\n      if (res.data && res.data.dr_services) {\n        setDoctorServices(res.data.dr_services); // Set the updated list of services\n        console.log('Updated doctor services after adding:', res.data.dr_services); // DEBUG LOGGING\n      }\n    }).catch(err => {\n      console.log(err);\n    });\n  };\n\n  // Remove a service from the doctor\n  const removeService = serviceId => {\n    axios.delete(`http://localhost:8000/doctor/${doctorId}/remove-service/${serviceId}`).then(res => {\n      if (res.data && res.data.dr_services) {\n        setDoctorServices(res.data.dr_services); // Set the updated list of services\n        console.log('Updated doctor services after removing:', res.data.dr_services); // DEBUG LOGGING\n      }\n    }).catch(err => {\n      console.log(err);\n    });\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n      children: \"Manage Your Services\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 75,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(ListGroup, {\n      children: availableServices.map(service => /*#__PURE__*/_jsxDEV(ListGroup.Item, {\n        children: /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"d-flex justify-content-between align-items-center\",\n          children: [/*#__PURE__*/_jsxDEV(\"span\", {\n            children: service.name\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 81,\n            columnNumber: 29\n          }, this), isServiceSelected(service._id) ? /*#__PURE__*/_jsxDEV(_Fragment, {\n            children: [/*#__PURE__*/_jsxDEV(Button, {\n              variant: \"danger\",\n              onClick: () => removeService(service._id),\n              children: \"Remove\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 84,\n              columnNumber: 37\n            }, this), /*#__PURE__*/_jsxDEV(Button, {\n              variant: \"primary\",\n              disabled: true,\n              className: \"ms-2\",\n              children: \"Add\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 85,\n              columnNumber: 37\n            }, this)]\n          }, void 0, true) : /*#__PURE__*/_jsxDEV(Button, {\n            variant: \"primary\",\n            onClick: () => addService(service._id),\n            children: \"Add\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 88,\n            columnNumber: 33\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 80,\n          columnNumber: 25\n        }, this)\n      }, service._id, false, {\n        fileName: _jsxFileName,\n        lineNumber: 79,\n        columnNumber: 21\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 77,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 74,\n    columnNumber: 9\n  }, this);\n}\n_s(DoctorManageServices, \"Hy79fo7kI7tZeL2Tn8LNzDA9lhc=\");\n_c = DoctorManageServices;\nexport default DoctorManageServices;\nvar _c;\n$RefreshReg$(_c, \"DoctorManageServices\");","map":{"version":3,"names":["axios","useEffect","useState","Button","ListGroup","jsxDEV","_jsxDEV","Fragment","_Fragment","DoctorManageServices","doctorId","_s","availableServices","setAvailableServices","doctorServices","setDoctorServices","console","log","get","then","res","data","catch","err","dr_services","isServiceSelected","serviceId","some","service","String","_id","addService","post","removeService","delete","children","fileName","_jsxFileName","lineNumber","columnNumber","map","Item","className","name","variant","onClick","disabled","_c","$RefreshReg$"],"sources":["E:/School/School/Integrative Programming/medical-appointment/src/components/practitioner/accountinfo/DoctorManageServices.jsx"],"sourcesContent":["import axios from \"axios\";\r\nimport { useEffect, useState } from \"react\";\r\nimport { Button, ListGroup } from \"react-bootstrap\";\r\n\r\nfunction DoctorManageServices({ doctorId }) {\r\n    const [availableServices, setAvailableServices] = useState([]);\r\n    const [doctorServices, setDoctorServices] = useState([]);\r\n    useEffect(() => {\r\n        console.log(\"Available Services:\", availableServices);\r\n        console.log(\"Doctor Services:\", doctorServices);  // Log this after fetching doctor services\r\n    }, [availableServices, doctorServices]);\r\n    \r\n    // Fetch all services and the doctor's current services\r\n    useEffect(() => {\r\n        // Fetch all services\r\n        axios.get('http://localhost:8000/admin/getall/services')\r\n            .then((res) => {\r\n                setAvailableServices(res.data);\r\n            })\r\n            .catch((err) => {\r\n                console.log(err);\r\n            });\r\n\r\n        // Fetch the doctor's current services\r\n        axios.get(`http://localhost:8000/doctor/${doctorId}/services-status`)\r\n            .then((res) => {\r\n                console.log(\"Doctor services response:\", res.data);\r\n                if (res.data && res.data.dr_services) {\r\n                    setDoctorServices(res.data.dr_services);\r\n                } else {\r\n                    setDoctorServices([]);\r\n                }\r\n            })\r\n            .catch((err) => {\r\n                console.log(err);\r\n            });\r\n\r\n    }, [doctorId]);\r\n\r\n    // Check if a service is in the doctor's current services\r\n    const isServiceSelected = (serviceId) => {\r\n        return doctorServices.some(service => service && String(service._id) === String(serviceId));  // Compare IDs as strings\r\n    };\r\n\r\n    // Add a service to the doctor\r\n    const addService = (serviceId) => {\r\n        axios.post(`http://localhost:8000/doctor/${doctorId}/add-service/${serviceId}`)\r\n            .then((res) => {\r\n                if (res.data && res.data.dr_services) {\r\n                    setDoctorServices(res.data.dr_services);  // Set the updated list of services\r\n                    console.log('Updated doctor services after adding:', res.data.dr_services); // DEBUG LOGGING\r\n                }\r\n            })\r\n            .catch((err) => {\r\n                console.log(err);\r\n            });\r\n    };\r\n\r\n    // Remove a service from the doctor\r\n    const removeService = (serviceId) => {\r\n        axios.delete(`http://localhost:8000/doctor/${doctorId}/remove-service/${serviceId}`)\r\n            .then((res) => {\r\n                if (res.data && res.data.dr_services) {\r\n                    setDoctorServices(res.data.dr_services);  // Set the updated list of services\r\n                    console.log('Updated doctor services after removing:', res.data.dr_services); // DEBUG LOGGING\r\n                }\r\n            })\r\n            .catch((err) => {\r\n                console.log(err);\r\n            });\r\n    };\r\n\r\n    return (\r\n        <div>\r\n            <h3>Manage Your Services</h3>\r\n\r\n            <ListGroup>\r\n                {availableServices.map(service => (\r\n                    <ListGroup.Item key={service._id}>\r\n                        <div className=\"d-flex justify-content-between align-items-center\">\r\n                            <span>{service.name}</span>\r\n                            {isServiceSelected(service._id) ? (\r\n                                <>\r\n                                    <Button variant=\"danger\" onClick={() => removeService(service._id)}>Remove</Button>\r\n                                    <Button variant=\"primary\" disabled className=\"ms-2\">Add</Button>\r\n                                </>\r\n                            ) : (\r\n                                <Button variant=\"primary\" onClick={() => addService(service._id)}>Add</Button>\r\n                            )}\r\n                        </div>\r\n                    </ListGroup.Item>\r\n                ))}\r\n            </ListGroup>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default DoctorManageServices;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}